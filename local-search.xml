<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Calculus-A2-homework third</title>
    <link href="/2022/03/14/Math/Calculus/Calculus%20A2%20homework%20third/"/>
    <url>/2022/03/14/Math/Calculus/Calculus%20A2%20homework%20third/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="205093ff3a0ad5ba9bb6a44e0e98c853158b401356dc06004b95c25cc6f6fe4f">503b769ba5d259094ac343d9873ea1086fd6255a6fbbce741a3eba2a56c9f19cced5a0ad39049a1dc707570260d190b0d0964cefcff91b4e4c18b75b5ccec0b08f7d1322cabafcbda78313e7e694a13a25a085297c07bf9632795f4941073b4458e40e3eb18ddd3f8b7b7ec8ebc9b8318f98bd03e68c0902409e27920890cdcb0440d0b5d0c9b66267f713986822da9f927ae5edb7e0cfd0da290e640df8c9d3e7324ae3eeed3adb15cb288e873b87b612b8394581c9611cd3241de44bee614bd0723288ee78be0b8234c9fd39b02540b8af5b56958b9089cf4be2912bf8d35e466396d7a0abee19adeca20517bc84e4bc77e285a5867622e245bc2e0fb8ebc3967dc8947960f476fbbf5ad7fdea29001f380c4195e0e8e00b8fbbe866f9997e66779e746de3f1d5b44d87a30974be41ab4a392510a259f2caa60feec4ab1023e40272095f4175afe2f19582f01a67b03bf372b80d215377f082e2a48c16b25da5d863968f24dfdd63ddcdff200b84780e621f55b4f7f3ef43a91c6cd8b50fb0511adce6b49da59be8d89423c56f73b08b9158f0bb1ca166894afe3535f99e3a8cd0ce60e8448f0c876457c686e9045023c550decae3b84eb27ad4734d13280171aa063da3a3e8c5d0b6f4b45c48523b2171536d29d2e435a6709ba088a04a47c8085be8594100c335c2ef0cb823f52e5e3fbde8a123a32a2cc9e7f4d9c71090b4a6bd088a7d5ffa6a9104e8497f270b92835ebf5d394d97ff29822ff3cc2214085a83e99fdf9ab820473cb741d20c25e6d020d5b7f8c19ef8c0afa768267cc9a59a6b0d6a4c9ca2a19f9aec920034099b3996d49bd0a28608275904b03d776a68c75001e317a79c10eab20aed9a12f629d61720acb4c3538a6b07b66d14352ceb99d848a559113452dd7e92d28f5c1e0893118202120f73f92bc52163733115350ddbbff594f41eb5c5bbe3eed070cb1078281449e1ca39dada79321b8da804e6ecebd8c193c15618c78b91e77d90d657de2f2c29b5a2db6c23449e71489e4c53719e969d9ae62d4418908fad1efbbc7ae6b0391ef29145e7f3926ea6d0d61e40e72baea7568d7169ca2d424263e6078acd67191f36f5aba3fcc86e0d456574a25d4e326e7bb143c532dcf1f99eb1165aa9a86fee6b36e740a5e0c0f56edb1b529118f409856fbbb73fe2456aae81e3d2e24894c2312f1d7aea6278897e7fcf6b17bbb82e93b4ade52ad600a915f23cfe0bb639943a39abf2af3fdc8d71f1fcad69a69614e47be6930486b85661b4facbcefd4797faef4bf1edebed111de12813a046ba112fc34c9194236454dfde313cc71da6ab2cdd5d5902ea9e335ba708f7669a38a7c0f97b2c2869ebe994643d8089c6f5dfe4235aef558a62ee8e0d25dc8ac24396875e43a60827753b7e17304cab1243bd0ff09e43c15f6199c667b894a77fa0aed94a11ea06b04ab26eb9d18c77fe39b5b088acde063dd3607268accf88d8d2550d67640d4087575031489c349f46fb5fb1ea9eab55c9d5413ae819e5eefbd66b0a6199b5b758ee72e3ec3652a3e0b5813408c2ed4984b021bd54fa388abe7074cdf495d1b04d5bb54eaf528372db90a293d56d58e7cea2f0f4660d4ca5d44814ef13a4ccfe7b1e88d8023261e90f43550d130224013b7ea3b6f7ce187fc59930092ce60291b04c71109537d505d516dcea54cde3749c8ef977011723b7177d81842c1c54af03e7dbe0c9f97875796a902cecb0458c62e26300df43e9f77c03d7514a41d4199c4f2db32a31d8db9e89570ca76965b2d3108537575ac8eca5eaa92dbc90fcfaec68f96d73dfa564b0537051019a41041b92cb39a3c6f8d2fcc95b5fb689c52967afe90cf614f6229807256be9e49793c679bb5b1f75efdf9010a90f98aaf85166f448e3969f22ec3b75729f985218e11199b02258237c47555906a409e186977a940d9f3e7b378cbf7663f744f1769c2596bb0a6a769b6fea78a4af9c516b10ebb48f8a5d2075f65ef1a4c0a3b6a3a7251f6924e02ef7b20a10ec4a1f915468b57371d015f29b6d42267c0d7798ed27f1ed3c74e7af8f823f2e1ce59a5a82e1a63e796caecd077e59c22364f013abf6ae6b964c266c75e72f12b35022db6c0d76ae05b2cc6074fa84bf3f73f9bdf6ba57efc39f3b0bf56ff7fad9bd34c277aae5a918c77e5f8459cc9843a2bbd131aca75664dab37843d6e61dc98360e26123978e0f0bd40663843e1713573d94506268a162030f5b892fa8ce130f1234dba00d6ca53815a5672c9742f4b6cc6fdb28f16d68be42ad7d46b048fa4b1f77a4fc5454be04181ffa3c8250b144dd4c6ea6d88ff6394899e2d640658085f88e10e246a9fb124effbdb19fe9d3896efbbb1cad3c981f882806a93e800bab92a9ccc86d6abe27394bc2d33a6c65d413cd51be9a4bdbdd579c5e0727cf6b68c3b6bc5e2da31c8913d8351bd68b861f165937aacf7c104f6bae87e95a99e4f22b7fb07b3e7df06f71b30ed37a1e22523961ae125ebaece1a79d538aa998b7d6a6f5d880a52993442f9d66d18d289698b402c6ed21f9473c40c89fe09111ba8cd4284b46ad42bd83b8835fd72b672812a2e77f863023bf6da48d96b2cd5c6f9e9e245f3509f03a129a634cea7e5689ed5c19994157f9e700049befae7c3fe9c7f4bb7161438ff46bbea3e1dc4911a0ca55ba31f7b8b8a8e48a9df9f58ec01f37afa189ccb0becbb7e9644222dfa52b0a110e6b6070e8f7948177cac3348a1449fe26de660e3349d0fcddb81d94f3d69e3b5330ec171bb7383a00da9f38ee7b303c6cd25c1a978e75898d5afd335829b7f1b1d749e70fbd978c12bdc606cdb6b5a8023add7c8f307587b81f1485ef4d4a30fedacf9f47a4696b2cf8371be6a9288f825a7aa0a07f73f1bf9319c892fc5a6956e8feaa0b9c077b3932dcc2e976e95278128d3e9b98f25d97374cf44f88b83f37711eaf1eebd3931f98b7170ca2ef1805d08087e522c8b4d9d9fc5b15a34a18201012fd5caec7c836532a7db98556d8a305837c24c31b726eefea8229261ad180be9eb250b9bb6abd31bd2976c646351e3b893754879d3da6953219693a2344c5e79a267e46c616e521cb71d7adf3d8d09f706e81cb01a1e97f7f9335256f85caf3db38ceb6b9c3a2843a2285b5880e1bc01e816cd5291f2bc71a2bde6259fd4d3c6860c5114e7e5ce2b18f3dbbbec9a060245199474f949b028c237c3ad0fe8475b1817629eeaf2d40f69af2477f246370f2450e1d55ea39ec8b66afe3c74b0af8ffaea9099a2a71f848fae07f6f860474e52499ef73dcf5c0e5af7857cb3d9468d9de6be8ceb6a8a9dc7255e930d0af4a2a69fdfed2c9b1af7f744d77caf615db292b550704e66a02c81d56a2d78d4338c465bd960aa75e4795ba161607ff0dcb255ca6b19a47fc09e1822179eedb7f7a6b0bd55df5a5c8e85403cb6075523af9e1ca1fa6b21207ffdfdac2e3bf316c60eca8407e540c3f7df49d3e2a6779b15e8d9b53c0830764518575b536580cd73f5245bc84e7a50195abcec8e9899a0356bb8b5442a7c4e56b076eb1a89824e6a0a89d289c0078e3066f299b0d497568dc2531feac26385f3ba69c4dc10272233c4dd3400670c8b0ed2d0bf36d40d21f4b9ef359105a0f9fca6ba1ad3804a6b8c133ae6a650114916b156d58c5b94d419cf45e8f08eb055d73ed11d49056081d16de590367fdd8c028e4afc81fa76122da17c9d0e7dfc7c35469ad8fb894339a9ea6d38345b7ef1f56c43126e6b18aa6126df4367906a77111275d5b50e434a8cc6de0930b22ac76396c970a9665b19e6c0f49f5a9e12ae3fc73e8f106b64f4fd9f1d9c3643baca8da9af87a13b5e78553917294741ed1ffd6847d894cea5fbb1e11015d20d42bc6db746bae92a14dd74ce8750fda385a08694670547ea746af11039c14a22e34a7a87454ff10beea29cc1a804caeaffc9e40f33881e3f8440f94e5136c00fb4dcf0b4b267ce6c0f00c68dfab8ddfc29addce0c422de676ca06d89ee825ee892fdbafcbd3a3cc835466f9c4fd9b05823bae8169bb529f53849f4d0d0ae5b8cccab44b5900759e899c81cbc96cba2e818eb0c97b4d0af032f066db3bd31ffab7dc5b4d4c4362bea01b9e3b9129cb2142c35ac9a542808574d960d8c08a4fe9ba696d35e605a236adf3b10c9fdf391d70aecea2f29270c55e0c017f301f4456b990f73ac90634ec247a70dbafadedeb5c8e781d8820586c0b5c235d12912d8eceb5b3fa7507b17b12b8dc81949cc2c0e7e82f9edb8fd599315c8df70529a1a1d0790c993f9daa353593d25e31e03286dca443ae42b8ee614c4b8db1409c4cdb861849a6502454a60428e7dc76efdeaa7ccc1465cf856d3ec1a886a74f369b518ba5778257d322333192ae6e4aa14d7c5ae7444f89557d7b880d73268449984f7f2f6b07894fee1ba53281c28633ee01f51ce0cf4aafea92faab34b070b66494740486128cc6fe5c33991e82efad71e29e104d04c989b28aa4c5eeb8414ff0bf949a6db273c76c40b78ea5ec773d381d84d00efbf40c462e6937ca441de3e9fae62a2ac6c63b5dbb5e5f8155b8b293dd33a2f305690eddc450123cb75e97f5cf3fa52bc6ac6f694c69f66f1e18981cbf3013cae5ba120e5f33561a2c7e2609fbfc35162a6e86e8bbab72a34e81cdef49d9b8ee006d70178ec26a5a9cfcb6d414857af8aec944d5490e8e0182edf35c0c6ad771425a2b8e380cf58cfa2f431e4843562a24d94c186688c8181615e3d397f76f4c12631221f1a5cf040a5ee33849e7e0108885abbc29bac028b10b7f3726610ea3294072c7438b797b21a87b638b9c3b6d257dcdffd8103e4e3b97b2db6bcf8eda367319af582b8f1b160bab2364b0eae827a98e831e77380c616d78d6e9185a5c731679fca6c1612f3ed48ee1fd62211fb55449b3e1e6139952dccedc230fc536d7aa0f4347a3a4799cc99b66ee4d87da7c681d85cc98fb3f372d6a0a94ba74ef8609034bfc0a069da33b418e3fdf1130ce20ef08a7d98c1604923aed953550f929f3182dee2a560d0a6a5d83aa7f774f5c01e880e1e3b6848068305a771f8480d68c33716e4492a3fa6f6fbb3794b5b057271e17220a430f3d7410bb13bcf59b04988dceac70698d13479610c15af7d0c6b385318f35dac4513ba4200fb6265086978991317c4ed6903a9366ac45da9363125ff1440890d6e3a281e99bd215151da70de0d3191c32b3f19e4713806c0f836939793cd314fcbc297326dd362a116955fec0e2beab1d8c8a44fb9fd50987254aef8e40c2e2cb4499d9f72a2f0b875a141e69e7189115d1ac6158372b6b2d424f5af51d545dc10e165380c711dfacd94844a2730a5838c5725776a85313e75b2e98b3be410e4b205d78a0fad9f72dae17871abb3ead7bef29d3fae2399b46a2fdefc7280723f75d86ca32719f7e11ff687b7cb9c01fc550c6ef723fd2da8f36382409293ee27f30c4e66163452056ea3daae04ca5d8dbcb57eb51e2b18d9106ef291ab957bef372b68c905e04f85809694bae196e46373f83ba60e7db872a9a0857b8e9c850f366c42c8337dec06beadfd9336233119f277a0631869b589c0ff934438e3d767fbe04c34f5d540d34d873d045dee0544502f969d2d22514469469a79a9f4bae2cee9d05d6cfdaf4c64f099f9e4880fed1ec23d0eae51c94852964b4ed89d5e5bc969bc22f77c528fac282e489a8a8f704a0a3537f46fdb131c066bb49a927baadc3b607429189aca561889a9fff19a942dcc581297f959e0ebbee17d3cc665918a4fbb91f66b43b9df4a2d2ef69c1de65cf7699d30acbfe82c0d33e29ae6f3f3bdf83d408642ba8a8f1d9a30fe322324931a55e5e8e0bdc6cd11358fe60de810581bcb846a93cb58c7d13b721497966a6eb08aa0427c43265dcb3ee87e0bbdd2b8c33d1badbbbe88a5baf91a7409162e9951a39978a32bf222610aee3627ec69138783e9843a130f6c4c74c100f0ddf6cc0232d25f4576c75bc8326dea5f287f2f3d787d5d849e9c7679c8d1523e699c200d63e751ba4db07da4d6f42d751b1479a728cf4fb902c0b3bbd559284a21dafd0e29c7bdadf00fd21d5af75dca0d49b5c2b8165a5c01d9699b94c7fe395e1a4df6b3312ac12cdeed58776f46258671762102891db14e53db60eb7ce4f3e9c93aba5b6f9d7a982b5bb188f675117552376298cdb1b63221e2a26b9e0a4d08923c2fb0379295e9c34c9c1d3b4c0cf7412ded4c8bee84d35304e81a0d20d23fb35d48a8327d40446567daa2694caa29156cdb96772f4eefae5e9cf12c844b0fc89bef92df167b9bbf63486ffc47ee8ae55433d444fcc9452a431a6469a124f21819dbd4c72bc528dab9a254375d5abe82231891789b65d5faab5b475a6c5af982feea2d76ee12cf1193660ca529a6bab459c21c90c6a7027210bfaaff1091947e46d93b3a20fac82ab1ca313f1556d956f2d482cb8b3f9adbc2ed70eeb4481e753b35e5152edc1fbbb80609e2e5a6510208efb841ed80c40ca6e686817c018417d60d6d49cc89291672c0099a97981b966ed3b3d9e7fb04cb62ee2e210a37a58886e59a5f2d8f0248f3054fd50074c35238dbb9656ae16ca37e79a5fbe7b5a21575145c66c9c8bc88e95e115c4a7d9766e5ee7877763faee85d79308708e9020c073f962d4c1366628495f659bc9ab10678bbb02cf16fce3c065a81b75f332ba067529d297bb8c1fd4afc76e94f61dd1eefaa1006b28a888ef6873fd31c972982990f5703bafd675704ed03e2f789a44a3c0e354459a3d429607e34e3f72089bb67cd9edce38b9a90486d9948687c482d1e4e144e6c3b8b82b5bb4509052bd2ad6011b30284e1bf6b979c2bd63ec3757fb32ea45facf66f7afd7cc798c66feac4c9cc44b77fc8bcdf29e5b020c237e0ac7bc9462395e407ac38757023f0425023f91ec730c0fe71d36067ef2ab8d130d2b4f06a82cc12bbcaf47890dd8171e3c2c8a8cff8c1b509ff4c0d7f3318fa97635a6d331726112407b1ffb9343c729b4097c51f05e699dec5847227ccc7ba80706895c23ba717b05794d80862521d0398678d3a64c0671b07a1bcf0e46c560922347f5cbe36dbd383ca2e311d6f8b1fa53cce247b7b0231c7dfe63d6b11666c3b82e8f4bb671d1068f21391b30e743bcdcf75c981eb5f504110cad18ea896c9859dbd047b30b8f3324d4fdc1f343a8e932f807c6a9c78c66335ff0026914ef29dbafcd926e092c6610fe3b3e88340ab779cb92a9f94cbb478cd16675389cfb1d1f071823bf2d2c080e0cae8b9a143661a757442da30d0a60520b880c8f9d59ceca26e37481c050a2677b9e7fa717843d99bc5ac169f7f5d61992de649995cfabfa0d6979a5525af760cf27e297792d50af6cf5a87879deb53aebb09301074d30deca65a9e7e17befa6201096b74a4269d3b277b47119fed4d5ec36d2d61e66ef857065f8fc57f3d977e61efdb6e2077a52b77ed8151d64f39901ceb6228cd946ad128d495c46ea612fbf374d05ad8cb5ed196e7dd45f8e8ca12db053650bf17b231fb5dcdd1c6080ee476dbe0f611342dcff7b405d7e1cec4682cff9a9382b552efc63b0c687821294fc2440f99ef8491a625c04eb6d7bbf9b3239489ea96f95ada2e13ae389098ad5560cd820bfb08158d761ec56076c6d9c0ef9f376f29d8854089679004053d8dcead212dcd558906bbf1c3d3a7e8551f69a1e073992a04ea65cfce4cb130405230c36d97a990fda81b4eed6964e0c78677246af0301b793ab9782cca3f268deb97123ab6778fd32194e7f4d08a2185e0f68b9f3baca991ed7e1c6b9cbc63a78ea9c752f14c45c44d8ff6bd7baae663cd4ced6ccb740beb9606b7ab94915e07294046276f7a6027d39b7da217367ba1d8051a1982a1aba4ed9f873242ab35807fed205a67a6cdcc7e1a4c4566486852dd42aa88fc856b34cb49f450a74bca4f41a1b8939c8beb676c3edb24d5831af897278352eed13c2b662c32a7a26747acc7c93ed4af45daa71f99976605331a6b2a1efe84098f53885f8db2c64dc19586b8fb09540471a5701b38cc899e8d427215593214d2690094b7f11235d0320df7a75ed6373f183d4e488af445edaadeeecba0cd09c12a013ae85b760509421f7371e92b53a4b4935ce309feb51fc994221e059c490f2927c61ef0a30d3e1e32435cb85765e72b138d069e51017a49f48a206ece853f41b7a1fe5c1fd865f13034433f2c69f3014b1ff592c6f2223ac28dabed36cd3bfe316fa0b77c65e83bbc8924c06018c3de3fb1ecf3bdba30513fc6f5e3f713cedc0d0f84e4f1bbeabee215decf6b6f8653eccf1f0e4e66b4fa09aeac8ecc28e88cf56e9800988b50f69ce81b21423b229e5e2dff861631ec76b95af86a31d60f2c4c6404a4275ae854d864b6436947ce6406ddb6fcd5ce00f6fce9e46545ed6e77a7706334642f6441f2f691ef3903e3281cfb7415937c0a25c1e66cc0f3c06c24f8b8a333e006bdbe197bc8a57a257cbdd01b70e62e84d75b6087f59fdd313100815c21fc068a6328d8bcf70892b83dc25a9faceedf68dd6754f7d896a8e90457f20d441579c3e652f94ab99852b21ac7249031d62384620b33d8c97d0a59e2fab83454def4289c1d5f18e6fae6408444676cff26382877be9175494a82b6ba998ba885716c54975d2e0c2e5b1dcf41f92e0d99c316f7a52c51075b96bcf30efd4a962d5baa6f81ecb2322d14148b21a4d0fa2efc6c8d15f4c99a752c6b60de2180e9be383f162621bdb617908c4575aa6a85322482e72cffc41119809ba3ab2a38bb01577717ba5d8f2d8f7f85093bb6a4d7d9938729e138f7a9b5b630d67fd2d58da8d15e0500f74ed33f8f6ad8d1cb82f5fb4214f013922e839036c59014375a3d5dc8ba10e22d770d50b09e2fde982678dcc9f000fa6fec2736ba7017c62a649e4c95b259d5bf5c9e8bcc9f8aba28bf0b241e5ba64aea346b724df081d8725090681a9c13dcf3ef25fa03c67b0e45f8557ce4699926e2a1fe1a6f89ee66527aa0b78ae15dbe41b73ddf4cb8274711fa3a088a69d245c41f2f9f1aeec5a085de3ea1048a078f8b9f7afe1ed08281c85567128df3a627992ae15e302a1b863810d9280b1b3754619a17ada61ccd6f94c24146140972242048bd3c87ef72241198580e9697a8e06de10bc301dbbf36855f4f3f45a35f3e8c9b4d3e6e29c8e68831fc759924f5c74aa76a9e3fe3697135e6c50b4cb9e4ef97032f0f499b60d002bea4194d92db21be3a4ea569daadb1c88589001bd93c9892eb08f3d029ad8b7c5ec240cff8183e87ca122fcec69957829edfd8991442ecf17abd87f931b3b7c90edf93738feaeb7442c422647d68785c080d771f4efc7878209d961a4eb7ebf0793f256c457330f8432089a9e4cec607771e44564a3c089937092163dec8d960fe2491428d346895c5fc21bb7f07516f6b907de12a8909c021ee14d6269a9416aafd507ca7631548a235f5dc41a7ddb44c759d6f4e2740829a558dd1469098b05050b84d59fc68b879fa96d7dd179bc2961ac7923d0f7be574b436102ff5242e12dda7941a7fe032d6def71abc5e87dadc122454e7747729f054520ec98735daddcb41f5c1a9333ca95cc987d64587147221b8a326d153d085fb0685c95ae94aa98720e8121c95b631a5b1f8c41d44f071e2d4adcc779ba6629933ec6e4ce3f5ec4a9f7ea4690af4b232351eafe5af9da2654da1d3b266ad6875fd9dadb3360ce7f45d2ebc1d0b2028b6df7e699ef942a5998c811a1c1c33b548e662b7b3ec4064f8c1893e91b888c18670d6b6766f23e0db3554e35f4663aa35c361a8ee48852aefd8a5cfc6700582d3e9e91806ddc48eea351f40123dccda12ae3dec38c9f807af1414b509867825c642e8e1903166a7e3acf330c488e8239c962ae19247f1ce758bb13af765f94ca524fbc80a1a4e990b535e32587bc74278d303e6bab9b72ba980076035ac6e01febc2b6462d72515ec15b2ff825e6e14ed3268f5ad59513235a4a01f11a030eb325d8fac6b23adb1074199d8b2bcdcb7c93b4286dfe747afacf14179982613e78c8e0803441eeec9a5ea37f323a91134151010f2ed7e59087cd0c3f780da1047840f270f8ca18b0e6c00618c23e93737789b3b68ffa4aab958943b1fed8a61d4259a6e40e2089022eee010dfe02ba219b657fd4dddd14cc7a8a081fcd5c1b4d8f3b5408d660d6f7b3b9a697362895cfc73b2bde4719fce9ff8920578871c311c9462180ca6f7005a423b098d23eefaeec8fd5ed5a9701e6bdc0a5a25db7c9ac7203a27a5a18cf8ae47bdad3c7e305027381e6bd3d0db8db1c1aa830f4fa9fb91c387d0b35be32a98552041e4ce696f5a0dd0fd502be376fdccf5a807441391026a55d32e2006a2f1de638ad190259c62d52c24346e8a9a8485db6d06c7b2068c7024fdfa36c6ac4d21681571e6cf802ff8a4e6d174a5ea35e9b86eb93be58439af2f90b2a1fae9a26ee40f47a1516bb68a763639490f9b8f7601149c3771fea2af24e3fb65f431c48c3fd2a802fe254bdd813b453a2f97a63aa66cdf9879c709ebe92f758481643d061323f9be8a2b2e6dcbe6bbc2e59c3739d66ec3393a9375b6f10cfb53ca11174630b6a60b17037c69f0105db01a8c640129f919c7320e6b3e6d25d4b6f796a37ca1f4f17d65252e208b9df5d9a1313f755c5a6e49654ecf250cb16c2fafcb64f3cba025130409db4aba1f814c0c7a2c3ce48efd3701d1f60d8a0311714d86eecf678c6271463e7c8f704841c274d7c911155f615029b7889d1ba13c31d05ac2b2695883dbff65c5ccec82b9d4fce6d98956ba4866881dd5755854a277c7d322c7a5410cc00b8501e126ca0ac33a4ba903d90c8edbdef935f027b3717596446fce2209c27e18099715fcc807a8b5165b12b2204310a95daa46ebce96f0dbd96a4a3abf575df9113e0bca1c8b948bdaad511f4eed9b6fb00fa30729540ef5382d74bc2531d27484c811acaeb7f6556fb7d07c356d499008ca65ffed502a3cc9283c5f4ec5433daaf0fb774e9a6a8db8fa6d1535bc368d683fd900cc243ca05f701f1e189708ea88ae7caa534ff7161412512245bd665e24d4ab9040b975a12de17d4a71a58b40a7fe2ba343b61b397ab6d4687fe014d1e5394a10e30b55a262c8df6337d8b23bcc96e59a3af9d9e5b7a042586dbc03d57302e9045cc7204c625842ed40c7bc63913a3abbb1cd5309f72c03c8cd876d7de279bc39245ae4a06c5939a11200eb170f82bdd8038e61965e210c527af7313c75dfaa258501abc3cfe1602f2b912bfb7c17101e45f36242fd6efd406935bc87825093b6876147bfd81ab43834a5604a5b06783faf91ce1b54c18057195c92bb2396312cf95eb02a9203dca3a88617f2c4942d6a231d1e991c4bf18c35382e2a3b6a1bb79427e93af796be59d91eda1022727c0d582de1acaf61d437b15ba945fb8964c5fd58a4e736d7dd7385b87ded39b81bf1850b07221eacba0a093b592f36cfdbdba232fb02896164480f5e0e7499aabfcbad8ef2b436db3764195646fe6a92ef640e4d483dd276306b820150d643f2b4cbc90495dedcc488ec81bc61e6bca1a4447653efb380023e632f2b20216f6cf185899de18a61e446d60f2042fc7fdc6672c58b394c60368f502f3060a0fbc52032c32edd8a04738bda4f2366c0c73e2ddfad1d8e15a0154f76321a87ac3a05e248a525825f950b8b7080ed9cfad07594ba31a12d5f41d56ee587164008c41cd7a98cc284f97ad810d72de5b84cddc357a26cc945bc5f30d2487c68fdc7123206ee57ebd9f3db5748983b8e1115d278b5a6c0de13acabee026763b82fe88a889b5504a541ff93f3086f5f226c1a5a30df124890a3613678ba64f2ab2fd1b3a6c137f9dd29481957b0de049df97900754ae3ce59a93bf485a2b4d6c2c2f16b92103343961a88af3509d2372796166872633bfedef4413237c7ddca497e3ae14fe2a109e85b758a56aa84c720bf7351c0dc8029b6be34d89a066b90cb93ea16fd5fec6dd88fad9707d3088f187637a617913cbc32199b4e51bac5008851dbc2c72b1acf44cf36857395eb9c1f42c0a610b92e76e350dec1af3c6f4b7b4bf07130fe5ae2806480794dd53650f1f21926895b79900c6f51e984e1bb9c1f92a6bb7fbe4f270d884aeae3490770cf5701a21ea040d5aebe4231f805ca68bba7024b523f092ab6bbed01434dd661980455344e4d464eab20d76fa6c9af4efabde4d4902f33dcaebea3322007a21f9a11c12ec30ba6da8952838db0faa577b7bc2bb871e1541a1ba6f398f3cb91eb0b0c93d25e5e8242bc50e7acb8064d40f0b058d7f57a33ede2808eb7622e35f2059ecf71ddaf73df15ffb7ce4c33787f1b362cef88c2cc4dcb549115e93358c368f4a7ab094ac4d3f34a328614e3fa2b1b8bd9a74b0f9c0c12e849e3a79bc62ef551e58ffb2ecf08face10d12245da1431f325e3e8a980cabd70f38951edf7ca84609313a7d38da6a138cce1e2d738e2b4105445ed7b40730c2dd1dca4f1f6078e5f2874bd19212b70e31c22194757c5a6bd8ede38978b6b1ec23f9ebc371d7fe42e55f6f7c93b6f3372e7110cb4ccb8de3478a5cec61f7952199e6e5b2a486af17f1a00ffdaebd70b347aa31738ba4baad4d96260efae56b10d7e878caa946957386ce652bcfb17da2f8ce0ac6110fa88513390d1d3df074893c9c7ed218d9a591df85e5cd6f2642a66aa15153a4d357e596e21b233b1eaa7945748a7af7007d431d3aa15e69596911e4722f2ee6c9d5318dc8984686d62753193c014fdf02f89c7193ffad104b2914b6b2d6dba3092cbd91af4f69880da1d24268266618904ce3efa014a9d5bdbd0cdb7a107da71e98b394067dd3bafa9a47976ada881fa3469b4c8bf748383f10cc230c4eabf2e8e68a56607a04d09e2e73eca1f1c6aea089b459496c9ba1e22482f49a3474537306a4b4b3faaf1f5eeb4f7ee4d1f62eb8b8070bf0cced78972a8eb094bd4e7ccfbdfbc2817c11fedd3b8996feb4fc8fd9fea6d39300fd03f219e80132967fa7009b8b7d237d401ee1aab5bf8a32813e0426fd0db052711ad07108c6c48ad0b49fc82e5122c5a3fa4f6626fbff2475f2c937337f3a75389eed74127baf5d587c1ff27aae56a9fa08860bd210eaf52b15ac60dba6c31fb46ee6fcc19c4888eeefe41dfb4f1ebfde5d4105acba266f60bbdce963d528322cffc9d2e1cad2e6d1410a7299c9e127a5eaf4b8028140ee81a428f3aa54b1e4a16be0e93beb005a2116df4e81c64ab5034b7359844d891787841b8f476979d0ba47e8a90801e7e2a447cbb5bc8455a82e92457936ef177a499c4ade2ad71f09e62c2ae2c1dd58e85631d73bbd4b0269cbf965ec963f533c26dd86d44db1ce6abc51a2320a3c2f6aa277e94283f2f8cc37eef7dc26b36d96ee8a769d9de567398c0a4ec8aae9b344d9854db4503685f1785ef0e071c1e2770c90fb480cea932a641ead96fd0ef73be276b7e14b1230ed1c49e74596298618b976e2dae8b0c12c54bb007a0713ef87bd2ace8f24cd21e25973c2a390c29fcd18128a6925fffff35ed474e5e7d99d1ff1056940741b5500b1a57acf7c0cd2cc1179f71a57e7f4e6ed783d32d49941b23f35da3315cb8b4dd0dae63a9cd32cac71446fd4f17cd50b9a71f5ab0b2d28449636f8ac408981c3f6b188733249d8819e2bda59653fab0c795a6e5893eeec4b59160b4144842361a66c6f730bdc3080da1945bd098d835fa87a2dd326f8d29e99f1d0acec99e8a89497df1a363a4d784c5995ff909ad6cc2dd899e3c4987dacb8a4ae8eac5025dea487a3d63c9aec1e319b9b18115a6886b338535094b4df1932c79ec8dc6193cbbc6c158320b94395f786a133d1d9464501db6e2f949f9bc0856cbf45d6995c2c4c5bef792779c55650b819ec79171bf3c98b17ca6c4162416bd960e4cd22ff6a7d79bc11cf095d729da22cc57d664160ae83d300636c1c50caa8094c654348bf22aeaf1e795df5e8ec305fbf0d9c1d71244fbdd9eb76b3a2a73c0c979f870d3e1a11302a24ee56333cf16f826624c8b318533c9e454e8029bb6e6fe6ab1211038acf22b4b601f6113592300239f5d46b5e9042baaef515d653adb99983470ec468d0351ebd8ea355ba257dbb951ab546dbe125b95c3fcfdc1e422c2daad6a905224d37b4f555a36b00ffa64943d2517811f1ac82321938b720a03ea9dad243aec91160d3fe24b4ff86bf5937db59001c5215d25fab93811122b2fbe991b8a864a44100172d16ef10747d330fc1ee844d59eb585a20df6d45b089388f5dd8fc5a8fc02e393b1cbf635ce1ffffd09b6f4d5e1d23f353668d8860c619ff5eff9a7fb4c42acb62199e093ba605292c265f818828f99451ad1b8c2aee0f1f6550bba40e3cdcd29dfbdf8bebcfb01abde30b4d38f2fab525ea5758c028be30a3f43efbcb2e901bb442c74de0c494de8d35815f2e4e1502170ad65dc9efdee9805ae129681757e11ac93a1d3c98595ad8785389585285a3f9ff1db10fd5f56285174019f00f185fc22734cd0c2f2f18bc778e84a2d6cea1037c9c8ae14df56c99d3001d4ace7c084e911d172c30feb88f03dec4a38375efba4ccbfd36578db7c793c635a754322a18268e0df3da8dad5aaa6e8f0cb0fab32dd4c3a01a77131e284d01f06796af5e6c1af67505809ad5dc469072f859a8cfa0875baafc6f38eb9a61ba2578f32c0ad4daf55e4dc6ea989c8f4b78d3a49753440133209001159830e806272666910d3e01ca63ad171fd400c433402e87f449ccbfefdbf3f281dbb016c1bd5c3e917646bf609c6bfeb75869025cbf1c0a8530c0190abf728aa1e6fb2585eaf3db7c105c73dd53e4c07cc3b6764b4e0c7f4fb975848c653b456297550a3f75ca7476390638a9ae6e97440f8c9dbd268ffb64a67b05cc90007679aa57a5bfd885712f468f68b6a42ad640009fafbc23f03fe34705bb5a3619d8e502eaff4c7c4277c6c9dac2f20ec28ef185bcafdd18b5119fa2da89f86d699ab68f7f4fbedd0ef9cf62251d51c2975421305b5b18a0a99bb884dce991db072f77b6c68a2e721ca8364f538d64b89f541f7c464f2c0f714e585942e393c05ec205cb2f3b46096ea2d3e73433b1d26d7cc1423e567f36f433462cde42157641bab1a1167f69a8f4329b95e306daf71a491e5137ddc65a2aae4182c6aba3ced34cce8bf116a959e58649165aadc5983f4baaf100b5051441e0c422cad445aaf0b5de0f4d5b1f9b2537867e5b863c76c553658fd3db1122f0bb079b14db28e6e44b8cc2f1cc7d53e3366f9aa7aee195a3cf70c3a3af09a4ad665a45fc9dbc7dab65e9a0e9cb9cb138136c815468772588060e69faca50efc9ff9b83cfb886d819909a7cb3569015fe430bedffe8b570cfe3fe766a8a3e53b2c0762c0af09beb9af2a5edc516e9a5d9d41dcd38267d57613282c4cc02d3c19dd37729cd6bd4e6888df7003d8f35c7f4484efd96bcddace4b3e744cd2e31a71675586032b7fa0a92a9e8e38af3bc10d6ab732ce7b07b33c91df0a26167e4e564097d1081ebb3b2abe02c6767d00187b993520e4091f8d42d453b76388e68f8db9f913510c6f017933032378dd9174ced5b17fc94e4c197de8c4df2481d6c6593a097a267141cedb935acfa7c3c208a10922a397b8015e7651d1b32c356a30d6a60d07bd06bc009763c3dae8baca12b1023cc1d23cd8896079868cfd8423f3a2c18ed5c58a34c6b884932d4668f96ffbe2d42c8bf51f93d3b7defb2fdc24925576cf84a7305af9f4af84270050d676bd748d7270440460a346feb342d07e5f583d2649947426e1209c01cb4fe5383349ac0f2f1f150cb9e056bf9472a50bdf5d7b4074e9fb85a798e79aab0fd9b266c07b2378dbbe47c948057a5fc95235fd6eacd7952cf34ec7a321aa5fb9dc2a6dedc3b6a8ea97b9df725f0afd9b8269b7be5117261e9f0cdaa8c8de3faaa2b972dffb898a4db363899369c28143fa94a8ba0248ba1b24952d96d4b9b5e71e1ffc2521fff1a694105b0977bfa788977b0f6cfd047fb5af95a283de20486008415f20c3724c5f5b923bbf1870b8f7edfee536fd2d265ccdf51fee9db8bb442affab7b9e6d4518cc83bc455eb7a4aba60141c6cb0329dd1199a76f518af3d09c0ba4ad175659f5b23f89b1e8f790c91bed17352ce2e3896f5ec37967dea9960f8741e22d58b818c3f8c137a31e511f639497f8b8089e33b2d64b978c007826bf2fc46d200e910360e081f97a0218da120af7d428b3c55c23e190bd8aaf7b315fe1de6cda91a5de34d2e4682c8d443cb8defced0bb33a8151d2f08656098382248aaebdea5789459dfd2e9b8ad70d92e36e4135277f0548aaa8601a8b835438a39de8876cf5ec18361e2789fe7e872dd0dd5f61c6d5db478111c2a30f1f5a6708ed572d9c262ddbc53f0ecffbfd5b140ab51ae77166d1f00d8d1bb642f44f1610c21f105e154a542e7816689b980f1653f15631596810028798f0954b8cc6ed4442c819ce01b64dfbad0464cae8ecf6949a7aab7090beda748709c32b8cd36a288ae08763d3cb87ffe887761ca1e69e315ebff2bc5e03c1ef391b042f81795660ae19684b3538597fc411265363ce5bb59aee47b939654e21e33de0e949e01c6d3c99545bf1506bd8d0c52047a38dc1a737b5377ec8eeb7bd00631b28c1aecf58447036d9a315f034c980d8057f4921d377755b4c5e495832bb76afe8bf6a8c4023f8aaf9142b2046b3fe3b1f687ad3f505adc329124844a9c40bbacdb50b6e543a5c7daca35d620febcd256ca4c4ba78ea0ec0b4fd5bd86dde480be6fe1f4ffa5a368c9f71cb9fa109bfeb8526831b82830ad9eb9b0960351fb62c84c8c08efd9146274c1ba39029e4dc2c3f99e3632e0dbf281ff4c9250626155682d9bad5fc541117a234ca7d4b16f00756068e0f0bcf39123930cc61229d5cfa37f686f7df341526f30e551aea9a52e6917513197cf6faba4f419da7ddbb1e0a85baf794a11012915fe1bbb87f0bdc71eb0a988374da215f6dce3c394bb6c5ba4adc9b82e2b4cf45b616a1ba4dbedaf5aaf41b88ad23acc850e9dc6dc026ef9228a3e9eeecd24dbaf99f9fe7313cc06b98527cd30fb7d625e9235b56732a469ba17ae760490f3a1c77675d5012721204eab0ef6d3f18ead515daf3e4291de5640d3f5b06544a3958c51643089d3e497e930fa6df8ca393fa75d3e92d013106f8089200152622794a354742dfb80e8326f5bdeb5e62433e1fcaae9136df5b2c454979b5650900ba3d7017aca05550c60d20f2600aad05fd0ce84e1d5c0c8b896035be26c6c0b3cf2afe2c271eb234d3c3579be7d222e090f4e1526fd09a2a249594923836017dbc034bad783740f841d8a83693d96dc970f63b2cad19b9f6ba8b91853c93584de8547a7229e6e397774532408830641e8bb76f0045aaa4bd684f719a0acdc2067a90a957e4d2ec20c3d2b4cd82d87e63da2636e1c4d01922fb513e269919dd6dfd6e7fc5031da168c665274fcf4a10c4cef6c52aa334e47034e1b393566a2c9d5da40a56550472214d43c420f4a123201e5df2f1b9e4fcc1df52ba0a07dd8c93871ef6b10bfcbbe11b38d2c1884e15b953743127116e60aafa9afcb6b779008529ecd7eae85cd17ae12e9ce8fff4207bbc6c1034c27f56a7c39587ef40d9e21f67c72abcf9d2b9462870f5ce2eaddcaefc78ea502299fc9e64f47f480bdd7c0b63867e55c89d313284f55942145b478e7b0759e65793d902a53181e6a57a36e405467055e8fe841dabe1871bf81e898293c67669ff3455065ea72e7dced95283dad546d9d127de90a7abd0ff3b5e732a0024c0b87c4061582525c8b57ce9bdcdae6f0c56545e9e9c8e4a5649c28905ac25f1ae71177f3a67a1e1c273763a4d5d1ecf5d96c5ce9f38b2c71dc5dc838592f392cd9d9a44f2c8245a0ad3600f50ccf6a6e7be4c9b79b96387ac64d2cb580fbabd298e615f6e1a7518535567025decb8c7c3b3633df0e58b4f9af75610d4dd20aab35d23c67fed5cc6759378b7a3105e87d1b71854c7c44d489706832acf9cd52a61eda4ebe75e29935b30c3074def9f7f3bceb91b712dfd465883748a7598604755886692a80312f3e2a33e09f8b6392a1a294e08029cfc446aae0d403754c7d5689bc408709bcfa7f161e34fba72663abd185422a23292d325e82d74e47e0c5e735551a29745d01d744e8a4444d81744e94ee1934d0a3e3292f93051b2bd6dc3ef797044a9d6f19c26eeaa5f19c79217a75bc865fe455663fa091b9fc7db535bfd6d8c8f10513d227614f9a2d022a6a3a86dfd3aa25fcc1d1eec5c42c13834a623c8c9783967a143f7b9d94123305ecd0b83f20161a40b8b18d6eb1b39ad5ee350d6692b9b956c594f488ca4f19480cec1f8ff7799d2fc59eef871f23dc4ce91e6cad1cfa25c061afbb6c2dd4f256f4d63f77db34c9d3723bed6dd153f0c0b8897d6076fe9f2c535e0d52e57895cc21a8802d0e0055fae42095d7cc93af60174096487d48bf779ef21c3815934c52ca12c5bee6606290d1434e246bd3b82dd2f4f77132d4bd6482d99d0da480bb8022bd90e253c9bd66925250b25bc32db790b1ce5041b0b4f3451051cbe5579f4bec960d99f75548cd768104b6b8d09ee2af28aa360c101e1c78a95a3e2893f32b3561234de9341dbcc3d8c6f41a0d463bb26227971995faa895adf9ce61402acc4e25387386415ee0c9b714ea618d0126a44291bd4e10fa843aac1564b0f5278f753dc0c4d79b37971cbe0dee66dfdd55ae12ed4f36a73eb7651505a73d4655d8b5b8fca0d0324c1f0d08dbca6318d3fddd8ece5031cc7d3a5a9a8dbca03fa860caf59ecb4ec01538656557b506bc76fcb0ab9a831d2b7334a1fc0dbf5cbe4ff9a621868df192edf1a0f1a97c3fb88c4c212372a49478154fc1554d06b73fc758b6841fa85c0e62cce10a8584a2b49cf60d98c7f7a91deee667b582cb3b5266b77dedd28a305375c872c1dc8bf9a34f72c5f8f25e4cb67e77bde8b46c62687ddf4c64541a9efcf9afd294ff0f243d305f1619d3496f9cd9f308f6a5ebe9b7bf24b557ea5c9403731f75182310861664682125acc1d96cc505b77960031a877260d0ad4cb507605c10f0764c58d57fb0444ba328545da4e8ef81612c0843f81b596c27d5ec8ad8d38df07036add74267ef8d31afc58ba4852f99e2aedb3289453821930a15893be6ce2035044a6846ea24d34c1e656a13f75eb842af3972e307cad108b4b9db0b56fee665b76663267ad50549cad89bee6ac005ff8fd95ed44a0317e1ecc3fd25e09357fb5e1400cad8f12ec76907615d8273a3493227e4ae8cd95027d6fb09e234b2b0ed23cc4e9e8b07c7fae921cc967648fdfb9bf7bbae9cbec4130b9f82f232808237b40a6a78b97e7d3c35954ec53d1bd24d147a48d31a3f3e92e639f2be1ebb80ae9e915ce92f5d8877f3f303456d2f03286098ec9b9d24a2dc9ac263ac0b7b8812adface49b923ce69f5ca7a561e76dc2941fc85ce991b45665a88066bad37bcabfddeb802268116fda937eca72ff76f68718a1ab8a797648736aaa0c9ac9ae2df800ffa213c83dcf732cbf4832e0541e2619ccc97c63416034041a2a9fc67c5809def66c42795077882096c011168d061d1c994e93d29ca8a1c9c68301c16275488723e5a019e67aeb9692f3e82a81ce3dd2b764fdc947695ea25fadae922e63f811a85166cca1a1efb40180b2e136b719c8014439a27686fa8f6941a0c539312399f52ab115c39ae6b01038d96f662a1a1fddbc5c9082454a73254ca892d54a078a759b70ea2c9032aa0ab1dfec5793dafbbd8cfe56432dc25ea00ad6044716bce053cbf3e898dbc5e86df4370e88e8a10458b07fe7079c8a201db802ccc7cf0acd265fc0ffafe1803ab2bd8b8eeb2b51af0374f3547950231fa1c56b85184691d704924eea7831c023ade3afed5017036ebc9cedc08f862bcbbd2cb6f49cfb6dc5d414f0b6a73f898f8270905ae2cc745b80690b833f3ab6302091772e5b24667e8a2b32ab83e7233198d0e1406b05bf09e105890934b4865fdc6ebd6f0fb079ad19365ca114dad8e9c0e5cd46f04032dc5e635200b4fb65851e8f1e4ac0e9c476ee2f7f48ea7086cfbf28aaa86706b5dc93d5acec887ed5b0c8dc00d0681be7548f9754bbf1b8e4f59c46a00e5befafceb01d24c3e3c9efd18f2658ab8d310fc9f02f4c0d55a3f87e63501ead65d32ddee0ad6d88d3901aca422cda386da4396f728ca0e855ca6763a24923977e678226f4b6c412a3a265aad81e0c2fa2a411537f229337259107b3bfee3956316a9d78ead254855aa4f44ac900229ac2c855738a6d27a22f915bb3d251dad99265a338ec7415a967bbe763cab964fa0145a559551003537853fb568692aafc6b971e8fd59e186b319532ece40c481c8913a0a7b5d5748774a613a148a8d71c8205fb0d2d1ea3b58a877a0d1032e521ad52018c391f830f8db1fc9350cd19cdddc756c454028a8473ecdac5bccf026704d346356af3cea8a77555151c8d13b57cb4e8a272f6eee833ce131545cfaa7e95b3297e16babf973f5204046927f2b4161deb9ec2cee463ecfe97f29bef045f728d533f61c2a1df81d57422dc4de3552a077648bb40e990f3f6d47af735390f41423ad8042c9a98e8ae975be559b6a19123dc668b28348f159d16dde0d3130af8b30b92805a39ec104dffd1bfa819e9abdbdd7e9647059f01799356b73a4a333e069dd20dbb88ad7f0f324cff9de1e3a4a1197b64ea053ad890f11695ebc30af62231ddae6ab401abd09268cd3cb8e9ddd3f4016774f57fd98c5f81b7778774a003984dd9e3f2c073b21cf3de637d8ccfc20e261b712da4959cd624a4d130b7dee13902d45538a6ed019e3e05b752b6e26d63f760d50724a862ba181f528ccd8d121201dadedcd3c62366515916134aa7f8a4b193fa2ae0ba529f788375be78ab74664ab8068b33632cc5e3c19381ca95fcce4d3fc8437807d3df468a9a5f95501d4224820ce0f1fe38a12413b36ca891c17d071b27cb1260a4662d90bc157009e84fd7b898c043b643788885d87f4b5030444a243528e3241eb00a35d4b3fd9b8f711e1912fb9390ef08435ecaf4b7c49288bdefd95574415cfa0b6b89f4cea9b137ca610f5f01dbf4a020b50162d9e7428fee94321acbdce5a0e5aee1384aa7156b73378e57d2dea4fed95916718ca138ca6e5c26e7e63d3ba76b43109c30f2e8e5a3c7ef0f6e2ec78b1ff4d1e3f2b86357de9c8052e0b8cea681088e8a4b14c68463f348a8284dac692ccc76a9b00132482435580fdc5ca80e150791d7795a26d12f4c88bd32aefb025f7ba239d9b32b7aa900e15a329f5e3d707f1a516720b6b6710a805ab037a39ff0ae7c9b2d5c0243c946b4974c5e7370d258a8a6faa7684b02423d7abfaf9356f988fd0ff89c611955d84b128cf8398710e3d404c163362f5403fef89a7dc42f287a1e54ebc87dcc553d14beb19df574e5a7a2ed0f5be3f6023fb1166fecd4d62685282b55bb04060e9e04127419895e6f261398ccde2120a6b78aab6c9fbed202d5c7c1ed134e828a97108a188270c0fd5ae9f88be54e46da5215d23f56163483a65f84163bf94fdd088791d0cc021843e246d9a3057a52d75a1752d777a513bce683c150cbb821c17d5c978b4160c13bdc111019e8e0f24e67b1521ece4b1e8c506e10c37de4a5cbc0a937614cf367688572de64e823a935cab185081a76c0736389b54280e78e307fa21649622f7be3585bd0e67807ca0481365a5053df708aa7c67d8b05f50d73ae6929bfd474232c9ab3a53d9db7c8567460fe643bbe2caec3468991b8647c7943b3fb4a78337b454ca36ebc9a0a5ade3431c0c7687731be16f9d7c1fb5cc9a3751a4003229403cd752a9fe5ec9f8884dce9e199b55ee8f243edf8446b2704fbf3caaa0ec46c8fbda95b85a745bf01d0d9296aa566b5bb017650d8b4af73ea429457df1b1e5dd1d2c7ddfb0eb68801af9883f81f3fd05eece25ca43ad1ff3c0d507bf8037ca1b6ce11b22d046746c8d244bdde2d690a5f93bc720fa7587c8a92bef1e889a48a0f158d21cb430cca8075f81e1bb0235721f9eb77a0884fee7228f85659a410654a00d0d3cc1416cfc6edc0c3adc6f9873b9974932c14674eabce7dfe584930d7df087a5d735bd89336c5686774e9895e8e8d43ef8e140a496a93088972d3598260a1e9e199ceb5da3bdf7f1c1699435104dc258de52551918eb16ca2d1a8d32b2426ba67256fd642e8eb10e7c7b1dbd61d9698854d0a1db5c6f95c12a0e2dc36c30fade15063d326f971a83b5dcb04fc7481f7ac7de344b7b3c5c9bd362840a9c747632ba1d783b9bdde5a826ca688b11b5b4e2f39f346b8a0d29ceea70001eb7ef0b5ef33ba7d3fc47c16641c392d6481230528b5cf41909897b583d724c6d594f75f298a7168a36513e8f9651dfd2f340c47e4fa78f6479413df5c2e572eb9b5f853aa5d26ad6f49895d38d4fba7add32478b06f0b9feac14cf0c1be23a99c79c8c01154e52e1350315d95ce0395e311bc402005d15e76732a2d66c9281272bc6fdd48fed80e262c5c0b3e50dea3eb4bc84fb323ad277d6616abfc0840fed9b7ca5159ab5d4c7e91174dda79206d2971b9f03f8c29e4e0435248172a01de81edca7cdfa3842826c4c5fb392779d7a89c9bd461be737bf0a40bc6699b47ee85f93f5dcb3afc58e10f5f6fe23ba089983c7bb209f96256eaa49e26375b68d4f470f83ba2d07300ffd0a94400949cc919e59a98868e41989a37b1200050be617cdd6f8929a0de2903e28a2334c6715d101ff370b0f727e5db1e40d01bae438d2b16579e6ad0de1c3811cac79c54c9127164dbbdcc6a005a04f80d7f387fb43fad58317d13589613aed14ffe80c415407dfac77468106ca89c4db75a3823efc92e3ea87d7b092f886cd545b9cc4c5f40635b7b6c3e967d4f12c889257fb643695bd935c9ce5f57f709daf6a438c694323b02fe1fcb7df2321b7ea8d74750c072a91f39ada536d03950dc9b74e022be834c1bee2467beae6df9e5612ac32dd9a2c67649c339503648417127211318ae11846a5303c60279484972cabe7fcbc534e9fef7e3e86be08df626891006cadbfbf4738d4e4899837780af9d284c3462f8ced8955f48f4ce1173fb0710e392e0426badb9705295ee93d49462735d60ec4a84925b855cb5ceac203e88dbc1d9a98fadf4a1028938d03b93ab5e92016b663fa63234c4f7006634e37a4c4a32510cc7c95c131af9700d539517674e14cbc67719638bb1cb24a7cb7df918982b392a9c713aa4f6643f8c2980c4815aa99723d45049b76343de475900f272389dfbbadb924aa46f26f1f88640ef331e9a9b246ad51e52b0971ec8f3c574dbcc3bcbb9acf02e5179343e978191304c50a2c4da740fdc08f6f1f02f9127a29c0defacf5025a68a25fe284e8c828a79f7d38a3301d94c5263e6c3686b597eec1121492975bef91a6ea81f7a358d3e0f2931d4e34f402ce9f590bbf839937d6adc6bf1256ca93da8498deabaa923998930aad55f34a1540c0a760b44313b016f256ce94a0a1bf1ba3133c37b6326bdbaf591740715455cbba69d35130a34a0c5ceffc9c8ca94a4ca1242a59e525efb8e19cbdf89a5a2c0337c4dcd0d47d18d17a5d589bcc1179a61b453a0723b5be42cb4dd23f78a44c6ad4ee67ca99c7bb28a4020c85086462b5417736b4e180d48746e490e653675448187d2662c608dd4be501d3577a5d1d1e1a98bd567f776b3b9813d33da66ec7c328f0ad926b6265aedc89949d4be644237e327708719b92b854c8f55c83d6dfe1ab151871522cadc1f758d25d059653eef3591f15bbab3264092f12005c305335bd5a83eb7d40cc0811f310d9e3ae949bc9e02e3350a2bff301ebdb322498c6e3bf4249f0500a136a312bcbe3953655033a81ab9d6af017731c39f71d5936fe231991411bbc2eff78efd03e4a84d977cab51db70e338699bc24b8d24270caf1b7c7e663bb0b1524bf34b6d4c31080f5b5dcd9015a0ea9f3c90c4d3edde288f21a641b6588d9893360bc6c19b15e177d3547ce33f480ce5753b0ce337b2a408ee6ae09cadf61b2d2d5153ee1d2eddf0c90b4ff824c009c0b684dbe26d72d25d8bfad3edc830dae119246c1dc1f78ccf8bfce8b4ca2c8fb512e4cde4fb9e242ecd788265d9be3f6b1486a9a52d6f875b08de3e5cbde1aad800627c702febecb1ea9bdb8acf0fd817705179815fc4813e466c8e88968ed9f4af97ce98c004d400ecce719fb4e9a16e7f23ee72a526191e1f7e8758d184fc20314d7baaa83cdf5fa7bbdb0650e5bd745b966f2a28ee50b9571d206a40d38dabf9128c7eadc14a5e3b48d2915256ae032b1a232361b9dc1a51bc9fc29e5dfe81c96236f9ec5f97b269ce44f876c045e793d600cd6d0321e27f6c62c6dcb733e5e85663e27876bd6bd2710583890ff47bed567fc85d87c7949641fabf7bc0bd7359aa2ae72984b1082fe3e9d456552ab51c0a604586d5a0c18aa7e0d183e562b99a10c9eb9341adf176ebc617c682a216b9a95fdc7939da066f7c93ea7ba53f646acb5329635b46b661d947b43ab5a31a08cf523e9d26a49f20c40bae6703b332cbda738d8d50ce7a35ba5b5050d189c895f2ea8ddf80079e5e7d5403dc202516be536ea536a53589cfff295cb47ed5bf9b36843e615b58efce29e37095c838e9e3555349dd1f9da19224a7557afa103bc033832f71b36d4ca541dbefa18edae2cbea23a6bde1ab060cecf34ce2eb09c63ea54a269577361b1d5cd41926d3101817c3fe4bda8aec8030fa4bc567791faab6d589305ad59f5ebed345a46d89eee2043226b7af37ff1e1c94f94a844fed29b88418d76a6f4e8cf65854f798b1a6e21f1415fd7ba12e18b4ac2faeafc1f001e1f76e3587e6db9577e7e07d2d5039cc3b9a5a39fb4e33820b4954ff8589cbdc6d7fcaeba4f10af9f2e6d041f23afe93204d6e11e56b2a852a512d57c8a064d2f403c1f6977d9120779a11b7265abf7fd8b4e3b8886c0d2287a7a7a29cf21a2036b14d34fee5e0c28e7f85299d87db70da6ef5c1194a714c85c8992b1109172394025a6f35cb9fcb3c6734a1425119ffab29422eedca795146e4ba10538a17569e37800fd20a3f1ff9920c858d55030923823fabc5c6e5c26f07244a9ab8e35a8e831f251e3873bbf5f1a33b735f55811ee67dcb885fd77fe1029e63833f9cc317185f40baf7802d7898536d09fc4b84aedbe752d65b451f7b16883ecd06b98f85d25b9a06479546f14335063324ecfb5a05890e569e2783e3cb776d4421f93f8e5eccc0440761cde8b9b76f69fb05a866319cf82d734dc296998cd44e79c0e353081b711b456ce9905b83bca71094049906e0500308064b9d1dd68cdaa02860d1798001a6660c571cfed50a22bf5ba91240356825559f01ab28bf16941227e2a55909bf2da22b3ad82061d07e3262b10d3ddab145790b8630321c414c876de30dd59819acac5c493278036cad1422745099da076c7eedaf7faea08f14fd2078ee3ebbf48f4def1d02a3cbb786a8e81b2fa3c0bce6fbc9ce0d0cdfa43346aa1aa1ff93164420750890c9040c86679d89e5819932b53bcadb325a548d4e41a9a84142d50143947bbb86c49e265e16a6eb17de503fa65978437b1fbb2b8c9ad32e1922920250a112af5813afc0c89b81049499c2bbbadde480d9adfe52ce3e04a53a08c0b4cc104e80b58cba55cfb87d25f6701a45b99125c34693fc32d7230601114e9a4cf0305e02005ae4158e39f685f946743b8e15883a6631de0de89ed30d304389567ef6a99cf5c3d6e067ddc94fb82cd36a3c8f45be27dc85a4b6e51d68d45cc31e84d12c8cb05460654ef5c6174aaebe8905fbb5e6b2ec3a41ab944fb15f1f701494083b6bce08344ee3fbbe838ef965b6496afbfdd9fad51f741c474c0d1e1098a815246f537ef054265ad4d2eb2b78e612b217be50bfd5a462e7bd4811d8f5c0d38f6bade19121ba5e1a37dc25a46e8fba6ce2e55877bd110dcc1899471b63f27a6f8fd7bcf24a3d33bb730c027830a93ea01c0a73f7791a9c57233743fcc8fc63b643b8649911a8cc0167f9a9bf8d35cc487d81837d284a3f45f70dacd9859c43e007cc1b0ba25faada18e2a3e403843c447dd34889c25bbc99c7b6247240aee66607574cd43b6bd880fbc3ff92d0cdc90544b25c9751eaf25fb86d319c7ad264364c9de2f69d45fdadf2c2e733c515d7912e788bf61879efa861918fe5c025355eb48992b668a67785372f76bb2f2d6671639a97497ddf9343cfa19baf5fd1935e2b17bb492117c80e4d01d1ace1b92672747c99bb2f6610a149cf6e9ab91f8039fc71673b5d9a20e43ce5e95878f6b01bb7a281c53144d2811e99e2084a9a24d42725f38c14094ad667a63a476acf6853b4b66c345359721f26e283e8f3134a685542d4e2b3fd7330120fb7fc25b7238e001b1757a0d4f3e7bba3edccf1505e0cc2b50aa7189ab3ac7e878458e9957bb42217aa80c2a49f702a86614792bbfa2fef81e07ff267ef22c0f7d7f334e03e3946e6da681f5dacc3568981220e4ce50752567acf656531b6be8856869fd9d505a97a6a4017cd03bb21e25f12ad039461685d9e0a7e9e4fc080e5eea1e29fc8cd8f402f776b4dd09a7962ba0af6d4f011f733ab67c948fd0e5e54cd51035c360f96b8b9db3357e423a26bdf7bbf3710228e7d99a3a7a59705cae97ae1a93a69e3f6dc8e2ea9926e4ddd75b80a3d2f53886fce05c7f26bb618d21670b428b55aef48bcf39b42082b02a0267da2ae90a2cf0c51b4f0cf3e45e72de9421cac18e5cc5b097b06c8674c17e5aaa8d4a9a6ae2c7364f0170cf8b41bef890700b387762ce4ecc80c2f2a234bf05df241ad75097fb84b2f8c20f422e067e281ee3bf982edc708fc8c4e618be643ed9ce985622fe50cd7c6373355704248956aaab92c2f0afbb9b9d37b85c2e1335f135c7872726e783fa75cf72871aca1ddbff99ec510633c6633abbe08dd76b5c07c528c88df9cba2795e8c92c9d50fc8524290b09a25cf07a85faddc61d302bb51105808c002f69f528767517b36df84bd7922777b55848f88602690992bf10c1919eac788fa9848cfb9909fe38a2f0fa4c6936a280c26958c24fbd0e65428c366c1d53f2633088e475bf227520ade631f4cbd87d06afb5c85a3e4eac857d6f7d83252ee79c17aac1ef7db81f432bb5713a61eb3de460ffbfa176866ca37c64b7da994b8c9f4fbe9ef4690519016b30d6b6d4ff86706ebc5e7dd71127a3559c6a837b1c9bcf184c97c90e4fc3bb66a0e5faaaba14c611a78afd8506686c0cbda5d7cea2cfca11bc99601a1d4c7a67884949d0dc45494f3954891baf031e44ccdc74a7dd56e76c64d20af08525ed8c16333aec24d78e5501f9d232b0a66759c481cdbc0575de4daf96673dc9769c302536af05298887005d646179df53852140c178e2b4d1ee14f1a8e2cc7acdf022518bdfea419691f2b902a1b7a6d0bf072910f5a3246a5ca4917c55bb1056c0b0657e83dd146f816a79b048203a011844a870193847bb376a56b1a826adc1fff5fcb05581f252baea0cc22d45338841b6ad211899b1d9848404cd75c98c7afe887623e95764c4fac894f58b4369783c5575717ef6dfe7708509d1e49396459bbfd969f07a455c09c86110df9e71f9ee3cc933f1d7a925d88cf28775f7791122e72f0771dbd3fc1c60b035bd58c669d5f919e76cc1e857cfac78519c1b5e0d1f31266c8ed29e51e0df1b99de0699f21665f1121cac44b8ab8bfdf9cf9cecc2ac8e7c243ceae255ff391b6764af81b335320cf14c06a9c942c8e3b307279fa87c8725983096bfac9b1ed8349b861bda41791c257613e30b0c52e8d967bd0fc0b88fb9d3c33a6939a0831bfa6058546b77fb3edc9e375632e2023ca4f601896d04c95d456b441998697cf7b39a98760e3e086abf8942b556934ac35f81e8a688d88d0f6617343433ba4a2273cd5856da9f9b14defe1aa7d619a677f414f2ab7fb90a47e0558408db2e0ab5688e26423ebcba8e2ce81e85f17dffeff7a156c90d7492001ff65e0a91dcb4c39ab98a4983b528d5292c0664891faab3283d5c54f0ea2d9caf4715308fcb806c148e83e7cf7411966e1db6203d716e93b06b5e5b8c421fec109463823cf516e951a1941895d47f4be5c2aa9959b8aac0ce950c2c8191e7c68493340998f2aeb488fea9b3cf062c002a433043bd8c8e62e63a834b04e3a5ccbe33b0c4bec6273a592a34b340f03a41b1ec85612d55056e349ebe9803cf25315377ef6a87ce50afa77fc3e5fd0d2de786cdb64c3d3f467dc9ec2ddd819917e7e9353e085f74f0c7216844437250f0ea084d341ad9c317a2302be7a0e32094835115aa1a07e5d3902af5a19021d130993acc31c05b25f3ad710425f13fc3b1c1a258172270eb69255559abafb4adeabf7373560ae819c290e430e9e9d64c3112bb42922e9e8886d3af4dae5bd330dfe57558e77e7f794752b30c1840435e2b94beca8fc731a98198e4bf3a2cf9b2dca8384c2607e671e0781c0504f965ead74a1ea541651177a7d5348f624a5602ff8f2a10e851ce34362fefa78c3ab631c47c2185c7da26047b2559289e0baa56978e7f93073169e24a84703429306c3caafe328d94ca4a6658c9faab2e64cdd83e5d7874f4da885cc94bc2868f422a6061f378fab8df81d4570223a6e58a6a2b58cbc260c5f633b209618d4b4dbae0b3a84d2eb298dd0b572f97bf946356030ced67f658e51d95b31f1a51843a46d9063c9223aa6bff431b6a613bcc0a50936dd636925ed75ee5898cab06b423173e10ebdb864fb813716f5cddbcb2d7694dd357a169e8d2d5cfed76119b0c8f068dd64647c5948fd4f13afcf1bce431da4730072da634036fb3820da00639511df735dbebb1e9b89b58bbf7012e3860cf1481f4129c60e82307cd01b37bde833cbd539a297bb51fbf8298a4d862d4fbd7269cb4b1d91abc9394d1af07ba44f523d597c41f649c9773103b3f38f3d40567b0e25831a39332c92f21c419e763a06c80abc7a16bd61e97056d5eccb0a41095c9e30c96864d559b70472fcbd2f823ca4283e3ee310869f6e3b588ca010eadd2cb957b27c07ca3018a8cc37c7517e68bea209ff6fbf72e2280a422dbe4a512782fb48e18da149114e5ab45b8ea1d45e5b5ccc27ec1b9e797d00603be495732ccd2522461cef6f5f2475f2cdd2b898b12d3115f16b017c9c127aa61a20a560f3a408b8a5f4c2944806469896be6e4361905af76274eb7b5fbc47f85ba8e93aca6f6c7507a086aeb4fb443e95c58dca79760fad55f88f3d96076f8a4abfde4c4e89aadd4562637646112dd6e0ee165ad86ff3b0a0ca46f73e27572fd708688f1f4049b4357a93c746e6c5aa10b8b15a389a1f448b01863e9cea5637f30beea31fbc5abcd38e44d2c533fcb6eeab43f37d37f9bb8197b562c4be7c4713bad92b1d3bf793ebaf60e148ffab794ba02305df3df48418290a962036272ba4f91bce2ca2e635a1a5bf2ca2836760f31d69c61fb22bf43915d330d4c7b032177d91e3566a7cf2287568bd502b9aea1389cbcf4f29272f543ce0a34bc8c8e0957a06852c0657cad6886b2aefd42bddbe97671360e7d5fcae004c8aa1a9bf1791e65b48db092ad3a893ab94ce960422842240b69dba2d9593f1c0731edaca755d74dedffdf7b063aed40be1e9381814752e7d9dfa93f5341cb433485d7d2a78fc71f83bb152275651f9b20c7cd07bc4a7ea1bb0f14256385c2c158eb2e3782dbefdd585ab8d176efcb8bc3a13b2028fe2e9937d8cc09e1c72b0db71a599643f1011c9971c3219ee7bb045d1d467c9f0ff22135662e5921bdd05cd8e280a3978a968825731af0951aebf81a9068de035a5c2eb6028f6f587c1e83696d4910d88affbeddd370fd3c5649db3a87db2296f413084016e5a328d2bc42a24f9096f757349fa6603772a2878c2aef4fa193a6ab9613756a98379944fd498ae4a13800278d22f28157a7e65be998df2c5eb859cb46464fd8e7db49e7e2a5dca22b1da99c607136e3e8ee789004a612490350a14f2f8e8eff811b6b658a4c79ceffd90e4dfd141203c3846f6b92d6ba33c007963b4c2bc06ff78667c8373680957eed07f11d9eaced9fd812ee15c5a49cc9faea864d66afb0130ff6537400d8cdc7f4bf7ebc99e279b7c660bd2af02e6e5b7c0553e0af34b56aa835958e2ee5c27a3e6d6ea1677f9f5abfe5f51130a1318671a6fb6c7662ab0f94feb2b475e4d5a7fa532aa6b575cc7ddc1a13cffd31cc40bb9b8a5762e6bf5bc0a2d7b13666b71c62cb0ed613eeac1059c8048f4d89dc1107c927bc07127b0904121429048881d58f0712519e40916968481853cab62244f36bba354e5174a81a363f8f4117868c0d5691cf37dc41427234390ebe00e376eae6de4668b5f596dfa966a5a7119ed3e3e3978afb708db7d01be7fa828f1d33724e1995004216195067704839e1479b6dfb1548757b45724547c3bcc6668f50996977c690e8fa01600fb75c026a6fd09be59fe6ff8ce30dc3be562e46ff949527d93792b697958e8adb646ab723d9dba9c123a1748bb60cc4610a153ef4aab88e518cba6797199f278e9d085412e717d4512da5843b1ec7ec64fe87d5d776aa629e1c96331373663b351680ccab8881bafb85689d23c18b7ea86ed6f89eb09532c65e9433ad13b9d21c2d928f6e6b88e5e50c4e53b72f34e7e696ead7cf05a0d40e2fdddfbf29992be443320599c9aad357f88e7eb57156846f76851b9ef63a0c049f24b51dd38655d82e713e7b929786a31d77547447869e5200f60661d3cee4bd0ebf0e698ac8e3030fd47a9aa1b9f729be10f96993fcdec0b78d9b5c64de178a81c4dab1187773eb679c2f0e8b181c77bcc204c1d1f3a5f5cd9fd6a40f47f74a147c0ee40262b38399302cfb8e113a15f7c63ef7e0a8791b19d70ff386c5ae81c10552b3cf929f1eaa91bdf33472bd509a4ee72585b3802e51ee7162ec9c944561fa1083effd3ae6a4e7ee72ebcf9dd5ad021e07b15dcae19182ace14cb0adfe26028e072c5882dbcca2e8d7adc1150ac3f9f5c518ce49e875d2939d090d47b6f9b59c3258a92302643c337dbb111dc0a680253a2dd654b39c315768c47a88012ba4ca38f187b64e5fd4530b17adbfb30a8cd6a36363739505561ed9cc7313c6bedd1debc63d6ca2218ead5a30f409efd4ec9563b65dcbbc6643fa64b481dbe4a8d068688ab15c28da77443375c288913552e3ea5e7698d8bc7111e8202257ae263553ecc9dfacabbd6e8046dd965abe7466d06b140a33072538bf06ba61b6938aa5b0b84a780dc14ec2d9d8174fc7ae4e1f79017ec3bd8cfed0e6e8b4af68e3dd80add3500b97049a287a3e9f76631a2d162bf1c08c0f62fd65d8289e42b15e170e69d5f6283e0d9af12464ff9cb9b904c686a1de5bde69486b931d9b1e43d8526f6b5ea69818da7c80e2d136f80a8109aa79139ddb2870fac92f02c793b81452a6fd5104c5ebbaa1a2917e4edbf6d87a56c99cb0afc7e43abef1450ca29185ef7c9558f87532815647bc2abce7f6291243fc7d32a76ea4ec4f17bcd2ebb4f507662878288aa21002680176792a2ecd5c2fad1e111a9d89f3502f40dfb2dc8d21a10c4595b225e5eedbecbae6a4bc94d6bb372455946dd4077c144f3381f4dd264306d8451f4f628945e84c599cbd7230c6e4c3e909ddb0b0578d9c01c9ee2ccd89beb4f8e8701424ffbffb1326e52caa40efcf89cac5889925b7ba91c4ddb739893bf6dc9b0a5d861a584aed98a85e5b0c486231bd9a8929b8118ed4717e071c6977b303e56fd0f4df46fcbb4f734df7afb9d8a486078908d101a1f1dfac1ae7d6dae1de28ce1793246a69edd7da19024bd05cd16aa448577e59d50ddbdcd4ee6587d679de8f1ac9d810263c5c941d6170e94b90fa2eb4559234d2b37825214fa83e754b414acd59e3c892926c606cb9efca1317a2faa6228ca01fb91577c0282bc47a0cdce38691f949488a1488e62666ecbdbe490a478f7f20f1faf09103a71f27052a57a000e2c1136f80acaa2fc08d2b9f0c5e45ed2e29be7e24f37d23b1bed87f29c8eb5ee04c2d0196967b707b40649b75fb448fbbd3952a3bd8489739acc578bf6150d2459708d13d79a28bfdf48397414f055800397710139f113edc6ba20438b1771d4d6a1413b06ab6e7cedc2d3c6903d7766540c335ce04b015433f091b4c873721fd20f21f008c6b8b0b7dc20c41702a59ba2995b4cf557a6b588e0aff9e96b0fd9bdd740edb243a40bd569a67499ce599280b46292d0450ddb812856550b3f6e4cf4c8b907253bb72ac94f7424501e250df2841eeca746cf05598ea6d64ab0ea43c0ded3c6ba4f9bf37da5a8ed1a91d5bf6b340bc227132ea9555ea38776c631d34bf18c7ad1410207a95df292118c4ccf568551a29767a2efa707eec39525662ea6fe8f8052f7fdf9369f63741df1d45b3f53bd00b8d26d8ca3f949f1921bc350df5bcf61b91ecf98df0d08200513667408b9b00718bca8c21f2655e5d15868553211bbc46f5b2dd6534c5e54e14b58514b5c16277c0a12da931de2056a3afd3e6de0a48a9a38f6c8ddda557617d928b78ba2a7b55e64a01ccb7fd2b880280fd576094c402e320babe63df2755cd9c10d7fe3a3e930cc4181b3eaa8db37b2fa3228fd5691f5ec9fbe51f89f0137ed5ac75202c78677c6d43a8721ef0719ff44c21e148d37a91543f07aa783f7a3e4665a6bbe8436ad11df91266fb377ed3ae4de149ad49924fc7f989206cd9d4e5009015a864bc989c894bba1c813538129107737cf37254e0c803b7c91a2ee681baa64cbeffef8e02be4c1f0293ec24aeca648b8cba71564afa89a1b07a91b6e4e955bafc2af902c49492cfc85204570a864333da6e81e937f71848ed865ce8aa97fb580a846ae4076db26d262eedf7ef133860666fac7ca38f0f1b3e923af6ef94f136867ae33202a9b9ef88a6cb0ef33fa95b0755200a356fed7c5fd52b32f1b8e3ce74e9965c9e63e423255a599465e0a77fa5f9fc4c2bc95f36cb58895aa1ad2ae7657fee2927d8c574e21a852fb6d86886512f574063387c4b3cbffbe5e2a0cde01bffc3ea5bdd1e67de706511c7a50e572eafc11770ae33d8e1f7847e717cccda6c8cc41b581981e6134fc64f818fb35556577b554054c6b99b9d532ef5f1f03d5cc1486a3e599377d60921ff98ad7f24e08e1584a39d4f81ba622e6ab8cce859343c70d36c3e4294506bdb22858353434ffca2f3848269bfd5f8f75f0765547ccc1146fffac230f2e226f7d487b5b56ffee9ead843b927d8704b5481b8bbe4e7e14c8e56755858f1f408d6d9df9d7301cd74b6eb8bdac91a645b09d6b5daaf526534e26ef7d7a268841fc36b7c6dff2ad38e87dc7b62c3bd78041e53608f2d013dfbcf4802c9107de7cb549d338379ab6d05fefecf9d12585420e67c934df6e49537237ecf1bf3622406459d170e13f51d60e6772f9c6d544c45296e21b080acc81c7ebfebc9aa03e8825fbccc5f5741d0d5aa46ecd97519febe3538717dcae8d33cea1782ff2e753a54d240700fd7087eb088de84f1c081526d1864afc4d1e087a26c9f9aa4e4d95cb0000594b97659e77f9451221d8e0c04ae92e96cbf1edbe4825d0dafe5783a6210158367bace38072d6fd8b466c852b2e138d919813592b7c9643ae9ddd3d6774f8736a48a3f310680f71f0a8ea552dcb1745bb2cca91d877a66786898323fa14b1d15b42f8cd261bdfb7055eb5249df7738e8f55a10c2fb058ec5a0e1dc16cb747966636b9a730a90916f9d26a4a4d50391151639a3d035ceb0b9eddb4ec2e6f8ef5d318cb8fac08687994d4c542712581c83f1e8ac327b4baa36d2d8623d42c3ffee08473f78fe4a425c4df2ddea3d0bd1d90f09fc5bf275bd7a4b327b4c48a205d900e29d470b3d17f5a7734150bd786e5feffe2a1dcfb8f66387a9219f00367cd488356c07828d5e5f10be8d7131460717d0d46e1979ab3a90b46155041057e80ad1d5fe5df09e83c0ff5a00c130dad26f7af8d51a52ee088a621a292b166a9026939e15190cee7fa725b143db50ac7dbd8aa8a3bbc86e2f97041294d64c3f7d813335407ce9cd6c57542cd41c4cf12b6d984180bc041293473f59b4dd04b7844988744f3079d7816339bf7f32e9c90977022fcad7de178875e8468c1eb4ec3c761051c216b7984e5f9aca4a2a0d27daced5fc06f8b2abf67e5bbe7dd7c0872d8e8f73040dc40179743a74615c7b7c5b9ef829160e833c76bc1e741100a3875f1ecb5473fa1aa19fb0b1e11691dcfdc2c4706dbb39f52a91efc2ff4235477c9c113ac2ba17e52c35566eea872f7371aded0363f4ca5f1788faa1ac93f918f4b4e5d4a28b59cbca43037b615b14d979ee6b2f6dd2db40426557f3cdffe8c4f2b4d01916a826152651f4a587beb18d979494954625b85b6b931c9470a380b81cd2df30d096f31e36bc31b3ebd8204b406212c74be4cbf913e684900579380069611da1f8710868fe84e55ca6a9352cc915789ab75c2e0c86530e4b93981c719283399c4bc36c17b1f5fc3d8eaa1c5af6a2f372986fc270533f35f6658c0dfa255d9bc25ed8e806f0e39a203bf9f76e4573cf95a77a6117081f1b6a4937744c34a1bfd8df0f8b11d43c382133bc1008a910afa7cce49612bad260b53f9133fd4ac513dfbc2f1445a0871af72642a619fdecd7b59d3e545d0a64d27310dd69b055eefa6187a482ae29aa844a4f2b14bb40eaf7f619d6269d9dbb177fba7f2f39fc9cdb42e3e10db984a6109736dee4b44946d11280203e105e5c62b64faa9ceaa0badf0398eb031d1175a1666d2acd89aceea306ef8ed6acceedcab69bdb1121daf19103a67f9838162a34c99342aa401f8d9080de105433e1a4165d7475d73dacd682e66dee805da16cb7c9735e69217cd70a2d5b181839bf1d69d20cd7eafe452c94a937187a102aa614b8c4f36174e545c195ae656bc2634084935ef3a361947e50e8c823ab8d8f422b1d6b2e401f9db514822b9be427fbaf518d4eb0cd6c47501a2e659ff1317713ac1e24d196a8b859430ce5495d586d76a87e009a2aa13fe7965228bae3873fd7e11639a1736ace75461dc77ce092c8be75c3d838547cdcd329f411955af8a4954a72c72dcf0c5aa7da1ca4d185fe0ba63104333f2b736122228dd3534ddeaa4c9a73eb67d219135022fdeb71d9ad2c345c820f4e40814da6b3486e53971f63fd8ead109c6097cc4d1949d84c233095ab02923b9ac200f2d79da6ed75f2319e61d7d51fff3172dee8e939fe288c62e2e613665b92794090e420680c68ed1876a0fc8a166cc989db898407d17b6f4222fa6f657fb418c4df48334d455ca68963c933a80e2c68acd8c6782093c59ccaf1ddbf8a2b51119edb388ecdb2dc89eacf51d3a252da7fadd8fd28212f64c274a1494daa5864c6caef67681bee9ba9ff9ae691a9e52b318cbdf707048df1951b1cc6d546868deedd3bbd124fbe7179b07d15f75e073f4f3d0c169658a3e220050a4419f016ceaefa2c27f7d7de85acfff13ffae79039b7b049f166bdfeefe22b6fdb28bf4ba10ee8ec260685c137e7e260cdeda5f56c9435c117eaece7e61eade31870d94997c40d219a07fa3efec0ebf18bdc0685ca726ee7ef3c7de9e524478183fc4d895c576041665c8afe12bc0ee608aa59531669f36917e5b0f24ae27f38af5f99702ab7ab719db4c82a21f0ae6f6a19fc0628fb6928de5a45fc3c634c3cd2f7e1fb7fb22299751d96562a9f0ce68a5193747875653904408dd4dc9be8087a91bdb88e0d0c4fad305749839b9e033522d7380a459841b38bebdaefae61333339be56f5173f4a873dd739115808f66b98599ae26a311fffdd409f4e90d3f02189dde6672571f55f28b0f0e41bc461225fd069293dff97df00ad4ad5994e238e063200da497851c66040b826c888d470c2198df66be9748d1ef5b022bef36c77ce4c4844e4298728031d89f225f2001ad727b6422e50481d3d083bd9bed470a3ea38d67f70fcc3183e9ba77d3e8241f107dccc78fa214f86dbfd9a163e03b41ca11bd7d86f990119bbdfa9868d3d2dfa61bf752b21792eb970bcc37772d4411c7cded498b23f48c9ce0e5ef56ab056083423ed4ca087330a3632012b3b292d234c933565db20b62f4538b1840e77dd76a5dfaedd565da2c19c8cbc4f53272efc51f262c250d84fdc50065edefc729fba3f623be89a71b9fbe2bc9b6a6df1237996b99c6993e311258584801f73e100896b1d8aebd71505a5b2db9de5f7f4af1105e12b760a3e8c332fd56688f562b1d183bac1b065180b5d75b5b567f93e1fded33ef78d031ce907254ea211c82a8b2530159382bd2224ec2ad2fa7fd3049b8d5f28b11daadad783d2b188fd90a228e7ee826d31e912dba1789854a2baa75e77c02d574af24d247070df0b3d7edd042e10fe6538c1e05421d3c11d59d378f37b35a2fb67605be3dc569e1fe819c54a78cf42ed13bd2da9ce1cb25a7b28dabe851e976d7f3eddb6599f67c6364c30a3ec0dae23c525eecf0adf71354e1be0a360897ae28e48bea6b2d2e9b3ece1286749f79b0452c196d7e4839aa26aa5940df87f844c3eba6efd27a7366905b8e642b68a6ab45426669484eb75c6069dc01846c2d73d376486e5ccfc85dea1eab80ca5d69888f3f7e7aa517f478fbd131c964f574c88cadd9ec4ca470fbaf9ea985cc994e9186bbdd3150c7fdb2c8d7f1e9d94e8cc7bbbad3207ac66285e44c8ec4a56db9f0cbaeb5d1fd105f557edead569a1e719f627b27aa9d0a4d350fbf148e82c806aaa066b50a0001e5084e2bd70e1655918d03bd3cd1213c2987b1a596051d17cc5d1e5a587ca966a5f08578cec3eb150db5bd607f96b174e425c5fca7eb6643c92d7d19299fc71290ab07de6a41c0659192bdd841ad6a53b59a1dff70e89702430f0714ee71bf520302429d8f1c9ccca5be4dba7fc605301ca697eb33bd163c2f1261048fdb95b110bad6adee167484dd2e5d73809e2535374312921f8e9b46619158b98eb9b1d3cab91999109ce8f285e2f47767623f367453d2e41d21f6b53a1b83979d5275fe92baf5e5a3d8e730c48ac1ec061bdaf8d79f2a7811f11a2afa4201eb93ff87cf8a3fbce56f63bfa038929a00d49169dbfa3f2d5eabe93c824a67bf719e41e7189f3935ae4f92adc061373926f8ba1c1e4a7dd377716b9ac376f93cac19ce298057bd3142d8002edbc3fafe6109a495a2119b607ecfbc7731215daa513ecd566e791aafffa41e75bea116f85e3bd5ac10bfb26efd6450150a15cd16612b3b27f20f589275550dab74c2e4ec894cf93ad41a97d9f33da443a84c939fbd24e9de99a6a346264209cf7fc8e45adb08dcb2351d0fb96bd6a45c687484b08776511698c853aefa68b29ef0582202830be1d955cb01cd019b5276711e6998a33200d5aaa943ba1d5f8592e3dc4e9f2fc95a89acbf30f074d9a11570f166cb5cf7b21114dc955317ca84281d23860e432aadde6e6c72aadf010c54a20f400ce664344415c28a04271e381f9a8129dfe8f4c2b0bc1fb01dcae44b6c8998e697f7e55b2b29d0cdf477a277a451b2bfa42a35ef4bb0d78c4b03803ff77f4792bf563cbfbb97eca186483c8341ae7bad64477ae36a27b4d6b46361fbae3a281c9eb9ce9ce59401e8a1402425648a26583a35016385267bd0988df26adef42fc701b53c74f051ba8e239ee4a77f807afdaedbe8e22f6348d2bf8bed43d5d7a6a844af4fc7980c7d519d1514752e0e20428f6bdb55ef00bde83eb718e6b29146399b4ecb3141cbd36da8b9e96ff97294794e2c01081f5395d4eb1178147ed48c276eee427c858a4c932326f177768db322cec8f10f61256ed701554634742ff192b05b92c81f8f34a61c8f30084ec0ec680f8f64e0c9a40acf0c25463593e84495229fd0f1969f168178f636463265ca1ebaec44ad70ffec8614f40fc22c3b4ef79c5abfc26e30e88db4cbefad459b8e9a30019a064117beccb1a49c75d596b668698d0a0153bece24296b0b3c4bd7d5f188721460cd46d0d4c4c02d91d0629d798e1a439947d8d6ea5e39c51cdb8926ed9a1d675addcf0c733a48097d52eb1d02663870b8f203ec430c5baba4c9710f1c5c64c9f3a14b8d1f1696a83a62b1af6b663a2ebad87fecc40d608e40c9f83f45a85f2a207c8f788297ec32338bfbcc7815873927a7e03d143a8445ab49972d24e566288674e9315f65dd7ccf3e69ac8f856b4d67387a29d351e2c9b3e67739bb1906a3281ab4a8550306c8982f1664b0e6e95be473c1807cf606a41fc38d940051b984520c3465c83cae177f3c2fc2954af40d2f87bb016e081337584e07ab5192e5e4326b03d48dd0b3c2c53d419ca7747cc199e965cb75d50f4b35a6f1521d3cc7c52d77da38b7ba38771b9c028e11600ef34775679a17a467d716259ed2b0bd0e45e0c018db524634c98ecac24bf26d77f1bc2c5a2e6e0bf18556137079766311245db22ec908f75852b48f3e4c4ee1e7a915e57fff849bd2b5bb086dd0247634518297e6aa66855a7defe970877fbacde638125af42e3826c396e85c3f0f6718f7581133216e96e64bf8e0b0af6af447f783d0db7e6f33cf2781be393c94ec4d08203e9f88dd4ca439d5cf9d9c8830190a8966ffc93f6534e13eced270427ce905d3abaac4d9a13420c7a85acf4e45e423084e2f33b235223f09cc6e4746f9f91821419e8a00ffdd9567cb1d3b2bfa6c5edff5d3b599e54a530e8abb76b6a89af456d2260c28eb0deb714e902be43f645604301f08eb94d9deae49bc785067d6f5e7206d82a131018f4a767103963dea3d2b99800b2ddfb7b2ef39336de94f00c42c1ac9ed87679919b571e1a8fe5e2103e8967324d4c4f1388b2480286bd0fb75cd5dea6ad34295218f663870a93d41e9c81f0542ca1d8d0356240236d1ac77ea5e2e860223593b96effe32c16a15c3178119eb594aa5af8c1ac213b7c1e7328ba83c775c0f763157f541ec08f748d59e899fcc219768823ef06042cca9d2c33feca8c0ded27ff4c177cff7bbd8e2380f798671268c7f795ce95b05c9a3c345cad3b7aab5d3c11733de7be6f2b4ba0bcbaabcf55e193b638a927c51d7648ae116146701d450f1cffa184884cafa608b6a648fca7dad2f9791832c06939b6aa4d49298604e4863b37f5ad72825634621baaafdc3d88e405e40420a5248d1be7cec9ba673044e46cdac55a89fb38860418d9b7d1cd101e8484ffe24cdfdaab2037087a614f712e8f0afba2d8b5acb93f4c5bbde20d69b846e5e9b9f78e479272453da07f01390e192b8cab70ec36def5c45666316ac5bb4ee171b1ab37b2317f8a052d2ac9fb6aa879753e8f25c02e6482e021d8aec4d315fb69def1598c3b810bcac89077a034df6fd5005341d7c4cc1d9e3d72972428ebbf97e8dcbc0beeb9b2886f2d61b0444a26d668284a35a049ba817eb344b619989228a06019f3d8c195d47551388872439f4191af24cc0424899eca7395af95d0db115abf3ebccb239981d7242886b294f50ff655bbca3dbffc4abe338a4e0fab5b20033a29c3408d572e26be8f6f80e0e14e8292a534bb0ca245f4249d4547eb84430755aa508a5bb10847177415f5b7e5fb4d6f14257a026c2e44be9577913a1314ac91f9be969109ffad757547978bf8264affc92bef9780b56ee4926b2edffd83a2cfd9a8b33bfbd5b893148e1ea4ca799237c9486606b1cf0962f906316377fc5c27f0702bf3e2df506c4c7b296f4ccda64d6c739b990651edfa010f700e92e89483220be748a3ed43a6acda216d1dbf5ed9aa507405c896e9cbe10b36e5bf79c4f4fb1278c3d83304431d6795f9fdf437503c659b32427c685966a80f7f32857d4d4195ce551cc4605c6476249db06dce533e42a42c7b2562782f3ca2529b63b1d98e22f3a7dc9e0f26d9895729c446b2d6360d5e066cac16b5a82f4fcd04464a5583abb4ff183cc2306bf84514587b7e48be5bfa5232584d0751c29cb95025ddac2aaea2e8b10187453f4e8acb07eecaa0b449a218e3ec4a2dfda3b70fe15934f6d180ab9614e4e71bd9510f50070cccc928c218c841738c896a674dedc1167af1ebfff97ce0088fdd782df972437af4e987f26712f150a59f6cc4ebeb84ee0c53ec29bb92dc401297a4fdb54b86f30e2244abada0c6a6e76068cda72403b08efc7f125f231be3ec47c698ea63170449f75220c0a8e8473bd1c097002a74450b9bb4a4c9d8b764dc0745d19bbb96d3f6c944d3dcec6575ebc982681eb03ae7dbc2cea10920e49d5d63d756593e2b81d7daf2ae4b1dd710ba93537f7fb63d37f273876f8970dfb422a948dff8617f28881e4373568c9b30926ce117d15772cd98e4f4667ebefa4fc3ccb8fd32fe4e94765736a87d148b4dd16aabeb65f4d0cf5fa3c194fb97e07c973d6cf6f5da0d9294f7a83670fc3035eed99662f8b2d823d0c3acbb67701d71151eade85fc24418cddb246fcfa99d9ad2a7cf17eca3a3c6814c605652c53b2a5b4599b27b69bce6f25e43f3afb39882d46fd260dbc81ae6e553d2086bfa56f4f906cfab11d94a811d15a43f4f13badc91167b8287212b0406d5f0a349a4f1552c1e8069d35da7658c652c9a1690a18c10499a0614dba63f2e771bbe27a7b73fd2f661fed9de5ea74245b963acb0c9e36807b147ab2dcab550a3ffc6ccadab53c66f0ba2dc2ce12dbe51fa51099a0319027cccac7340ab4c3a269067d483db065390a55be4514aef1af4d44fc51f70637126cf99ddd19ea45afbc65b06b4caf49bec3216bce55539f2a25674668036c9d52dfde6fbd7ea5ac24b0c5ae87566c6b54928629475ed5c603d5415aa4344c547dcdeb64f42a78944ae9f6485d3a987a62a59fc32a55ad78c882ede94f54e89aeec722868501f9a249aae775e85c26f3dc77e1d54270076e198d20c2c93f6c17c2da7402c3e1fdefc2394091904db654f463ef773ca95cf7314bbf33fca81db61faeec05219f87be11ccebe85ef09e53dd9c4a28978c69314d635cbf95e9f7d19abb45090f0ed8cd76de95cfbdde3d3bc38b47df25a4e3c6b76cc55bfcd2c8030fe5616a429b61fc3c99c9f31a78bd94911bca44d35861646000b74175e14fc9081f93002a41dac57409ccf96d2731357385999659476f2999d227f8669a06a2091f0359e6267dd85e94c051fe68994d8d24f6d19565429738f3bbb89f5d4ec800000a07f94efad4fc2a5b57524ee292cd07441f6dd635d942a0c02d7de1cb49befed2f9e16ad4588511b8cba66708063e09f72813f153b1be2859c010ebc5e724e1698002d8330258ec922578b055e2364a75ebd56777edca5501c99d58cf73b6dcc2c3016a825e0cb1daf067ae8599002e524223a105646c7941543070e68117528318f338da34806fdb5c955104c5ddf11bcd9667931163bd5613e1a22827d784e7f27ebeeb5b16080eb3fe4782872fd5c00416472aa6858203f7fb8ddbf1fa2e23ae54e2ad4a3a88dacccf5624f6c90d57cb843818a7e89f66cd829851df6f226ddae10ce231b4ebde462e8592517dabf39630019b667d9c2d8bb72a363c1a546dceb354f52af4e5110cd51026539c03aa2c8e4e39a0cc514c3d95812179fc7cdf9c28a81fd456b977c60ad39cbbe610567486f7047332492dc027b35d1a78b626c301be609a007706e1a4b2665a557eecd5530023b1baa9ec878484b5c2dc0e10f088fc5138dd533e540d52538590c43f8f96a2980cf81b6bf8a72017e3f02c393fcf4cb5b48702270296ddf5730a419e18219db28a60f2ce6daf65bef94548b0d1a78d35777c59b90b55acdbd848986d14ff045f27e031e6952c6726a51c0b9ad9a07218276ad3648c05df03d84a7960867e46c95eb754961723297c84f3b9642bf84ea127c34f54abe441c23bdfc60a0e435607a83f9fa29261c7b3ece3f2befb482669cdc6f30029a8e2782ac199ef7d8eeabbbfde2827728197c6f4dac24838de4bf1c69b08545901472f8cf5ad9d55678205f9902d0f857296894d060dd9c5bfac98147d13238dfca8bd9b8b6628890df93af8d0de8174664dcb05f5929c6ebf6802083c58baf1dd9031a152cef0758f6520d0927c3f4dc248100327147b469984decd5a95eeed24409ccce9586462fced7501f5017af231a6cdfb407dc069d5f5d430ac951da49b5311a8270f61cf57d20b26c3dbfa1824b6cc627e23fb3af719d78a2132008e16b8413e0000b5cb04a5f1422858c14e208f0166639ec50640b3a80699d1b3e34d0d1ac128cb4905edf15726c3c9156664eead90a11048ed6aa41b5f08e3db3fce2b32b7de7b5684c4d7d157e521dc5a3cf5eac92d94ab84ddf8a8c0a52bc695278f78020ac4a24d39a92901a5451d94d79b49c42994464d09019dac98d00904024bb312e54ae9b4df0aa17d8f926172a6f5c63efc04f66ad34b65618750d571bd27d25103c785f4bde5fe94d0d1ebba441a6a434cc07681efc38da803720d9949cea8d2cca18e0eb1cd45b19d1ce8b4b5b96558bab49f7a286c31319f9159f7d2b817786650af31e7e3bd084eb6a4323c0f554ac54d5ad7cd97b6a11675f726b1b20bc642f5012bc8ef15eb68412d3223b16c2b782ffa8c37a55fcbe2b5166a06a71487ab102ce550830029b0ae7cbd3ab5b4d4d8c3f3b75c9f60c0d91c3b03954384a73afdaf35519165796ad126fa9e8c3bd0a9d3cb5fca6b82cbd30c15b23806f2bd9c72191</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Thoughts on the third week of blog building</title>
    <link href="/2022/03/13/Thoughts%20on%20the%20third%20week%20of%20blog%20building/"/>
    <url>/2022/03/13/Thoughts%20on%20the%20third%20week%20of%20blog%20building/</url>
    
    <content type="html"><![CDATA[<h2 id="第三周">第三周</h2><p>（发现如果平常写日记的话也许比较无聊，毕竟也就是一些学业上的事情，杂七杂八的，之后周末如果有空，就写个小总结）</p><ul><li><p>上周学业速度还算可以，周五的时候基本把作业都扫掉了，主要周末充实透顶</p></li><li><p>周六上午去科协面试结果自己没看清楚是在晚上，吃了闭门羹</p></li><li><p>不过起得早，从团委会转移到图书馆，北京难得下了一场湿润的雨，空气中终于有了清凉的感觉，图书馆前面的桃花沾着贵如油的雨水，散发着属于春天的气息，有点梦幻般的感觉，凉快的风吹着脸也很舒服……</p></li></ul><p><img src="https://pic.imgdb.cn/item/622da5b15baa1a80ab35bbc2.jpg" style="zoom: 25%;" /></p><ul><li>图书馆没坐一会儿然后就到紫荆园恰饭，商量月底情系母校的事情</li><li>中午睡觉比较久，看了会儿高代，着手整理笔记，晚上科协面试比较成功（<del>也许室友在里面有“裙带关系”？</del>）</li><li>周天上午起来费了好大的劲把快速傅里叶分解的离散矩阵式搞明白，还有高代作业以及 <span class="math inline">\(DSA\)</span> （只能往后拖了）</li><li>下午去看班里打篮球比赛，但因为去打疫苗没看到比赛过程，据说比较轻松，打赢了</li><li>顺利进入校科协，之后跟着副部长室友一起搞好科创活动策划，顺便学些东西</li><li>晚上酒井科协有技能培训，<span class="math inline">\(Linux\)</span> 操作 <span class="math inline">\(C++\)</span> ，去瞅瞅</li></ul>]]></content>
    
    
    <categories>
      
      <category>随想</category>
      
      <category>里程碑</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客建成三周随想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Complex matrix (Chapter 1)</title>
    <link href="/2022/03/12/Math/Advanced%20Linear%20Algebra/Complex%20matrix%EF%BC%88Chapter%201%EF%BC%89/"/>
    <url>/2022/03/12/Math/Advanced%20Linear%20Algebra/Complex%20matrix%EF%BC%88Chapter%201%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="高等代数选讲第一章笔记">高等代数选讲第一章笔记</h1><h2 id="复矩阵的表示">复矩阵的表示</h2><p>令 <span class="math inline">\(A=\begin{bmatrix}0&amp;-1\\1&amp;0\end{bmatrix}\)</span>，有 <span class="math inline">\(A^2=-I\)</span>，形式化地定义 <span class="math inline">\(a+bi=\begin{bmatrix}a&amp;-b\\b&amp;a\end{bmatrix}\)</span></p><p>满足复数运算的一些性质，例如</p><p><span class="math inline">\(\left[\begin{array}{cc}2 &amp; -3 \\3 &amp; 2 \end{array}\right]\left[\begin{array}{cc}4 &amp; -1 \\1 &amp; 4\end{array}\right]=(2 I+3 A)(4 I+A)=5 I+14 A\)</span></p><p>《从一到无穷大》中有趣的例子：在一个小岛上，从任意起点出发，先走 <span class="math inline">\(x\)</span> 长度到固定点楼房 <span class="math inline">\(A\)</span>，然后右转走 <span class="math inline">\(x\)</span> 长度到 <span class="math inline">\(A&#39;\)</span>，再从起点走 <span class="math inline">\(y\)</span> 长度到固定点雕像 <span class="math inline">\(B\)</span>，然后左转走 <span class="math inline">\(y\)</span> 长度到 <span class="math inline">\(B&#39;\)</span>，取 <span class="math inline">\(A&#39;\)</span> 和 <span class="math inline">\(B&#39;\)</span> 中点为宝藏位置，证明该位置与起点无关。 <span class="math display">\[\begin{gathered}\mbox{Prf}:\text 设起点为\ Z,\ 任取原点构建复平面，有方程\begin{cases}A&#39;-A=-i(A-Z)\\B&#39;-B=i(B-Z)\end{cases}\\\therefore P_{treasure}=\dfrac{A&#39;+B&#39;}{2}=\dfrac{1}{2}(A+B)+\dfrac{i}{2}(B-A)=\mbox{Const}\end{gathered}\]</span></p><h2 id="复正交">“复”正交</h2><p>定义复向量 <span class="math inline">\(\vec{v}\)</span> 和 <span class="math inline">\(\vec{w}\)</span> 点乘为 <span class="math inline">\(0\)</span> 时为其每个分量按照 <span class="math inline">\(a+bi=\begin{bmatrix}a&amp;-b\\b&amp;a\end{bmatrix}\)</span> 方式展开得到 <span class="math inline">\(A,B\)</span> 使得 <span class="math display">\[\begin{bmatrix}0&amp;0\\0&amp;0\end{bmatrix}=A^TB=\begin{bmatrix}a_1&#39;&amp; b_1&#39;&amp;a_2&#39;&amp;b_2&#39;&amp;\cdots &amp;a_n&#39;&amp;b_n&#39;\\-b_1&#39;&amp; a_1&#39;&amp;-b_2&#39;&amp;a_2&#39;&amp;\cdots &amp;-b_n&#39;&amp;a_n&#39;\end{bmatrix}\begin{bmatrix}a_1&amp; -b_1\\b_1&amp;a_1\\\vdots&amp;\vdots\\a_n&amp;-b_n\\b_n&amp;a_n\end{bmatrix}\]</span> 对应 <span class="math inline">\(\vec{v}=\begin{bmatrix}a_1&#39;+ib_1&#39;\\a_2&#39;+ib_2&#39;\\\vdots\\a_n&#39;+ib_n&#39;\end{bmatrix}\)</span> , <span class="math inline">\(\vec{w}=\begin{bmatrix}a_1 +ib_1 \\a_2 +ib_2 \\\vdots\\a_n +ib_n \end{bmatrix}\)</span> 可知 <span class="math inline">\(A^{T}B=0\Longleftrightarrow \bar{\boldsymbol v}^{T}\boldsymbol w=0\)</span></p><p>即<strong>复向量正交</strong>等价于其中一个向量的共轭“点乘”另一向量为 <span class="math inline">\(0\)</span>，如 <span class="math inline">\((1,i)^{T}\)</span> 和 <span class="math inline">\((1,-i)^{T}\)</span></p><p>则定义<strong>复向量的点乘</strong> <span class="math inline">\(\langle\vec{v},\vec{w}\rangle =\bar{\vec{v}}^{T}\vec{w}\)</span>，定义共轭转置 <span class="math inline">\(A^*:=\bar{A}^{T}\)</span></p><p>对复矩阵 <span class="math inline">\(A\in \mathbb{C}_{m\times n}\)</span>，有 <span class="math inline">\(\mbox{Ran}(A)\)</span> 和 <span class="math inline">\(\mbox{Ker}(A^*)\)</span> 相互正交（取元素 <span class="math inline">\(\vec{b}_1\)</span> 和 <span class="math inline">\(\vec{b}_2\)</span> 易证）</p><p>定义<strong>厄米矩阵</strong>：<span class="math inline">\(A=A^{*}\)</span>，如 <span class="math inline">\(A=\left(\begin{array}{cc} 1 &amp; 2+\mathrm{i} \\ 2-\mathrm{i} &amp; 3 \end{array}\right)\)</span>，特征值为实数，特征向量正交</p><p>特征值为实： <span class="math inline">\(\bar{\vec{x}}^{T}A\vec{x}=\lambda\|\vec{x}\|^{2}=(A^T\bar{\vec{x}})^{T}\vec{x}=(\bar{A}\bar{\vec{x}})^{T}\vec{x}=(\bar{\lambda}\bar{\vec{x}})^{T}\vec{x}=\bar{\lambda}\|\vec{x}\|^{2}\Longrightarrow \lambda\in R\)</span></p><p>特征向量正交：令 <span class="math inline">\(A\vec{x}_1=\lambda_1\vec{x}_1,A\vec{x}_2=\lambda_2\vec{x}_2,\lambda_1\neq \lambda_2\)</span> <span class="math display">\[\bar{\vec{x}}_2^TA\vec{x}_1=\lambda_1\langle \vec{x}_2,\vec{x}_1\rangle=(A^{T}\bar{\vec{x}}_2)^{T}\vec{x}_1=(\bar{A}\bar{\vec{x}}_2)^{T}\vec{x}_1=\lambda_2\langle \vec{x}_2,\vec{x}_1\rangle\Longrightarrow \langle \vec{x}_2,\vec{x}_1\rangle=0\]</span> 定义<strong>反厄米矩阵</strong>：<span class="math inline">\(A=-A^*\)</span>，如 <span class="math inline">\(A=\left(\begin{array}{cc} 0 &amp; 2+\mathrm{i} \\ -2+\mathrm{i} &amp; 0 \end{array}\right)\)</span>，特征值为纯虚数，特征向量正交</p><p>（证明同上，前者加入负号使得 <span class="math inline">\(\lambda=-\bar\lambda\)</span>，后者两次负号后依然为正，<span class="math inline">\(\langle \vec{x}_2,\vec{x}_1\rangle=0\)</span>）</p><p>定义<strong>幺正矩阵</strong>（<strong>酉矩阵</strong>）：<span class="math inline">\(A^{-1}=A^{*}\)</span> ，仿照上述方法有 <span class="math inline">\(\lambda\|\vec{x}\|^2=\dfrac{1}{\bar\lambda}\|\vec{x}\|^2\)</span> ，则 <span class="math inline">\(|\lambda|=1\)</span>。</p><p>特征向量正交，幺正矩阵对应不变内积的变换（称为<strong>酉变换</strong>） <span class="math inline">\(\langle \vec{x}_2,\vec{x}_1\rangle=\langle A\vec{x}_2,A\vec{x}_1\rangle\)</span></p><p>定义<strong>正规矩阵</strong>：<span class="math inline">\(AA^*=A^*A\)</span>，将上述矩阵以及对角、实对称、实反对称、正交等矩阵统一其相同的性质 <span class="math inline">\(AA^*=A^*A\)</span></p><h2 id="傅里叶矩阵">傅里叶矩阵</h2><p>单位根 <span class="math inline">\(\omega_n=e^{i\frac{2\pi}{n}}\)</span>，定义傅里叶矩阵 <span class="math inline">\(F_{n}=\begin{pmatrix}1&amp;1&amp;\cdots&amp;1\\1&amp;\omega&amp;\cdots&amp;\omega^{n-1}\\1&amp;\omega^2&amp;\cdots&amp;\omega^{2(n-1)}\\\vdots&amp;\vdots&amp;&amp;\vdots\\1&amp;\omega^{n-1}&amp;\cdots&amp;\omega^{(n-1)^2}\end{pmatrix}\)</span>，为对称阵</p><p>由于 <span class="math inline">\(F_n\)</span> 对角非实，其不是厄米矩阵，该矩阵总满足 <span class="math inline">\(\overline{F_n}F_n=nI\)</span>，对应行列求和有 <span class="math display">\[\displaystyle \sum_{k=1}^{n}\overline{\omega^{ki}}\omega^{kj}=\sum_{k=1}^{n}\omega^{2\pi+k(j-i)}=\begin{cases}\displaystyle\sum_{i=0}^{n}1=n&amp;i=j\\\dfrac{\omega^{j-i}(1-\omega^{n(j-i)} )}{1-\omega^{j-i}}=0&amp;i\neq j\end{cases}\]</span> 令 <span class="math inline">\(F&#39;=\dfrac{F_n}{\sqrt{n}}\)</span> 则有 <span class="math inline">\(\overline{F&#39;}F&#39;=\dfrac{\overline{F}_nF_n}{n}=I\)</span>，<span class="math inline">\(F&#39;=\dfrac{F_n}{\sqrt{n}}\)</span> 为幺正矩阵 <span class="math inline">\((F&#39;)^{-1}=(F&#39;)^{*}\)</span></p><p>对 <span class="math inline">\(f(x)=C_0+C_1e^{ix}+C_2e^{i2x}+\cdots+C_{n-1}e^{i(n-1)x}\)</span>，给定 <span class="math inline">\(f(0),f(\dfrac{2\pi}{n}),\cdots,f(\dfrac{2\pi(n-1)}{n})\)</span></p><p>对应方程为 <span class="math inline">\(F_{n}\begin{pmatrix}C_0\\C_1\\\vdots\\C_{n-1}\end{pmatrix}=\begin{pmatrix}f(0)\\f(\frac{2\pi}{n})\\\vdots\\f(\frac{2\pi(n-1)}{n})\end{pmatrix}\)</span>，得 <span class="math inline">\(\begin{pmatrix}C_0\\C_1\\\vdots\\C_{n-1}\end{pmatrix}=\dfrac{\overline{F_{n}}}{n}\begin{pmatrix}f(0)\\f(\frac{2\pi}{n})\\\vdots\\f(\frac{2\pi(n-1)}{n})\end{pmatrix}\)</span></p><p>快速傅里叶变换（FFT，二十世纪前十算法之一）对傅里叶矩阵 <span class="math inline">\(F_{2n}\)</span> 进行分解（<span class="math inline">\(\omega=e^{i\frac{2\pi}{2n}}\)</span>） <span class="math display">\[PF_{2n}=\begin{bmatrix}I_n&amp; D_n\\I_n&amp;-D_n\end{bmatrix}\begin{bmatrix}F_n&amp;0\\0&amp;F_n\end{bmatrix}\]</span> 其中 <span class="math inline">\(P\)</span> 将所有奇数列放在左侧，所有偶数列放在右侧，<span class="math inline">\(D_n=\mbox{diag}(1,\omega,\cdots,\omega^{n-1})\)</span></p><p>证明：针对 <span class="math inline">\(A=\begin{bmatrix}I_n&amp; D_n\\I_n&amp;-D_n\end{bmatrix}\begin{bmatrix}F_n&amp;0\\0&amp;F_n\end{bmatrix}\)</span> 的第 <span class="math inline">\(i\)</span> 行第 <span class="math inline">\(j\)</span> 列（下标从 <span class="math inline">\(0\)</span> 开始）分类讨论有 <span class="math display">\[A(i,j)=\begin{cases}F_n(i,j)=\omega_{n}^{ij}=\omega_{2n}^{2ij}&amp;0\leq i\leq n-1,0\leq j\leq n-1\\F_{n}(i-n,j)=\omega_{n}^{(i-n)j}=\omega_{2n}^{2(i-n)j}&amp; n\leq i\leq 2n-1,0\leq j\leq n-1\\F_{n}(i,j-n)\cdot \omega_{2n}^{i}=\omega_{n}^{i(j-n)}\cdot \omega_{2n}^{i}=\omega_{2n}^{(2j+1)i}&amp; 0\leq i\leq n-1,n\leq j\leq 2n-1\\F_{n}(i-n,j-n)\cdot \omega_{2n}^{i-n}=\omega_{2n}^{(2j+1)(i-n)}&amp; n\leq i\leq 2n-1,0\leq j\leq n-1\end{cases}\]</span> 从而固定 <span class="math inline">\(i\)</span> ，可知将 <span class="math inline">\((0,1,\cdots,2n-1,2n)\)</span> 所有奇数列放在左侧所有偶数列放在右侧后形成 <span class="math display">\[(0,2,\cdots,2n),(1,3,\cdots,2n-1)\]</span> 满足上述 <span class="math inline">\(A(i,j)\)</span> 的要求</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>高等代数选讲</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高等代数选讲笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Calculus_A2_notes_Chapter_three（WXF）</title>
    <link href="/2022/03/11/Math/Calculus/Calculus%20A2%20notes%EF%BC%88Chapter%20four%EF%BC%89/"/>
    <url>/2022/03/11/Math/Calculus/Calculus%20A2%20notes%EF%BC%88Chapter%20four%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="第四讲-高阶导数与-taylor-公式">第四讲 高阶导数与 Taylor 公式</h2><h4 id="高阶微分">1.高阶微分</h4><p>称 <span class="math inline">\(E \subseteq \mathbb{R}^{m}\)</span> 是一个<strong>开集</strong>，如果任何 <span class="math inline">\(x \in E\)</span> 都是 <span class="math inline">\(E\)</span> 的内点。 设 <span class="math inline">\(f: E \rightarrow \mathbb{R}^{n}\)</span> 在任何 <span class="math inline">\(x \in E\)</span> 处都可微。则 <span class="math display">\[\mathrm{D}^{1} f: x \mapsto \operatorname{D} f(x), \quad E \rightarrow \mathcal{L}\left(\mathbb{R}^{m} ; \mathbb{R}^{n}\right)\]</span> 定义了 <span class="math inline">\(E\)</span> 上一个映射, 其中 <span class="math inline">\(\mathcal{L}\left(\mathbb{R}^{m} ; \mathbb{R}^{n}\right)\)</span> 是由从 <span class="math inline">\(\mathbb{R}^{m}\)</span> 到 <span class="math inline">\(\mathbb{R}^{n}\)</span> 上所有线性映射组成的一个 <span class="math inline">\(m n\)</span> 维向量空间。</p><p>如果 <span class="math inline">\(\mathrm{D}^{1} f\)</span> 连续, 则称 <span class="math inline">\(f\)</span> 是 <strong><span class="math inline">\(\mathscr{C}^{1}\)</span></strong> 的。 如果 <span class="math inline">\(\mathrm{D}^{1} f\)</span> 可微, 则称 <span class="math inline">\(f\)</span> 是<strong>二阶可微</strong>的, 称 <span class="math inline">\(\mathrm{DD}^{1} f(\mathbf{x})\)</span> 为 <span class="math inline">\(f\)</span> 的<strong>二阶导数</strong>, 记 <span class="math display">\[\mathrm{D}^{2}(\mathbf{x})=\mathrm{DD}^{1} f(\mathbf{x}) .\]</span> 如果 <span class="math inline">\(\mathrm{D}^{2} f: E \rightarrow \mathcal{L}\left(\mathbb{R}^{m} ; \mathcal{L}\left(\mathbb{R}^{m} ; \mathbb{R}^{n}\right)\right)\)</span> 连续, 则称 <span class="math inline">\(f\)</span> 是 <strong><span class="math inline">\(\mathscr{C}^{2}\)</span> </strong>的。</p><p>归纳地, 可以定义 <span class="math inline">\(f\)</span> 的 <span class="math inline">\(k\)</span> 阶导数 <span class="math display">\[\mathrm{D}^{k} f(\mathbf{x})=\mathrm{DD}^{k-1} f(\mathbf{x}) \in \mathcal{L}\left(\mathbb{R}^{m} ; \ldots ; \mathcal{L}\left(\mathbb{R}^{m} ; \mathbb{R}^{n}\right)\right.\]</span> 如果 <span class="math inline">\(\mathrm{D}^{k} f\)</span> 是连续的, 则称 <span class="math inline">\(f\)</span> 是 <span class="math inline">\(\mathscr{C}^{k}\)</span> 的。 如果对任意 <span class="math inline">\(k\)</span> , <span class="math inline">\(f\)</span> 是 <span class="math inline">\(\mathscr{C}^{k}\)</span> 的, 则称 <span class="math inline">\(f\)</span> 是 <span class="math inline">\(\mathscr{C}^{\infty}\)</span> 的。并有 <span class="math display">\[\mathrm{D}^{k} f(\mathbf{x})\left(\mathbf{v}_{1}, \ldots, \mathbf{v}_{k}\right)=\mathrm{D}\left(\mathrm{D}^{k-1} f(\mathbf{x})\left(\mathbf{v}_{1}, \ldots, \mathbf{v}_{k-1}\right)\right)\left(\mathbf{v}_{k}\right)\]</span> 例：<strong>矩阵求逆</strong> $ $ 函数的高阶导数</p><p>上节课我们知道求逆映射是可微的，且 <span class="math inline">\(\operatorname{D \ inv}\left(A_{0}\right)(B)=-A_{0}^{-1} B A_{0}^{-1}\)</span> 。有 <span class="math display">\[\begin{aligned}&amp; \operatorname{D inv}\left(A+B_{2}\right)\left(B_{1}\right) \\=&amp;-\left(A+B_{2}\right)^{-1} B_{1}\left(A+B_{2}\right)^{-1} \\=&amp;-\left[A^{-1}-A^{-1} B_{2} A^{-1}+o\left(B_{2}\right)\right] B_{1}\left[A^{-1}-A^{-1} B_{2} A^{-1}+o\left(B_{2}\right)\right] \\=&amp; \operatorname{D inv}(A)\left(B_{1}\right)+A^{-1} B_{2} A^{-1} B_{1} A^{-1}+A^{-1} B_{1} A^{-1} B_{2} A^{-1}+o\left(B_{2}\right)\end{aligned}\]</span> 当 <span class="math inline">\(B_2\to0\)</span> 。所以 <span class="math inline">\(\mathrm{D}^{2} \operatorname{inv}(A)\left(B_{1}, B_{2}\right)=A^{-1} B_{2} A^{-1} B_{1} A^{-1}+A^{-1} B_{1} A^{-1} B_{2} A^{-1}\)</span> 。 归纳可知，<span class="math inline">\(\mathrm{inv}\)</span> 是任意阶可微的，即： <span class="math display">\[\begin{aligned}&amp;\mathrm{D}^{k} \operatorname{inv}(A)\left(B_{1}, B_{2}, \ldots, B_{k}\right) \\&amp;=(-1)^{k} \sum_{i_{1}, i_{2}, \ldots, i_{k} \text { 是 } 1,2, \ldots, k \text { 的任意排列 }} A^{-1} B_{i_{1}} A^{-1} B_{i_{2}} \cdots A^{-1} B_{i_{k}} A^{-1}\end{aligned}\]</span> 定理：若 <span class="math inline">\(g \circ f\)</span> 中 <span class="math inline">\(f, g\)</span> 都是 <span class="math inline">\(\mathscr{C}^{r}\)</span> 的, 则 <span class="math inline">\(g \circ f\)</span> 也是 <span class="math inline">\(\mathscr{C}^{r}\)</span> 的。</p><p>证明：数学归纳法和链锁法则。</p><p>定理：（<strong>逆映射</strong>的高阶连续性）若 <span class="math inline">\(\mathscr{C}^{r}\)</span> 映射 <span class="math inline">\(g\)</span> 有可微的逆映射 <span class="math inline">\(g^{-1}\)</span>, 则 <span class="math inline">\(g^{-1}\)</span> 也是 <span class="math inline">\(\mathscr{C}^{r}\)</span> 的。</p><p>证明：由链索法则 <span class="math inline">\(I=\mathrm{D}\left(g \circ g^{-1}\right)(\mathbf{y})=\mathrm{D} g\left(g^{-1}(\mathbf{y})\right) \circ \mathrm{Dg}^{-1}(\mathbf{y})\)</span> 。 所以 <span class="math display">\[\operatorname{D} g^{-1}(\mathbf{y})=\left(\operatorname{D}g\left(g^{-1}(\mathbf{y})\right)\right)^{-1}=\operatorname{inv}\left(\operatorname{D}g\left(g^{-1}(\mathbf{y})\right)\right),\]</span> 高阶可微性由 <span class="math inline">\(\mathrm{inv}\)</span> 的高阶可微性和数学归纳法得到。</p><h4 id="高阶偏导数">2.高阶偏导数</h4><p>以二阶微分为例， <span class="math display">\[\begin{aligned}\mathrm{d}^{2} f\left(x^{1}, \ldots, x^{m}\right) &amp;=\sum_{j=1}^{m} \partial_{j}\left(\sum_{i=1}^{m} \partial_{i} f\left(x^{1}, \ldots, x^{m}\right) \mathrm{d} x^{i}\right) \mathrm{d} x^{j} \\&amp;=\sum_{1 \leq i, j \leq m} \partial_{j} \partial_{i} f\left(x^{1}, \ldots, x^{m}\right) \mathrm{d} x^{i} \otimes \mathrm{d} x^{j} \\&amp;=\sum_{1 \leq i, j \leq m} \partial_{j, i}^{2} f\left(x^{1}, \ldots, x^{m}\right) \mathrm{d} x^{i} \otimes \mathrm{d} x^{j}\end{aligned}\]</span> 上式中 <span class="math inline">\(\mathrm{d} x^{i} \otimes \mathrm{d} x^{j}\)</span> 是一个双线性型符号，满足 <span class="math display">\[\mathrm{d} x^{i} \otimes \mathrm{d} x^{j}(\mathbf{v}, \mathbf{w})=\mathrm{d} x^{i}(\mathbf{v}) \mathrm{d} x^{j}(\mathbf{w})\]</span> 即 <span class="math display">\[\mathrm{d} x^{i} \otimes \mathrm{d} x^{j}\left(\sum_{p=1}^{m} \xi^{p} \mathbf{e}_{p}, \sum_{q=1}^{m} \eta^{q} \mathbf{e}_{q}\right)=\xi^{i} \eta^{j}\]</span> 一般地， <span class="math display">\[\mathrm{d}^{k} f(\mathbf{x})=\sum_{1 \leq i_{1}, \ldots, i_{k} \leq m} \partial_{i_{k}, \ldots, i_{1}}^{k} f(\mathbf{x}) \mathrm{d} x^{i_{1}} \otimes \cdots \otimes \mathrm{d} x^{i_{k}}\]</span> 于是, <span class="math inline">\(f\)</span> 是 <span class="math inline">\(\mathscr{C}^{k}\)</span> 的当且仅当 <span class="math inline">\(f\)</span> 的所有 <span class="math inline">\(k\)</span> 阶偏导数都是连续函数。 一般而言, 高阶偏导数的求导顺序不能随意交换，但是<font color="red">当 <span class="math inline">\(f\)</span> 是 <span class="math inline">\(\mathscr{C}^{k}\)</span> 函数时，其直到 <span class="math inline">\(k\)</span> 阶的高阶偏导数的值与求导顺序无关</font>。</p><p>符号与写法： <span class="math display">\[\begin{array}{ccc}\hline \text { 符号 } &amp; \text { 传统符号 } &amp; \text { 含义 } \\\hline \partial_{i} f &amp; \frac{\partial f}{\partial x^{i}} &amp; \text { 一阶偏导数 } \\\partial_{\mathbf{v}} f=\partial_{\left(v^{1}, \ldots, v^{m}\right)} f &amp; \frac{\partial f}{\partial \mathbf{v}} &amp; \text { 沿向量 } \mathbf{v} \text { 的导数 } \\\partial_{i_{k}, \ldots, i_{2}, i_{1}}^{k} f &amp; \frac{\partial^{k} f}{\partial x^{i_{k}} \cdots \partial x^{i_{2}} \partial x^{i_{1}}} &amp; k \text { 阶偏导数 } \\\partial_{\left[\alpha_{1}, \ldots, \alpha_{m}\right]}^{|\alpha|} f &amp; \frac{\partial^{\alpha_{1}+\cdots+\alpha_{m}} f}{\partial\left(x^{1}\right)^{\alpha_{1}} \cdots \partial\left(x^{m}\right)^{\alpha_{m}}} &amp; |\alpha| \text { 阶偏导数 }\\ \hline\end{array}\]</span> <span class="math inline">\(\alpha=\left[\alpha_{1}, \ldots, \alpha_{m}\right]\)</span> 是一组非负整数， $||=<em>{1}++</em>{m} $ 。</p><p>当同时出现不同坐标系时, 用 <span class="math inline">\(\partial_{x^{i}} f\)</span> 代替 <span class="math inline">\(\partial_{i} f ;\)</span> 用 <span class="math inline">\(\partial_{x^{i_{k}}, \ldots, x^{i_{2}, x^{i_{1}}} f}^{k} f\)</span> 代替 <span class="math inline">\(\partial_{i_{k}, \ldots, i_{2}, i_{1}}^{k} f\)</span>; 用 <span class="math inline">\(\partial_{\left(x^{1}\right)^{\alpha_{1}}, \ldots,\left(x^{m}\right)^{\alpha_{m}}}^{|\alpha|} f\)</span> 代替 <span class="math inline">\(\partial_{\left[\alpha_{1}, \ldots, \alpha_{m}\right]}^{|\alpha|} f\)</span> 。</p><h5 id="例laplace-方程">例：Laplace 方程</h5><p><strong>Laplace 方程</strong> <span class="math inline">\(\Delta f=0\)</span> 。Laplace 算子 <span class="math inline">\(\Delta=\nabla \cdot \nabla, \nabla\)</span> 是梯度算子。求 Laplace 方程在平面直角坐标系 <span class="math inline">\((x, y)\)</span> 和极坐标系 <span class="math inline">\((r, \theta)\)</span> 下的形式。</p><p>直角坐标系下，<span class="math inline">\(\nabla=\mathbf{e}_{1} \partial_{x}+\mathbf{e}_{2} \partial_{y}\)</span>，因 <span class="math inline">\(\mathbf{e}_{i} \cdot \mathbf{e}_{j}=\left\{\begin{array}{ll}1, &amp; i=j \\ 0, &amp; i \neq j\end{array} \quad \partial_{x} \mathbf{e}_{i}=\partial_{y} \mathbf{e}_{i}=0\right.\)</span> ，有 <span class="math display">\[\begin{aligned}\nabla^{2} &amp;=\left(\mathbf{e}_{1} \partial_{x}+\mathbf{e}_{2} \partial_{y}\right) \cdot\left(\mathbf{e}_{1} \partial_{x}+\mathbf{e}_{2} \partial_{y}\right) \\&amp;=\mathbf{e}_{1} \cdot \mathbf{e}_{1} \partial_{x, x}^{2}+\mathbf{e}_{2} \cdot \mathbf{e}_{2} \partial_{y, y}^{2}=\partial_{x, x}^{2}+\partial_{y, y}^{2}\end{aligned}\]</span> 平面极坐标下，有 <span class="math inline">\(\nabla=\mathbf{e}_{r} \partial_{r}+\dfrac{\mathbf{e}_{\theta}}{r^{2}} \partial_{\theta}\)</span> ，且基向量不再恒定不变： <span class="math display">\[\partial_{r} \mathbf{e}_{r}=0, \quad \partial_{\theta} \mathbf{e}_{r}=\partial_{r} \mathbf{e}_{\theta}=\frac{\mathbf{e}_{\theta}}{r}, \quad \partial_{\theta} \mathbf{e}_{\theta}=-r \mathbf{e}_{r}\]</span> 因此 <span class="math display">\[\begin{aligned}\nabla^{2} f &amp;=\left(\mathbf{e}_{r} \partial_{r}+\frac{\mathbf{e}_{\theta}}{r^{2}} \partial_{\theta}\right) \cdot\left(\mathbf{e}_{r} \partial_{r}+\frac{\mathbf{e}_{\theta}}{r^{2}} \partial_{\theta}\right) f \\&amp;=\partial_{r, r}^{2} f \mathbf{e}_{r} \cdot \mathbf{e}_{r}+\frac{1}{r^{2}} \partial_{r} f \mathbf{e}_{\theta} \cdot \partial_{\theta} \mathbf{e}_{r}+\frac{1}{r^{4}} \partial_{\theta, \theta}^{2} f \mathbf{e}_{\theta} \cdot \mathbf{e}_{\theta} \\&amp;=\partial_{r, r}^{2} f+\frac{1}{r} \partial_{r} f+\frac{1}{r^{2}} \partial_{\theta, \theta}^{2} f\end{aligned}\]</span></p><h5 id="课后练习"><strong>课后练习</strong></h5><p>问题：（分离变量法）求 Laplace 方程形如 <span class="math inline">\(u(r, \theta)=U(r) V(\theta)\)</span> 形式的解。</p><p>代入公式有 <span class="math inline">\(\Delta u=V(\theta)(\partial^2_{r,r}U(r)+\dfrac{1}{r}\partial_r{U(r)})+\dfrac{U(r)}{r^2}\partial_{\theta,\theta}{V(\theta)}=0\)</span> ，或 <span class="math display">\[\frac{1}{U(r)}(r^2\partial^2_{r,r}U(r)+r\partial_r{U(r)})+\frac{1}{V(\theta)}\partial_{\theta,\theta}{V(\theta)}=0\]</span> 由于前两项与后一项没有关联，可以设 <span class="math inline">\(r^2\partial^2_{r,r}U(r)+r\partial_r{U(r)}=CU(r)\)</span>（这是一个欧拉方程），<span class="math inline">\(\partial_{\theta,\theta}{V(\theta)}=-CV(\theta)\)</span> ，解得 <span class="math display">\[\begin{gathered}\begin{gathered}U(r)=k_{1} \cosh (\sqrt{C} \ln r)+ k_{2} \sinh (\sqrt{C} \ln r),\\V(\theta)=k_3\cos(\sqrt{C}\theta)+k_4\sin(\sqrt{C}\theta);\end{gathered}\quad \text{when \ }C&gt;0\\\begin{gathered}U(r)=k_{1} \cos (\sqrt{C} \ln r)+ k_{2} \sin (\sqrt{C} \ln r),\\V(\theta)=k_3\cosh(\sqrt{C}\theta)+k_4\sinh(\sqrt{C}\theta);\end{gathered}\quad \text{when \ }C&lt;0\\U(r)=k_1\ln r+k_2 \ , \ V(\theta)=k_3\theta \ ;\quad \text{when \ }C=0\end{gathered}\]</span></p><p>因此， <span class="math display">\[u(r,\theta)=\left\{\begin{array}{l}(C_1r^C+C_2r^{-C})\cos(C\theta+C_3)\\\cos(C\ln r+C_1)(C_2\mathrm{e}^{C\theta}+C_3\mathrm{e}^{-C\theta})\\C_1(\ln r+C_2)\theta\end{array}\right.\]</span> 问题：试写出在三维柱坐标、球坐标以及任意维数空间中直角坐标系和一般坐标系下Laplace 算子的坐标形式。</p><p>由上节课的结论可知，球坐标下的梯度算子： <span class="math display">\[\nabla =\mathbf{e}_{r}\partial_{r}  +\frac{\mathbf{e}_{\theta}}{r^{2}} \partial_{\theta}  +\frac{\mathbf{e}_\varphi}{r^{2} \sin ^{2} \varphi} \partial_\varphi\]</span> 且有 <span class="math display">\[\begin{gathered}\partial_r\mathbf{e}_r=0,\partial_r\mathbf{e}_\theta=\frac{\mathbf{e}_\theta}{r},\partial_r\mathbf{e}_\varphi=\frac{\mathbf{e}_\varphi}{r}\\ \partial_\theta\mathbf{e}_r=\frac{\mathbf{e}_\theta}{r},\partial_\theta\mathbf{e}_\theta=-r\mathbf{e}_r,\partial_\theta\mathbf{e}_\varphi=\cot\theta\mathbf{e}_\varphi\\ \partial_\varphi\mathbf{e}_r=\frac{\mathbf{e}_\varphi}{r},\partial_\varphi\mathbf{e}_\theta=\cot\theta\mathbf{e}_\varphi,\partial_\varphi\mathbf{e}_\varphi=\begin{bmatrix}-r\sin\theta\cos\varphi\\-r\sin\theta\sin\varphi\\0\end{bmatrix}\end{gathered}\]</span> 故对球坐标系 <span class="math display">\[\begin{aligned}\Delta&amp;=\nabla\cdot\nabla\\&amp;=(\mathbf{e}_{r}\partial_{r}  +\frac{\mathbf{e}_{\theta}}{r^{2}} \partial_{\theta}  +\frac{\mathbf{e}_\varphi}{r^{2} \sin ^{2} \varphi} \partial_\varphi)\cdot(\mathbf{e}_{r}\partial_{r}  +\frac{\mathbf{e}_{\theta}}{r^{2}} \partial_{\theta}  +\frac{\mathbf{e}_\varphi}{r^{2} \sin ^{2} \varphi} \partial_\varphi)\\&amp;=\partial_{r,r}+0+0+\frac{1}{r}\partial_r+\frac{1}{r^2}\partial_{\theta,\theta}+0+\frac{1}{r}\partial_r+\frac{\cot\theta}{r^2}\partial_\theta+\frac{1}{r^2\sin^2\varphi}\partial_{\varphi,\varphi}\\&amp;=\partial_{r,r}+\frac{2}{r}\partial_r+\frac{1}{r^2}\partial_{\theta,\theta}+\frac{\cot\theta}{r^2}\partial_\theta+\frac{1}{r^2\sin^2\varphi}\partial_{\varphi,\varphi}\end{aligned}\]</span></p><h4 id="taylor-展开">3. Taylor 展开</h4><p>设 <span class="math inline">\(f: E \rightarrow \mathbb{R}\)</span> 是一个 <span class="math inline">\(\mathscr{C}^{k}\)</span> 函数。则 <span class="math inline">\(g(t)=f\left(\mathbf{x}_{0}+t \mathbf{v}\right)\)</span> 也是 <span class="math inline">\(\mathscr{C}^{k}\)</span> 函数, 从而 <span class="math display">\[g(t)=g(0)+g^{\prime}(0) t+\cdots+\frac{g^{(k)}(0)}{k !} t^{k}+o\left(t^{k}\right), \quad t \rightarrow 0\]</span> 由链索法则和数学归纳法可得 <span class="math display">\[\begin{aligned}g^{(k)}(t) &amp;=d^{k} f\left(\mathbf{x}_{0}+t \mathbf{v}\right)(\underbrace{\mathbf{v}, \ldots, \mathbf{v})}_{k \text { 个 }}\\&amp;=\sum_{1 \leq i_{1}, \ldots, i_{k} \leq m} \partial_{i_{k}, \ldots, i_{1}}^{k} f\left(\mathbf{x}_{0}+t \mathbf{v}\right) v^{i_{1}} \cdots v^{i_{k}}\end{aligned}\]</span> 所以 <span class="math display">\[f\left(\mathbf{x}_{0}+t \mathbf{v}\right)=f\left(\mathbf{x}_{0}\right)+\sum_{r=1}^{k} \frac{t^{r}}{r !} \sum_{1 \leq i_{1}, \ldots, i_{r} \leq m} \partial_{i_{r}, \ldots, i_{1}}^{r} f\left(\mathbf{x}_{0}\right) v^{i_{1}} \cdots v^{i_{r}}+o\left(t^{k}\right)\]</span> 对 <span class="math inline">\(\mathrm{x}\)</span>, 取 <span class="math inline">\(v=\frac{\mathrm{x}-\mathrm{x}_{0}}{\left\|\mathrm{x}-\mathrm{x}_{0}\right\|}, t=\left\|\mathrm{x}-\mathrm{x}_{0}\right\|\)</span>, 则 <span class="math display">\[\begin{aligned}f(\mathbf{x})=&amp; f\left(\mathbf{x}_{0}\right) \\&amp;+\sum_{r=1}^{k} \frac{1}{r !} \sum_{1 \leq i_{1}, \ldots, i_{r} \leq m} \partial_{i_{r}, \ldots, i_{1}}^{r} f\left(\mathbf{x}_{0}\right)\left(x^{i_{1}}-x_{0}^{i_{1}}\right) \cdots\left(x^{i_{r}}-x_{0}^{i_{r}}\right) \\&amp;+o\left(\left\|\mathbf{x}-\mathbf{x}_{0}\right\|^{k}\right), \quad \mathbf{x} \rightarrow \mathbf{x}_{0}\end{aligned}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OOP-homework-3</title>
    <link href="/2022/03/10/Program/OOP%20homework%203/"/>
    <url>/2022/03/10/Program/OOP%20homework%203/</url>
    
    <content type="html"><![CDATA[<h1 id="面向对象编程第三次作业">面向对象编程第三次作业</h1><p><strong>Object-Oriented Programming <span class="math inline">\(\bullet\)</span> Homework <span class="math inline">\(\mathbf{3}\)</span></strong></p><p>本次作业报告从模型、验证、分析三个方面，使用<span class="math inline">\(\mbox{Visual Studio 2022}\)</span>编写具有面向对象特性的<span class="math inline">\(\mbox{C++}\)</span>程序，使用继承和组合两种<span class="math inline">\(\mbox{C++}\)</span>面向对象特性，编写了七个类。</p><p>使用单元测试，测算各种图形类中计算周长和面积公式是否正确，使用开源轻量级代码<span class="math inline">\(\mbox{&lt;doctest.h&gt;}\)</span>，采用循环和随机数两种方法判定计算公式，结果在<span class="math inline">\(&lt;10^{-10}\)</span>的误差范围内通过。<br /></p><p><strong>关键词</strong>: 继承;组合;图形计算;单元测试</p><h2 id="模型">模型</h2><h3 id="多边形计算">多边形计算</h3><p>针对一般情况（下图为<span class="math inline">\(n=5\)</span>的实例），边长为<span class="math inline">\(l\)</span>的正<span class="math inline">\(n\)</span>多边形，显然周长为边长的<span class="math inline">\(n\)</span>倍，即<span class="math inline">\(C=nl\)</span>。而对于面积<span class="math inline">\(S_\triangle =\dfrac{1}{2}\cdot l\cdot \dfrac{l}{2\tan (\frac{\pi}{n})}=\dfrac{l^2}{4\tan (\frac{\pi}{n})}\)</span>，则正多边形面积为<span class="math inline">\(S=\dfrac{1}{4}n\cot \dfrac{\pi}{n}\cdot l^2\)</span></p><p><img src="https://pic.imgdb.cn/item/622af9d75baa1a80abd271e1.jpg" style="zoom:25%;" /></p><p>而对于圆有熟知的周长<span class="math inline">\(C=2\pi r\)</span>，面积<span class="math inline">\(S=\pi r^2\)</span>。</p><h3 id="继承">继承</h3><p>对于正三角形、正方形、正五边形、正六边形、圆，都可以看作正多边形（圆是一种特殊的正多边形），从而设计父类<span class="math inline">\(\mbox{&lt;polygon.h&gt;}\)</span>，而另外五种几何对象都可以看作正多边形的特殊类，从而另外五种几何对象使用继承的语法，如正三角形的类定义如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">triangle</span> :<span class="hljs-keyword">public</span> polygon &#123;<br>    <span class="hljs-keyword">public</span>:<br>        <span class="hljs-built_in">triangle</span>() : <span class="hljs-built_in">polygon</span>(<span class="hljs-number">3</span>, <span class="hljs-number">0</span>) &#123;&#125;<br>        <span class="hljs-built_in">triangle</span>(<span class="hljs-type">double</span> l);<br>        ~<span class="hljs-built_in">triangle</span>() &#123;&#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>其中委托<span class="math inline">\(\mbox{polygon}\)</span>中的构造函数，并规定边长数为<span class="math inline">\(3\)</span>，在<span class="math inline">\(\mbox{triangle}\)</span>的另一种构造函数中传入边长长度参数，该正三角形确定，从而在该构造函数中，调用<span class="math inline">\(\mbox{polygon.h}\)</span>中计算周长和面积函数将该正三角形确定并输出其周长和面积，其余正多边形的构造基本一样，圆规定边长数目为<span class="math inline">\(-1\)</span>，便于与其他多边形分开，其余代码与正三角形的代码类似。</p><p>父类<span class="math inline">\(\mbox{&lt;polygon.h&gt;}\)</span>的声明见下，其中使用指针字符串输出对应类型，使用上述方法计算周长和面积。</p><p>......</p>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>面向对象编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面向对象编程作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Calculus-A2-homework second</title>
    <link href="/2022/03/09/Math/Calculus/Calculus%20A2%20homework%20second/"/>
    <url>/2022/03/09/Math/Calculus/Calculus%20A2%20homework%20second/</url>
    
    <content type="html"><![CDATA[<h1 id="largetextcolorblue微积分第二次作业-smallwtimes-f-_textcolorblue2022.3.4"><span class="math inline">\(\large\textcolor{blue}{微积分第二次作业\ \small(W\times f)}\ \ \ \ \ \ _\textcolor{blue}{2022.3.4}\)</span></h1><h5 id="连续性与偏连续性设-fabtimes-cdrightarrow-mathbbr">1、（连续性与偏连续性）设 <span class="math inline">\(f:[a,b]\times [c,d]\rightarrow \mathbb{R}\)</span>。</h5><h5 id="a-如果-f-是连续函数-那么是否成立-对任意-y-inc-d-fcdot-y-a-b-rightarrow-mathbbr-连续-对任意-x-ina-b">(a) 如果 <span class="math inline">\(f\)</span> 是连续函数, 那么是否成立: 对任意 <span class="math inline">\(y \in[c, d], f(\cdot, y)\)</span> : <span class="math inline">\([a, b] \rightarrow \mathbb{R}\)</span> 连续; 对任意 <span class="math inline">\(x \in[a, b]\)</span></h5><h5 id="fx-cdotc-d-rightarrow-mathbbr-连续"><span class="math inline">\(f(x, \cdot):[c, d] \rightarrow \mathbb{R}\)</span> 连续?</h5><h5 id="b-如果对任意-y-inc-d-quad-fcdot-ya-b-rightarrow-mathbbr-连续-对任意-x-ina-b-fx-cdotc-d-rightarrow-mathbbr-连续-那么-f-是否为连续函数-考虑">(b) 如果对任意 <span class="math inline">\(y \in[c, d], \quad f(\cdot, y):[a, b] \rightarrow \mathbb{R}\)</span> 连续; 对任意 <span class="math inline">\(x \in[a, b]\)</span>, <span class="math inline">\(f(x, \cdot):[c, d] \rightarrow \mathbb{R}\)</span> 连续, 那么 <span class="math inline">\(f\)</span> 是否为连续函数? 考虑</h5><p><span class="math display">\[f(x, y)= \begin{cases}\dfrac{x y}{x^{2}+y^{2}}, &amp; x y \neq 0 \\ 0, &amp; x y=0\end{cases}\]</span></p><h5 id="c-设-x_0-ina-b-y_0-inc-d-f-满足-fleftcdot-y_0righta-b-rightarrow-mathbbr-连续-并且对-任意-varepsilon0-存在">(c) 设 <span class="math inline">\(x_{0} \in[a, b], y_{0} \in[c, d], f\)</span> 满足: <span class="math inline">\(f\left(\cdot, y_{0}\right):[a, b] \rightarrow \mathbb{R}\)</span> 连续; 并且对 任意 <span class="math inline">\(\varepsilon&gt;0\)</span>, 存在</h5><h5 id="deltavarepsilon0-使得对任意-x-ina-b-以及任意-y-inc-d-只要-lefty-y_0rightdeltavarepsilon-就有"><span class="math inline">\(\delta(\varepsilon)&gt;0\)</span> 使得对任意 <span class="math inline">\(x \in[a, b]\)</span> 以及任意 <span class="math inline">\(y \in[c, d]\)</span>, 只要 <span class="math inline">\(\left|y-y_{0}\right|&lt;\delta(\varepsilon)\)</span>, 就有</h5><h5 id="leftfx-y-fleftx-y_0rightrightvarepsilon-证明-f-在-leftx_0-y_0right-连续"><span class="math inline">\(\left|f(x, y)-f\left(x, y_{0}\right)\right|&lt;\varepsilon\)</span> 。证明 <span class="math inline">\(f\)</span> 在 <span class="math inline">\(\left(x_{0}, y_{0}\right)\)</span> 连续。</h5><h5 id="d-设-fx-y-分别对每个变量-x-和-y-是连续的且对-y-是单调不减的-证明-f-关于-x-y-是连续">(d) 设 <span class="math inline">\(f(x, y)\)</span> 分别对每个变量 <span class="math inline">\(x\)</span> 和 <span class="math inline">\(y\)</span> 是连续的，且对 <span class="math inline">\(y\)</span> 是单调不减的, 证明 <span class="math inline">\(f\)</span> 关于 <span class="math inline">\((x, y)\)</span> 是连续</h5><h5 id="的">的。</h5><h5 id="设-u-subseteq-mathbbr2-是开集-a-b-in-u-f-在-u-backslasha-b-上有定义-且满足极限">2、设 <span class="math inline">\(U \subseteq \mathbb{R}^{2}\)</span> 是开集, <span class="math inline">\((a, b) \in U, f\)</span> 在 <span class="math inline">\(U \backslash\{(a, b)\}\)</span> 上有定义, 且满足极限</h5><p><span class="math display">\[A=\lim _{(x, y) \rightarrow(a, b)} f(x, y), \quad B=\lim _{y \rightarrow b} \lim _{x \rightarrow a} f(x, y)\]</span></p><h5 id="都存在证明-ab-由此知道-如果">都存在。证明 <span class="math inline">\(A=B\)</span> 。由此知道, 如果</h5><p><span class="math display">\[\lim _{y \rightarrow b} \lim _{x \rightarrow a} f(x, y) \neq \lim _{x \rightarrow a} \lim _{y \rightarrow b} f(x, y)\]</span></p><h5 id="则极限-limlimits-_x-y-rightarrowa-b-fx-y-不存在">则极限 <span class="math inline">\(\lim\limits _{(x, y) \rightarrow(a, b)} f(x, y)\)</span> 不存在。</h5><h5 id="设">3、设</h5><h5 id="a-极限-displaystyle-hylim-_x-rightarrow-a-fx-y-对任意-y-neq-b-存在">(a) 极限 <span class="math inline">\(\displaystyle H(y)=\lim _{x \rightarrow a} f(x, y)\)</span> 对任意 <span class="math inline">\(y \neq b\)</span> 存在;</h5><h5 id="b-极限-displaystyle-gxlim-_y-rightarrow-b-fx-y-对任意-x-存在且存在-delta_00-使得对任意-varepsilon0存在">(b) 极限 <span class="math inline">\(\displaystyle G(x)=\lim _{y \rightarrow b} f(x, y)\)</span> 对任意 <span class="math inline">\(x\)</span> 存在，且存在 <span class="math inline">\(\delta_{0}&gt;0\)</span> 使得：对任意 <span class="math inline">\(\varepsilon&gt;0\)</span>，存在</h5><h5 id="delta_2varepsilon0-对任意-0y-bdelta_2varepsilon-任意-0x-adelta_0-有-fx-y-gxvarepsilon则"><span class="math inline">\(\delta_{2}(\varepsilon)&gt;0\)</span> 对任意 <span class="math inline">\(0&lt;|y-b|&lt;\delta_{2}(\varepsilon)\)</span> 任意 <span class="math inline">\(0&lt;|x-a|&lt;\delta_{0}\)</span> 有 <span class="math inline">\(|f(x, y)-G(x)|&lt;\varepsilon\)</span>，则</h5><h5 id="极限-displaystyle-lim-_x-rightarrow-a-lim-_y-rightarrow-b-fx-y-lim-_y-rightarrow-b-lim-_x-rightarrow-a-fx-y-和-displaystyle-lim-_x-rightarrow-a-y-rightarrow-b-fx-y-都存在-且">极限 <span class="math inline">\(\displaystyle \lim _{x \rightarrow a} \lim _{y \rightarrow b} f(x, y), \lim _{y \rightarrow b} \lim _{x \rightarrow a} f(x, y)\)</span> 和 <span class="math inline">\(\displaystyle \lim _{x \rightarrow a, y \rightarrow b} f(x, y)\)</span> 都存在, 且</h5><p><span class="math display">\[\lim _{x \rightarrow a, y \rightarrow b} f(x, y)=\lim _{y \rightarrow b} \lim _{x \rightarrow a} f(x, y)=\lim _{x \rightarrow a} \lim _{y \rightarrow b} f(x, y)\]</span></p><h5 id="设-1">4、设</h5><p><span class="math display">\[f(x,y)=\begin{cases}x\sin (\dfrac{1}{y}),&amp; y\neq 0\\0,&amp;y=0\end{cases}\]</span></p><h5 id="讨论极限-limlimits_xyto-00fxylimlimits_yto-0limlimits_xto-0fxylimlimits_xto-0limlimits_yto-0fxy">讨论极限 <span class="math inline">\(\lim\limits_{(x,y)\to (0,0)}f(x,y),\lim\limits_{y\to 0}\lim\limits_{x\to 0}f(x,y),\lim\limits_{x\to 0}\lim\limits_{y\to 0}f(x,y)\)</span></h5><h5 id="判断以下极限的存在性-若存在-求出极限值">5、判断以下极限的存在性; 若存在, 求出极限值。</h5><p><span class="math display">\[\begin{gathered}(1) \lim _{(x, y) \rightarrow(0,0)} \frac{\arcsin \left(x^{2}+y^{2}\right)}{x^{2}+y^{2}} &amp;(3) \lim _{(x, y) \rightarrow(0,0)}\left(x^{2}+y^{2}\right) \mathrm{e}^{x-y}&amp;(5) \lim _{(x, y) \rightarrow(0,0)} \frac{x+y}{|x|+|y|}\\(7) \lim _{(x, y) \rightarrow \infty} \frac{x+y}{x^{2}+x y+y^{2}}&amp;(9) \lim _{(x, y) \rightarrow \infty}\left(\frac{|x y|}{x^{2}+x y+y^{2}}\right)^{x^{2}}\end{gathered}\]</span></p><h5 id="设-omega-subseteq-mathbbrm-是一个非空集合">6、设 <span class="math inline">\(\Omega \subseteq \mathbb{R}^{m}\)</span> 是一个非空集合。</h5><h5 id="a-证明函数-displaystyle-f-mathbbrm-rightarrow-mathbbr-fmathbfxinf-_mathbfy-in-omegamathbfy-mathbfx-是一个连续函数">(a) 证明函数 <span class="math inline">\(\displaystyle f: \mathbb{R}^{m} \rightarrow \mathbb{R}, f(\mathbf{x})=\inf _{\mathbf{y} \in \Omega}\|\mathbf{y}-\mathbf{x}\|\)</span>, 是一个连续函数。</h5><h5 id="b-若-omega-是闭集-证明对任意-mathbfx-不在-omega-中-存在-mathbfy-in-omega-使得-fmathbfxleftmathbfy-mathbfxright-并-且-mathbfy-in-partial-omega-即-mathbfy-的任意邻域中都有不属于-omega-的点">(b) 若 <span class="math inline">\(\Omega\)</span> 是闭集, 证明对任意 <span class="math inline">\(\mathbf{x}\)</span> 不在 <span class="math inline">\(\Omega\)</span> 中, 存在 <span class="math inline">\(\mathbf{y}^{*} \in \Omega\)</span> 使得 <span class="math inline">\(f(\mathbf{x})=\left\|\mathbf{y}^{*}-\mathbf{x}\right\|\)</span>, 并 且 <span class="math inline">\(\mathbf{y}^{*} \in \partial \Omega\)</span> (即 <span class="math inline">\(\mathbf{y}^{*}\)</span> 的任意邻域中都有不属于 <span class="math inline">\(\Omega\)</span> 的点)。</h5><h5 id="c-若-omega_1-omega_2-是闭集且其中至少一个有界-证明存在-mathbfx_k-in-omega_k-使得">(c) 若 <span class="math inline">\(\Omega_{1}, \Omega_{2}\)</span> 是闭集且其中至少一个有界, 证明存在 <span class="math inline">\(\mathbf{x}_{k}^{*} \in \Omega_{k}\)</span> 使得</h5><p><span class="math display">\[\left\|\mathbf{x}_{1}^{*}-\mathbf{x}_{2}^{*}\right\|=\inf _{\mathbf{x}_{1} \in \Omega_{1}, \mathbf{x}_{2} \in \Omega_{2}}\left\|\mathbf{x}_{1}-\mathbf{x}_{2}\right\| .\]</span></p><h5 id="d-举例说明上述-闭有界的条件是不能或缺的">(d) 举例说明上述 “闭”、“有界”的条件是不能或缺的。</h5>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elementary number theory homework 3</title>
    <link href="/2022/03/08/Math/Elementary%20number%20theory/Elementary%20number%20theory%20homework%203/"/>
    <url>/2022/03/08/Math/Elementary%20number%20theory/Elementary%20number%20theory%20homework%203/</url>
    
    <content type="html"><![CDATA[<h1 id="largetextcolorblue初等数论第三次作业-_textcolorblue2022.3.8"><span class="math inline">\(\large\textcolor{blue}{初等数论第三次作业}\ \ \ \ \ \ _\textcolor{blue}{2022.3.8}\)</span></h1><h2 id="习题1.2">习题1.2</h2><h4 id="section">1.</h4><h5 id="设-m-为正整数-a-m1.-我们用-a-1-表示同余方程-a-x-equiv-1-bmod-m-的任何一个整数解-即">设 <span class="math inline">\(m\)</span> 为正整数, <span class="math inline">\((a, m)=1\)</span>. 我们用 <span class="math inline">\(a^{-1}\)</span> 表示同余方程 <span class="math inline">\(a x \equiv 1\)</span> <span class="math inline">\((\bmod m)\)</span> 的任何一个整数解 (即</h5><h5 id="left.a-1-in-mathbfz-a-a-1-equiv-1bmod-mright.-证明"><span class="math inline">\(\left.a^{-1} \in \mathbf{Z}, a a^{-1} \equiv 1(\bmod m)\right)\)</span>. 证明：</h5><h5 id="若-a-mb-m1-则-a-equiv-bbmod-m-a-1-equiv-b-1bmod-m">(1) 若 <span class="math inline">\((a, m)=(b, m)=1\)</span>, 则 <span class="math inline">\(a \equiv b(\bmod m)\)</span> $$ <span class="math inline">\(a^{-1} \equiv\)</span> <span class="math inline">\(b^{-1}(\bmod m)\)</span>；</h5><h5 id="若-r_1-r_2-cdots-r_varphim-是模-m-的缩系-则-r_1-1-r_2-1-cdots-r_varphim-1-也是模-m-的缩系">(2) 若 <span class="math inline">\(\{r_{1}, r_{2}, \cdots, r_{\varphi(m)}\}\)</span> 是模 <span class="math inline">\(m\)</span> 的缩系, 则 <span class="math inline">\(\{r_{1}^{-1}, r_{2}^{-1}, \cdots, r_{\varphi(m)}^{-1}\}\)</span> 也是模 <span class="math inline">\(m\)</span> 的缩系。</h5><h4 id="section-1">2</h4><h5 id="设正整数-n-的十进制表示为">设正整数 <span class="math inline">\(n\)</span> 的十进制表示为</h5><p><span class="math display">\[n=a_{0}+a_{1} \cdot 10+a_{2} \cdot 10^{2}+\cdots+a_{k} \cdot 10^{k},\]</span></p><h5 id="证明-leftbeginarrayln-equiv-a_0a_1cdotsa_kbmod-9-n-equiv-a_0-a_1a_2-cdots-1k-a_kbmod-11-.endarrayright.-用这些结果来计算-12345-times-6789-被-9-和">证明: <span class="math inline">\(\left\{\begin{array}{l}n \equiv a_{0}+a_{1}+\cdots+a_{k}(\bmod 9), \\ n \equiv a_{0}-a_{1}+a_{2}-\cdots+(-1)^{k} a_{k}(\bmod 11) .\end{array}\right.\)</span> 用这些结果来计算 <span class="math inline">\(12345 \times 6789\)</span> 被 9 和</h5><h5 id="被-11-除所得的余数">被 11 除所得的余数。</h5><h4 id="section-2">6</h4><h5 id="证明当-n-geqslant-3-时-varphin-为偶数">证明：当 <span class="math inline">\(n \geqslant 3\)</span> 时, <span class="math inline">\(\varphi(n)\)</span> 为偶数。</h5><h4 id="section-3">7</h4><h5 id="设-m-和-n-是正整数mn-tt-in-mathbfz.-证明-模-n-的每个同余类都是模-m-的-t">设 <span class="math inline">\(m\)</span> 和 <span class="math inline">\(n\)</span> 是正整数，<span class="math inline">\(m=n t(t \in \mathbf{Z})\)</span>. 证明: 模 <span class="math inline">\(n\)</span> 的每个同余类都是模 <span class="math inline">\(m\)</span> 的 <span class="math inline">\(t\)</span></h5><h5 id="个同余类之并">个同余类之并。</h5><h4 id="section-4">10</h4><h5 id="设-a-m-in-mathbfz-m-geqslant-2a-m1.-计算-displaystyle-sum_x0m-1leftfraca-xmright.">设 <span class="math inline">\(a, m \in \mathbf{Z}, m \geqslant 2,(a, m)=1\)</span>. 计算 <span class="math inline">\(\displaystyle \sum_{x=0}^{m-1}\left[\frac{a x}{m}\right]\)</span>.</h5><h2 id="习题2.2">习题2.2</h2><h4 id="section-5">1</h4><h5 id="设-alpha-是环-z_m-中非零元素若存在-z_m-中非零元素-betaneq-overline0-使得-alpha-betaoverline0-称-alpha-是零因子证明">设 <span class="math inline">\(\alpha\)</span> 是环 <span class="math inline">\(Z_{m}\)</span> 中非零元素。若存在 <span class="math inline">\(Z_{m}\)</span> 中非零元素 <span class="math inline">\(\beta(\neq \overline{0})\)</span>, 使得 <span class="math inline">\(\alpha \beta=\overline{0}\)</span>, 称 <span class="math inline">\(\alpha\)</span> 是零因子，证明：</h5><h5 id="非零元素-alpha-是零因子当且仅当-alpha-不可逆.-从而-z_m-由彼此不同的三类元素构成overline0-varphim-个可逆">(1)非零元素 <span class="math inline">\(\alpha\)</span> 是零因子当且仅当 <span class="math inline">\(\alpha\)</span> 不可逆. 从而 <span class="math inline">\(Z_{m}\)</span> 由彼此不同的三类元素构成：<span class="math inline">\(\overline{0}, \varphi(m)\)</span> 个可逆</h5><h5 id="元和-m-varphim-1-个零因子">元和 <span class="math inline">\(m-\varphi(m)-1\)</span> 个零因子;</h5><h5 id="z_m-中没有零因子当且仅当-m-是素数">(2) <span class="math inline">\(Z_{m}\)</span> 中没有零因子当且仅当 <span class="math inline">\(m\)</span> 是素数。</h5><h4 id="section-6">2</h4><h5 id="对于环-z_m-中任何元素-alpham-个-alpha-相加为-overline0.">（1）对于环 <span class="math inline">\(Z_{m}\)</span> 中任何元素 <span class="math inline">\(\alpha\)</span>，<span class="math inline">\(m\)</span> 个 <span class="math inline">\(\alpha\)</span> 相加为 <span class="math inline">\(\overline{0}\)</span>.</h5><h5 id="设-p-为素数.-对于域-z_p-中非零元素-alpha-和正整数-n证明-n-个-alpha-相加为-overline0-当且仅当-p-mid-n">（2）设 <span class="math inline">\(p\)</span> 为素数. 对于域 <span class="math inline">\(Z_{p}\)</span> 中非零元素 <span class="math inline">\(\alpha\)</span> 和正整数 <span class="math inline">\(n\)</span>，证明： <span class="math inline">\(n\)</span> 个 <span class="math inline">\(\alpha\)</span> 相加为 <span class="math inline">\(\overline{0}\)</span> 当且仅当 <span class="math inline">\(p \mid n\)</span>。</h5><h4 id="section-7">3</h4><h5 id="证明当-p-为奇素数时2p-1-cdotleftleftdfracp-12right-right2-equiv-1fracp12bmod-p">证明当 <span class="math inline">\(p\)</span> 为奇素数时，<span class="math inline">\(2^{p-1} \cdot\left(\left(\dfrac{p-1}{2}\right) !\right)^{2} \equiv(-1)^{\frac{p+1}{2}}(\bmod p)\)</span>。</h5><h4 id="section-8">4</h4><h5 id="对于整数-m-geqslant-2-证明-m-1-equiv-1bmod-m-当且仅当-m-是素数-判别-m-是否为素数">对于整数 <span class="math inline">\(m \geqslant 2\)</span>, 证明: <span class="math inline">\((m-1) ! \equiv-1(\bmod m)\)</span> 当且仅当 <span class="math inline">\(m\)</span> 是素数。 (判别 <span class="math inline">\(m\)</span> 是否为素数)</h5><h4 id="section-9">5</h4><h5 id="若-z_mleftalpha_1-cdots-alpha_phimright则-z_mleftalpha_1-1-cdots-alpha_phim-1right如何将它转述成同余的语言">若 <span class="math inline">\(Z_{m}^{*}=\left\{\alpha_{1}, \cdots, \alpha_{\phi(m)}\right\}\)</span>，则 <span class="math inline">\(Z_{m}^{*}=\left\{\alpha_{1}^{-1}, \cdots, \alpha_{\phi(m)}^{-1}\right\}\)</span>。如何将它转述成同余的语言?</h5><h2 id="习题2.3">习题2.3</h2><h4 id="section-10">1</h4><h5 id="设-n-和-m-是互素的正整数证明-mvarphinnvarphimequiv1bmod-m-n">设 <span class="math inline">\(n\)</span> 和 <span class="math inline">\(m\)</span> 是互素的正整数，证明： <span class="math inline">\(m^{\varphi(n)}+n^{\varphi(m)}\equiv1(\bmod m n)\)</span>。</h5><h4 id="section-11">2</h4><h5 id="对每个与-10-互素的整数-a-证明-a20-equiv-1bmod-100">(1) 对每个与 10 互素的整数 <span class="math inline">\(a\)</span>, 证明: <span class="math inline">\(a^{20} \equiv 1(\bmod 100)\)</span>；</h5><h5 id="求-3193-的十进制表达式中的个位和十位数字">(2) 求 <span class="math inline">\(3^{193}\)</span> 的十进制表达式中的个位和十位数字。</h5><h4 id="section-12">3</h4><h5 id="设-a-b-in-mathbfz-n-geqslant-1-p-为素数如果-a-equiv-bleftbmod-pnright证明对每个整数-k-geqslant-0">(1)设 <span class="math inline">\(a, b \in \mathbf{Z}, n \geqslant 1, p\)</span> 为素数。如果 <span class="math inline">\(a \equiv b\left(\bmod p^{n}\right)\)</span>，证明：对每个整数 <span class="math inline">\(k \geqslant 0\)</span>，</h5><h5 id="apk-equiv-bpkleftbmod-pnkright"><span class="math inline">\(a^{p^{k}} \equiv b^{p^{k}}\left(\bmod p^{n+k}\right)\)</span>；</h5><h5 id="证明-对每个奇数-a-和-k-geqslant-1-a2k-equiv-1leftbmod-2k2right.">(2) 证明: 对每个奇数 <span class="math inline">\(a\)</span> 和 <span class="math inline">\(k \geqslant 1, a^{2^{k}} \equiv 1\left(\bmod 2^{k+2}\right)\)</span>.</h5>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>初等数论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>初等数论作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年女生节</title>
    <link href="/2022/03/07/Girls-Festival/"/>
    <url>/2022/03/07/Girls-Festival/</url>
    
    <content type="html"><![CDATA[<p>祝 <span class="math inline">\(\mbox{yy}\)</span> 姐和微软工的小仙女们美丽可爱，青春永在，和烦恼 <span class="math inline">\(\mbox{say goodbye!}\)</span> 女生节快乐鸭~~</p><p>有剧情，有祝福，有礼物，有表演，有气球……算是很开心的啦~</p><p>据说女生评价挺高的，算是成功地反馈去年的男生节了。</p><p><span class="math inline">\(B\)</span> 站视频如右：<a href="https://www.bilibili.com/video/BV12L4y1M7kJ?p=1&amp;share_medium=android&amp;share_plat=android&amp;share_session_id=f7e325a2-7619-413d-afbf-6931de4e9d11&amp;share_source=WEIXIN&amp;share_tag=s_i&amp;timestamp=1646823543&amp;unique_k=CnDa6VS">清华女生节竟是这样过的！</a></p><p>最后被邵美琪唱的《这世界那么多人》洗脑了~~</p><p><img src="https://pic.imgdb.cn/item/6226d80f5baa1a80ab06707f.jpg" style="zoom:20%;" /></p>]]></content>
    
    
    <categories>
      
      <category>节日</category>
      
      <category>女生节</category>
      
    </categories>
    
    
    <tags>
      
      <tag>2022年女生节记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OOP-Homework-2</title>
    <link href="/2022/03/06/Program/OOP%20Homework%202/"/>
    <url>/2022/03/06/Program/OOP%20Homework%202/</url>
    
    <content type="html"><![CDATA[<h1 id="面向对象编程第二次作业">面向对象编程第二次作业</h1><p><strong>Object-Oriented Programming <span class="math inline">\(\bullet\)</span> Homework <span class="math inline">\(\mathbf{2}\)</span></strong></p><h2 id="模型">模型</h2><h3 id="穷举法">穷举法</h3><p>对输入的正整数<span class="math inline">\(a,b\ (1\leq a,b\leq 10^{9})\)</span>，从两者较小者不断递减，验证是否均整除<span class="math inline">\(a\)</span>和<span class="math inline">\(b\)</span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GCDAndLCM::EnumerateGCD</span><span class="hljs-params">(<span class="hljs-type">int</span> num1, <span class="hljs-type">int</span> num2)</span> </span>&#123;<br>    <span class="hljs-type">int</span> ans = (num1 &gt; num2) ? num2 : num1;<br>    <span class="hljs-keyword">while</span> (num1 % ans != <span class="hljs-number">0</span> || num2 % ans != <span class="hljs-number">0</span>)<br>        ans--;<br>    <span class="hljs-keyword">return</span> ans;<br>&#125;<br></code></pre></td></tr></table></figure><p>关键代码如上，写成单独函数的形式便于测量时间</p><h3 id="欧几里得算法">欧几里得算法</h3><p>对正整数<span class="math inline">\(a,b(a&lt;b)\)</span>，有<span class="math inline">\(\mbox{gcd}(a,b)=\mbox{gcd}(b\%a,a)\)</span>，称为欧几里得算法。</p><p>证明：由带余除法定理，若<span class="math inline">\(b&gt;a\)</span>，则<span class="math inline">\(\exists\  q\in Z,r\in[0,a-1),s.t.\ b=aq+r\)</span>，从而<span class="math inline">\(\mbox{gcd}(a,b\%a)=\mbox{gcd}(a,r)=\mbox{gcd}(a,b-aq)=\mbox{gcd}(a,b)\)</span> 则使用递归法计算两个正整数的最大公约数，关键代码如下。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GCDAndLCM::EuclideanGCD</span><span class="hljs-params">(<span class="hljs-type">int</span> num1, <span class="hljs-type">int</span> num2)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (num1 &lt; num2)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">EuclideanGCD</span>(num2, num1);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">return</span> (num1 % num2 == <span class="hljs-number">0</span>) ? num2 : <span class="hljs-built_in">EuclideanGCD</span>(num2, num1 % num2);<br>&#125;<br></code></pre></td></tr></table></figure><p>当其中一数整除另一数时，返回前者，否则继续辗转相除法，同时不断调整使得前者不小于后者。由数论结论有<span class="math inline">\([a,b]=\dfrac{ab}{(a,b)}\)</span>，从而最小公倍数可求</p><h3 id="类的定义">类的定义</h3><p>本次编程头文件<span class="math inline">\(GCDAndLCM.h\)</span>中类的定义以及对应方法如下，其中输入数据<span class="math inline">\(N\)</span>、输出结果<span class="math inline">\(\mbox{GCD}\)</span>和<span class="math inline">\(\mbox{LCM}\)</span>以及相关的时间放在<span class="math inline">\(\mbox{private}\)</span>内，其余构造函数、析构函数以及输入、方法计算、自动测试、时间测量相关函数头放在<span class="math inline">\(\mbox{public}\)</span>中。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">GCDAndLCM</span> &#123;<br>    <span class="hljs-keyword">private</span>:<br>        <span class="hljs-type">int</span> a, b;<br>        <span class="hljs-type">int</span> GCD;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> LCM;<br>        <span class="hljs-type">double</span> timeGCD,timeLCM;<br>        <span class="hljs-type">double</span> frequency;<br>    <span class="hljs-keyword">public</span>:<br>        <span class="hljs-built_in">GCDAndLCM</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, <span class="hljs-type">int</span> j = <span class="hljs-number">0</span>, <span class="hljs-type">int</span> t1 = <span class="hljs-number">0</span>, <span class="hljs-type">int</span> t2 = <span class="hljs-number">0</span>);<br>        <span class="hljs-built_in">GCDAndLCM</span>(<span class="hljs-type">const</span> GCDAndLCM&amp; g):<span class="hljs-built_in">a</span>(g.a),<span class="hljs-built_in">b</span>(g.b),<span class="hljs-built_in">GCD</span>(g.GCD),<span class="hljs-built_in">LCM</span>(g.LCM),<span class="hljs-built_in">timeGCD</span>(g.timeGCD),<span class="hljs-built_in">timeLCM</span>(g.timeLCM),<span class="hljs-built_in">frequency</span>(g.frequency) &#123;&#125;<br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">input</span><span class="hljs-params">()</span></span>;       <span class="hljs-comment">//获取数据存入a,b中</span><br>        <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">EnumerateGCD</span><span class="hljs-params">(<span class="hljs-type">int</span> num1, <span class="hljs-type">int</span> num2)</span></span>;<br>        <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">EuclideanGCD</span><span class="hljs-params">(<span class="hljs-type">int</span> num1, <span class="hljs-type">int</span> num2)</span></span>;<br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getGCDResults</span><span class="hljs-params">()</span></span>;   <span class="hljs-comment">//计算最大公约数</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getLCMResults</span><span class="hljs-params">()</span></span>;   <span class="hljs-comment">//计算最小公倍数</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">singleTest</span><span class="hljs-params">()</span></span>;  <span class="hljs-comment">//手动输入测试</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">autoTest</span><span class="hljs-params">()</span></span>;    <span class="hljs-comment">//自动化测试</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">inquiry</span><span class="hljs-params">()</span></span>;     <span class="hljs-comment">//询问测试方法</span><br>        ~<span class="hljs-built_in">GCDAndLCM</span>() &#123;&#125;<br>    &#125;;<br></code></pre></td></tr></table></figure><p>由于若<span class="math inline">\((a,b)=1\)</span>即<span class="math inline">\(a\)</span>和<span class="math inline">\(b\)</span>互素时，<span class="math inline">\([a,b]=a\cdot b\)</span>可以达到<span class="math inline">\(10^{18}\)</span>量级，从而使用<span class="math inline">\(\mbox{long long}\)</span>数据类型存储<span class="math inline">\(\mbox{LCM}\)</span>（最小公倍数）。使用<span class="math inline">\(\mbox{&lt;windows.h&gt;}\)</span>中<span class="math inline">\(QueryPerformanceFrequency(\&amp;F)\longrightarrow frequency = F.QuadPart\)</span>获取使用频率，便于后面高精度计算所用时间。</p><h2 id="验证">验证</h2><p>本实验结合不同情况，编写两种测试，一种为手动输入范围内两个正整数进行测试，输出两种方法对应结果和所需要时间。另一种测试方式为自动测试，使用<span class="math inline">\(\mbox{&lt;ctime&gt;}\)</span>中的随机数<span class="math inline">\(\mbox{rand()}\)</span>相乘，将两种方法计算的结果进行比较、输出结果以及对应时间。</p><h3 id="手动输入测试">手动输入测试</h3><p>在初始询问时输入<span class="math inline">\(\mbox{0}\)</span>进入手动输入测试模式，输入不同的数字输出结果以及消耗时间：</p><p><img src="https://pic.imgdb.cn/item/622a1bb15baa1a80ab53a725.jpg" style="zoom:80%;" /></p><p>可以看出，对于第二种方法，计算时间在<span class="math inline">\(10^{-3}\mbox{ms}\sim 10^{-6}\mbox{s}\)</span>量级，也就是<span class="math inline">\(1\mbox{s}\)</span>内可以至少计算完一百万组数据的最大公约数和最小公倍数，而第一种穷举的方法计算时间随输入数据线性增加。</p><h3 id="自动测试">自动测试</h3><p>在询问时输入<span class="math inline">\(\mbox{1}\)</span>进入自动化测试模式，连续两次使用两个随机数相乘得到<span class="math inline">\(a,b\)</span>，采用两种算法计算对应最大公约数和最小公倍数，比对两者是否相同，输出结果，重复该过程<span class="math inline">\(10\)</span>次，最后输出两种方法时间分别消耗的总时间，以下为某次输出结果。 <span class="math display">\[\small\begin{array}{|c|c|c|}\hline \text { 测试序号 } &amp; \text { 最大公约数 } &amp; \text { 最小公倍数 } \\\hline \# 1 &amp; (130743583,573423651)=17 &amp; {[130743583,573423651]=4410086041687149} \\\hline \# 2 &amp; (369064716,30402746)=2 &amp; {[369064716,30402746]=5610290409055068} \\\hline \# 3 &amp; (594322690,82811424)=2 &amp; {[594322690,82811424]=24608354137205280} \\\hline \# 4 &amp; (104223784,11654964)=4 &amp; {[104223784,11654964]=303681112615944} \\\hline \# 5 &amp; (864568560,349050135)=15 &amp; {[864568560,349050135]=20118518172317040} \\\hline \# 6 &amp; (258643100,230600502)=2 &amp; {[258643100,230600502]=29821614349418100} \\\hline \# 7 &amp; (108403370,193179162)=46 &amp; {[108403370,193179162]=455245047273390} \\\hline \# 8 &amp; (47632487,289415316)=1 &amp; {[47632487,289415316]=13785571276970892} \\\hline \# 9 &amp; (3119375,68440383)=1 &amp; {[3119375,68440383]=213491219720625} \\\hline \# 10 &amp; (251300764,156068087)=1 &amp; {[251300764,156068087]=39220029499118468} \\\hline\end{array}\]</span> <span class="math inline">\(\mbox{All the tests are right! Enumerate algorithm cost 10.941s, Euclidean algorithm cost 3.03e-05s.}\)</span>，与手动输入测试结果基本吻合。</p><h2 id="分析">分析</h2><h3 id="复杂度">复杂度</h3><p>对于穷举法，显然消耗时间正比于数据规模<span class="math inline">\(N\)</span>,从而其时间复杂度为<span class="math inline">\(O(N)\)</span>。</p><p>对于欧几里得算法，每次时间的消耗与<span class="math inline">\(a,b\)</span>的增加并非线性，比如当<span class="math inline">\(a,b\)</span>很大，但<span class="math inline">\(|a-b|=1\)</span>时，计算最大公约数只消耗了两倍的常数时间。则从最坏的时间消耗来看，<span class="math inline">\((N,m)\longrightarrow (m,n)\)</span>，<span class="math inline">\(m&lt; \dfrac{N}{2}\)</span>，则最坏情况下每次数据只能达到减半，时间复杂度为<span class="math inline">\(O(\log N)\)</span>。</p><p>在上述自动化测试中，前者规模<span class="math inline">\(N_1=\dfrac{1}{10}\displaystyle \sum_{i=1}^{i=10}\min(a_i,b_i)\approx 1.1\times 10^{8}\)</span>，后者规模<span class="math inline">\(N_2=\dfrac{1}{20}\displaystyle \sum_{i=1}^{10}(a_i+b_i) \approx 2.4\times 10^{8}\)</span>，在欧几里得算法最坏的情况下，两者理论时间消耗之比<span class="math inline">\(\dfrac{t_1}{t_2}\sim \dfrac{N_1}{\log N_2}\approx 3.95\times 10^{6}\)</span>，与测得数据<span class="math inline">\(\dfrac{t_1}{t_2}=\dfrac{10.941\mbox{s}}{3.03\times 10^{-5}\mbox{s}}\approx 3.61\times 10^{6}\)</span>基本一致。</p><p>显然，穷举法空间复杂度为<span class="math inline">\(O(1)\)</span>，而欧几里得算法由于使用递归，需要存储步骤中的数据，空间复杂度为<span class="math inline">\(O(\log N)\)</span></p><h3 id="优缺点">优缺点</h3><p>从耗时的角度，欧几里得算法远快于穷举法，而且在函数递归调用次数可达<span class="math inline">\(10^{3}\)</span>，在数据规模小于<span class="math inline">\(2^{10^{3}}\approx 10^{300}\)</span>内均不会出现栈溢出的问题。从而欧几里得算法为当前计算最大公约数和最小公倍数的主流算法。</p><h3 id="有效性充分性">有效性、充分性</h3><p>由上述验证可以看出，对于输入数据的绝对最大值<span class="math inline">\(2^{31}-1\)</span>和<span class="math inline">\(2^{31}-2\)</span>，其最小公倍数<span class="math inline">\((2^{31}-1)\cdot (2^{31}-2)= 4.61\times 10^{18}&lt;\max{\mbox{(long long)}}=2^{63}-1=9.22\times 10^{18}\)</span>，输入数据能保证输出结果，保证了充分性。</p><p>有效性不能完全通过遍历验证，因为遍历组合达到<span class="math inline">\(\sim \dfrac{1}{2}\cdot 2^{31}\cdot 2^{31}=2^{61}\)</span>，不可能全部验证通过，但在自动化测试检验以及数学公式的推导下，该程序有效性能够很好地保证。</p>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>面向对象编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面向对象编程作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python-Visualization-Graphs</title>
    <link href="/2022/03/05/Program/Python-Visualization-Graphs/"/>
    <url>/2022/03/05/Program/Python-Visualization-Graphs/</url>
    
    <content type="html"><![CDATA[<p>从各种库中获取绘制图表的工具</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">from</span> wordcloud <span class="hljs-keyword">import</span> WordCloud, ImageColorGenerator<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> matplotlib <span class="hljs-keyword">as</span> mpl<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><span class="hljs-keyword">from</span> pickle <span class="hljs-keyword">import</span> TRUE<br><span class="hljs-keyword">import</span> xlwings <span class="hljs-keyword">as</span> xw<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> time<br></code></pre></td></tr></table></figure><p>在第一天获取到每个 <span class="math inline">\(\mbox{sheet}\)</span> 下的每个列表中每个词汇在标题和内容中分别出现的次数后，希望针对这些数据作图，其中饼状图的绘制函数如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#全局颜色变量</span><br>colorsFoxconn = [<span class="hljs-string">&#x27;#FEE9CE&#x27;</span>,<span class="hljs-string">&#x27;#F5D0C7&#x27;</span>,<span class="hljs-string">&#x27;#BEB2BE&#x27;</span>,<span class="hljs-string">&#x27;#6A909D&#x27;</span>,<span class="hljs-string">&#x27;#A8C4E9&#x27;</span>,<span class="hljs-string">&#x27;#DCEDFD&#x27;</span>]<span class="hljs-comment">#颜色全局变量</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">drawPieGraphs</span>(<span class="hljs-params">list1,list2,title</span>):<br>    <span class="hljs-keyword">if</span> list1 == <span class="hljs-literal">None</span>:<span class="hljs-comment">#如果传入参数为空，则直接返回空</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>]=<span class="hljs-string">&#x27;SimHei&#x27;</span><span class="hljs-comment">#设置中文显示</span><br>    plt.figure(figsize=(<span class="hljs-number">6</span>,<span class="hljs-number">6</span>))<span class="hljs-comment">#设置画布大小</span><br>    plt.pie(list2,labels=list1,autopct=<span class="hljs-string">&#x27;%1.1f%%&#x27;</span>,shadow = <span class="hljs-literal">True</span>,colors = colorsFoxconn)<span class="hljs-comment">#list1为项目名称，list2为数量分布</span><br>    plt.title(title)<span class="hljs-comment">#加标题</span><br>    posiGraph = <span class="hljs-string">&#x27;./饼状图/&#x27;</span>  <span class="hljs-comment">#获取保存位置</span><br>    posiGraph +=<span class="hljs-built_in">str</span>(title)<span class="hljs-comment">#保存名称为“标题.jpg”</span><br>    plt.savefig(posiGraph,dpi = <span class="hljs-number">500</span>)<span class="hljs-comment">#dpi代表像素，</span><br></code></pre></td></tr></table></figure><p>柱状图的绘制函数如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">colorsWarm = [<span class="hljs-string">&#x27;#E09E09&#x27;</span>,<span class="hljs-string">&#x27;#B27A63&#x27;</span>,<span class="hljs-string">&#x27;#DCA77B&#x27;</span>,<span class="hljs-string">&#x27;#BD6C41&#x27;</span>,<span class="hljs-string">&#x27;#C1B585&#x27;</span>,<span class="hljs-string">&#x27;#F0DEAF&#x27;</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">drawColumnGraphs</span>(<span class="hljs-params">list1,list2,title</span>):<br>    plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>]=<span class="hljs-string">&#x27;SimHei&#x27;</span><span class="hljs-comment">#设置中文显示</span><br>    plt.figure(figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>))<br>    plt.bar(list1,list2,color = colorsWarm,width = <span class="hljs-number">0.66</span>)<span class="hljs-comment">#柱状图函数调用</span><br>    plt.xticks(list1, list1, rotation = -<span class="hljs-number">55</span>)<span class="hljs-comment">#柱状图X轴标定，rotation为旋转角度</span><br>    plt.title(title)<span class="hljs-comment">#柱状图标题标定</span><br>    posiGraph = <span class="hljs-string">&#x27;./柱状图/&#x27;</span><span class="hljs-comment">#存储路径</span><br>    posiGraph +=<span class="hljs-built_in">str</span>(title)<span class="hljs-comment">#保存图片名称和标题相同</span><br>    plt.savefig(posiGraph)<br></code></pre></td></tr></table></figure><p>饼状图和柱状图两者都需要按顺序传入<strong>项目名称、数量分布、标题</strong></p><p>其中，为追求美观，需要对原始数据加以计算和修正，将 <span class="math inline">\(5\%-20\%\)</span> 排序靠后的部分归类为“其他”代码部分有些凌乱，掺杂了一些文件导入的操作，以后传入函数的时候还是尽量减少耦合度具体来说，先计算总和，排序后将后面小量汇总为“其他”，但是数量过多或者过少也需要判断，主要针对饼状图而言。</p><p>词云图的绘制函数如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> wordcloud <span class="hljs-keyword">import</span> WordCloud, ImageColorGenerator<br><br><span class="hljs-comment"># 获取颜色map，以便传入绘制词云函数中，设定文字颜色</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">colormap</span>():<br>  <span class="hljs-keyword">return</span> mpl.colors.LinearSegmentedColormap.from_list(<span class="hljs-string">&#x27;cmap&#x27;</span>, [<span class="hljs-string">&quot;#000080&quot;</span>,<span class="hljs-string">&quot;#6495ED&quot;</span>,<span class="hljs-string">&quot;#778899&quot;</span>,<span class="hljs-string">&quot;#76ACF3&quot;</span>,<span class="hljs-string">&quot;#B588BE&quot;</span>], <span class="hljs-number">256</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">draw_cloud</span>():<br>    getdata =   &#123;<span class="hljs-string">&quot;杨倩&quot;</span>: <span class="hljs-number">510</span>,<span class="hljs-string">&quot;孙颖莎&quot;</span>: <span class="hljs-number">292</span>,<span class="hljs-string">&quot;刘诗雯&quot;</span>: <span class="hljs-number">143</span>,<span class="hljs-string">&quot;许昕&quot;</span>: <span class="hljs-number">173</span>,<span class="hljs-string">&quot;马龙&quot;</span>: <span class="hljs-number">466</span>,<span class="hljs-string">&quot;樊振东&quot;</span>: <span class="hljs-number">298</span>,<span class="hljs-string">&quot;王曼昱&quot;</span>: <span class="hljs-number">153</span>,<span class="hljs-string">&quot;昕雯&quot;</span>: <span class="hljs-number">19</span>,<span class="hljs-string">&quot;中国跳水队&quot;</span>: <span class="hljs-number">120</span>,<span class="hljs-string">&quot;体育&quot;</span>: <span class="hljs-number">15373</span>,<span class="hljs-string">&quot;孫亜楠&quot;</span>: <span class="hljs-number">13</span>,<span class="hljs-string">&quot;全紅嬋&quot;</span>: <span class="hljs-number">11</span>,&#125;<span class="hljs-comment">#给定词频或者通过计算得到词频字典（使用Counter计数器）</span><br>    image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;background.png&#x27;</span>)  <span class="hljs-comment"># 设置背景轮廓图（在代码所在文件夹）</span><br>    graph = np.array(image)<br>    mask = np.array(image)<br>    wc = WordCloud(width = <span class="hljs-number">1400</span>,height = <span class="hljs-number">800</span>,collocations=<span class="hljs-literal">False</span>,margin=<span class="hljs-number">2</span>,font_path = <span class="hljs-string">&#x27;simkai.ttf&#x27;</span>, background_color =<span class="hljs-string">&#x27;white&#x27;</span>,min_font_size = <span class="hljs-number">0</span>,max_font_size = <span class="hljs-number">2000</span>,mask = mask, max_words = <span class="hljs-number">1000</span>,colormap = colormap())<span class="hljs-comment">#大小、指定字体、背景颜色、字号、颜色map</span><br>    wc.generate_from_frequencies(getdata)  <span class="hljs-comment"># 根据给定词频生成词云</span><br>    image_color = ImageColorGenerator(graph)<br>    plt.imshow(wc)<br>    plt.axis(<span class="hljs-string">&quot;off&quot;</span>)  <span class="hljs-comment"># 不显示坐标轴</span><br>    wc.to_file(<span class="hljs-string">&#x27;图片名称.png&#x27;</span>)  <span class="hljs-comment"># 图片命名</span><br>    file = <span class="hljs-string">r&quot;C:\Users\liuy\Desktop\存放的文件夹&quot;</span><br>    name = <span class="hljs-string">&quot;\图片名称&quot;</span><br>    plt.savefig(file + name)<br></code></pre></td></tr></table></figure><p><span class="math inline">\(\mbox{DNA}\)</span> 图表代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">draw</span>(<span class="hljs-params">title,tempJson</span>):<br>    numOfObjects = <span class="hljs-built_in">len</span>(tempJson)<br>    fig1 = plt.figure()<br>    ax1 = fig1.add_subplot(<span class="hljs-number">111</span>)<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(tempJson)):<br>        <span class="hljs-keyword">if</span>(tempJson[j] == <span class="hljs-literal">None</span>):<br>            numOfObjects -= <span class="hljs-number">1</span><br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-built_in">max</span> = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> tempJson[j]:<br>            <span class="hljs-keyword">if</span> tempJson[j][key] &gt; <span class="hljs-built_in">max</span>:<br>                <span class="hljs-built_in">max</span> = tempJson[j][key]<br>        <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> tempJson[j]:<br>            validFrequency = tempJson[j][key]<br>            posiX = findSection(<span class="hljs-built_in">int</span>(key),yearPoint) / <span class="hljs-number">2.5</span><br>            posiXAll = []<br>            <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">7</span>):<br>                posiXAll.append((findSection(yearPoint[<span class="hljs-number">5</span> *k],yearPoint)) / <span class="hljs-number">2.5</span>)<br>            plt.xticks(posiXAll, showData)<br>            rect = plt.Rectangle((posiX, <span class="hljs-number">2</span> + <span class="hljs-number">3.0</span> * (numOfObjects - j)), <span class="hljs-number">0.6</span>, <span class="hljs-number">0.8</span>, color = <span class="hljs-string">&#x27;#00CED1&#x27;</span>,alpha = validFrequency / <span class="hljs-built_in">max</span>)<br>            ax1.add_patch(rect)<br>    posiYAll = []<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(tempJson)):<br>        posiYAll.append(<span class="hljs-number">2</span> + <span class="hljs-number">3</span> * (numOfObjects - j))<br>    plt.yticks(posiYAll,allObjects[i],fontsize = <span class="hljs-number">7</span>)<br>    plt.xlim(<span class="hljs-number">0</span>,<span class="hljs-number">12</span>)<br>    plt.ylim(<span class="hljs-number">0</span>,<span class="hljs-number">4</span> * numOfObjects)<br>    titleName = title + <span class="hljs-string">&quot;报道趋势图&quot;</span><br>    plt.title(titleName)<br>    plt.savefig(<span class="hljs-string">r&quot;C:\Users\liuy\Desktop\DNA图片&quot;</span> + <span class="hljs-string">&quot;\\&quot;</span> + titleName + <span class="hljs-string">&quot;.png&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>针对给定文字段落的词云分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">draw_cloud</span>():<br>    image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;background.png&#x27;</span>) <br>    graph = np.array(image)<br>    mask = np.array(image)<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">u&#x27;introduction.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>).read()<br>    wordcloud = WordCloud(font_path=<span class="hljs-string">&#x27;simkai.ttf&#x27;</span>,background_color = <span class="hljs-string">&quot;white&quot;</span>,width = <span class="hljs-number">10000</span>, height = <span class="hljs-number">10000</span>, margin = <span class="hljs-number">2</span>, mask = mask, colormap = colormap()).generate(f)<br>    <span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>    image_color = ImageColorGenerator(graph)<br>    plt.imshow(wordcloud, interpolation=<span class="hljs-string">&quot;bilinear&quot;</span>)<br>    plt.axis(<span class="hljs-string">&quot;off&quot;</span>)<br>    plt.savefig(<span class="hljs-string">&quot;./&quot;</span>,dpi = <span class="hljs-number">2000</span>)<br></code></pre></td></tr></table></figure><p>如果需要将离散点转换成曲线</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">X3=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">26</span>,<span class="hljs-number">27</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">32</span>,<span class="hljs-number">33</span>,<span class="hljs-number">34</span>,<span class="hljs-number">35</span>,<span class="hljs-number">36</span>,<span class="hljs-number">37</span>,<span class="hljs-number">38</span>,<span class="hljs-number">39</span>,<span class="hljs-number">40</span>,<span class="hljs-number">41</span>,<span class="hljs-number">42</span>,<span class="hljs-number">43</span>,<span class="hljs-number">44</span>,<span class="hljs-number">45</span>,<span class="hljs-number">46</span>,<span class="hljs-number">47</span>,<span class="hljs-number">48</span>,<span class="hljs-number">49</span>,<span class="hljs-number">50</span>];<br>Y3=[<span class="hljs-number">0.704347</span>,<span class="hljs-number">0.703088</span>,<span class="hljs-number">0.701667</span>,<span class="hljs-number">0.700265</span>,<span class="hljs-number">0.699096</span>,<span class="hljs-number">0.698142</span>,<span class="hljs-number">0.696643</span>,<span class="hljs-number">0.695319</span>,<span class="hljs-number">0.694171</span>,<span class="hljs-number">0.693057</span>,<span class="hljs-number">0.692145</span>,<span class="hljs-number">0.690986</span>,<span class="hljs-number">0.690039</span>,<span class="hljs-number">0.688821</span>,<span class="hljs-number">0.687838</span>,<span class="hljs-number">0.687095</span>,<span class="hljs-number">0.686086</span>,<span class="hljs-number">0.685103</span>,<span class="hljs-number">0.684324</span>,<span class="hljs-number">0.683746</span>,<span class="hljs-number">0.6828</span>,<span class="hljs-number">0.682019</span>,<span class="hljs-number">0.681155</span>,<span class="hljs-number">0.68061</span>,<span class="hljs-number">0.679976</span>,<span class="hljs-number">0.679395</span>,<span class="hljs-number">0.678685</span>,<span class="hljs-number">0.678363</span>,<span class="hljs-number">0.677703</span>,<span class="hljs-number">0.677327</span>,<span class="hljs-number">0.676845</span>,<span class="hljs-number">0.676334</span>,<span class="hljs-number">0.675988</span>,<span class="hljs-number">0.675582</span>,<span class="hljs-number">0.675275</span>,<span class="hljs-number">0.674974</span>,<span class="hljs-number">0.674759</span>,<span class="hljs-number">0.674505</span>,<span class="hljs-number">0.674276</span>,<span class="hljs-number">0.674189</span>,<span class="hljs-number">0.674038</span>,<span class="hljs-number">0.673882</span>,<span class="hljs-number">0.673811</span>,<span class="hljs-number">0.67368</span>,<span class="hljs-number">0.673731</span>,<span class="hljs-number">0.673658</span>,<span class="hljs-number">0.673847</span>,<span class="hljs-number">0.673751</span>,<span class="hljs-number">0.673917</span>,<span class="hljs-number">0.674002</span>,<span class="hljs-number">0.674056</span>];<br>p3=polyfit(X3,Y3,<span class="hljs-number">22</span>);<br>x3 = <span class="hljs-number">0</span>:<span class="hljs-number">0.01</span>:<span class="hljs-number">50</span>;<br>y3 = polyval(p3,x3);<br><span class="hljs-built_in">plot</span>(x3,y3);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>可视化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python 可视化工作经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大风起兮云风扬</title>
    <link href="/2022/03/04/%E5%A4%A7%E9%A3%8E%E8%B5%B7%E5%85%AE%E4%BA%91%E9%A3%9E%E6%89%AC/"/>
    <url>/2022/03/04/%E5%A4%A7%E9%A3%8E%E8%B5%B7%E5%85%AE%E4%BA%91%E9%A3%9E%E6%89%AC/</url>
    
    <content type="html"><![CDATA[<p>周五，没有早八，早上一骑车出门，就感觉风跟自行车过不去。早九的体育课，体育老师一脸笑呵呵，让我们迎着风在一片完全空旷的篮球场里“自由练习”。</p><p>刚投了几个篮（还不如说是偷了几个懒（っ╹◡╹)），眼见枯黄的落叶旋风而起，扶摇直上，嘎吱声伴随着风的呼声，瞬间从篮球场的一侧扫到了篮球场的另一侧，重重地击打在旁边的铁网上，黄沙就比较幸运，穿过铁网的缝隙继续它的旅程，风也许还满足随机性，让枯叶到处碰壁，旁边的自行车倒了一片……篮球肯定是没法打了，<span class="math inline">\(90\)</span> 分钟的体育课上了 <span class="math inline">\(20\)</span> 分钟就散了，骑车回来就看到“百团大战”后的残骸：</p><p><img src="https://pic.imgdb.cn/item/6222f7d25baa1a80ab34acd0.jpg" style="zoom:25%;" /></p><p>回到寝室，关着窗户都能听到风的嘶吼声。朋友圈里到处“挨吹”，还有人眼镜吹掉了……</p><p><img src="https://pic.imgdb.cn/item/6222f8a55baa1a80ab3557b3.jpg" style="zoom:35%;" /></p><p>下午搞了一些收尾工作，晚上听了 杨 <span class="math inline">\(\mbox{Sir}\)</span> 的高代选讲，讲得精彩！笔记先在笔记本上，后面有时间的话再挑选一些重点“信息化”。</p><h3 id="大风起兮云飞扬残叶卷兮百团降">大风起兮云飞扬，残叶卷兮百团降！</h3>]]></content>
    
    
    <categories>
      
      <category>随想</category>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活随想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python-Visualization-Process the Json file</title>
    <link href="/2022/03/03/Program/Python-Visualization-Json-File/"/>
    <url>/2022/03/03/Program/Python-Visualization-Json-File/</url>
    
    <content type="html"><![CDATA[<p>Python 编写工程项目时，对每份代码，编写流程基本都是 <span class="math display">\[\Large \textcolor{black}{调库}\normalsize \Longrightarrow \Large \textcolor{black}{全局变量}\normalsize \Longrightarrow \Large \textcolor{black}{装饰器}\normalsize \Longrightarrow \Large \textcolor{black}{子函数}\normalsize \Longrightarrow\Large \textcolor{black}{主函数}\normalsize\]</span> 只要两者之间具有一定独立性，最好空开两行方便 <span class="math inline">\(\mbox{Debug}\)</span> 。（这个真的是教训啊！！<strong>一定要全局</strong>，编写过程中使用复用性更高的代码，如使用 <span class="math inline">\(\mbox{len()}\)</span> 获取迭代次数，避免数据换了后手动调浪费时间）</p><h2 id="装饰器的使用">装饰器的使用</h2><p>装饰器是为了在输出结果时告知当前运行函数名称，运行时间，方便快速定位 <span class="math inline">\(\mbox{Bug}\)</span> 位置，一个经典装饰器的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">metric</span>(<span class="hljs-params">fn</span>):<br><span class="hljs-meta">    @functools.wraps(<span class="hljs-params">fn</span>)</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kw</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;start executing %s&#x27;</span> % (fn.__name__))<br>        start_time = time.time()<br>        result = fn(*args, **kw)<br>        end_time = time.time()<br>        t = <span class="hljs-number">1000</span> * (end_time - start_time)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s executed in %s ms&#x27;</span> % (fn.__name__, t))<br>        <span class="hljs-keyword">return</span> result<br>    <span class="hljs-keyword">return</span> wrapper<br></code></pre></td></tr></table></figure><p>该装饰器告知开始运行函数、结束运行函数以及运行时间，在每次 <code>def 'name_of_fuction'</code> 前一行加入 <code>@metric</code> 便可以实现装饰器功能</p><h2 id="获取目录下所有文件">获取目录下所有文件</h2><p>由于本次工作数据量庞大（成千上万个文件），从本地特定目录下读取该目录的所有文件，使用 <span class="math inline">\(os\)</span> 库中的 <span class="math inline">\(listdir\)</span> 函数获取目录下的文件名与目录拼接在一起，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_list</span>(<span class="hljs-params">target</span>):<br>    dirs = os.listdir(target)//获取目录下的文件名称并存为列表<br>    file_list = []//初始化空列表<br>    <span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> dirs://遍历列表中的每一个文件名称<br>         file_list.append(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;target&#125;</span>/<span class="hljs-subst">&#123;file&#125;</span>&quot;</span>)//加到原来文件目录后面<br>    <span class="hljs-keyword">return</span> file_list//得到一个具有该目录下所有文件位置的列表<br></code></pre></td></tr></table></figure><h2 id="异常处理">异常处理</h2><p>使用 <span class="math inline">\(\mbox{try}\)</span> 和 <span class="math inline">\(\mbox{except}\)</span> 语法，前者后面语句出现错误则跳至 <span class="math inline">\(\mbox{except}\)</span> 处，最好联合输出报错信息 <span class="math inline">\(\mbox{e}\)</span> 以及错误所在文件搭配：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(e)<br>    //<span class="hljs-built_in">print</span>(file)<br></code></pre></td></tr></table></figure><p>在处理文件时容易发现“前端”的规范化有问题，此时 <span class="math inline">\(\mbox{try-except}\)</span> 的作用体现得更加显著，多次套用异常处理语句即可</p><h2 id="计数器功能">计数器功能</h2><p>导入计数器所在库 <code>from collections import Counter</code>，单个计数器本质上就是单个字典，使用 <code>类名 = Counter()</code> 初始化，之后遇到什么就以字典的形式进行计数（<code>Counter()</code> 内部自动实现了遇到新 <code>key</code> 值计数为 <span class="math inline">\(1\)</span> ，遇到旧 <code>key</code> 值计数器加 <span class="math inline">\(1\)</span> ），由于存在多个、相互独立的列表，在实际运用中使用列表保存多个字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">listDics = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(dirLanguage))://从 xlsx 中读取的二维列表(第几列第几个词)<br>    tempDict = Counter()//代表具有计数器功能的空字典<br>    listDics.append(tempDict)//形成字典列表<br><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> tqdm(file_list)://遍历并打开所有文件<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file,<span class="hljs-string">&quot;r&quot;</span>,encoding = <span class="hljs-string">&quot;utf-8&quot;</span>,errors = <span class="hljs-string">&quot;ignore&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        getTitle = json.load(f)[<span class="hljs-string">&quot;title&quot;</span>]//使用 json.load(f) 载入文件<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(dirLanguage))://对二维列表的每一列<br>            <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> dirLanguage[i]://对应计数每一列<br>                listDict[i][word] += <span class="hljs-number">1</span>//使用字典的方式计数<br><br></code></pre></td></tr></table></figure><h2 id="mboxjson-文件收放自如"><span class="math inline">\(\mbox{json}\)</span> 文件收放自如</h2><p>从上个实例代码中可以看到，使用 <code>json.load(f)</code> 即可以实现读取对应 <span class="math inline">\(\mbox{json}\)</span> 文件的内容，即为 <span class="math inline">\(\mbox{json}\)</span> 文件的读取</p><p>与之相对的为 <span class="math inline">\(\mbox{json}\)</span> 文件的写入，使用 <code>json.dump(写入名称,打开的文件(如f),ensure_ascii = False, indent = 2)</code>，注意打开文件时类型为 <span class="math inline">\(\mbox{w\small+}\)</span> ，为覆盖类型，例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./result.json&quot;</span>,<span class="hljs-string">&quot;w+&quot;</span>,encoding = <span class="hljs-string">&quot;utf-8&quot;</span>,errors = <span class="hljs-string">&quot;ignore&quot;</span>) <span class="hljs-keyword">as</span> f:<br>json.dump(title_content,f,ensure_ascii = <span class="hljs-literal">False</span>, indent = <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><h2 id="可视化工作中的可视化-mboxtqdm">可视化工作中的可视化（ <span class="math inline">\(\mbox{tqdm}\)</span> ）</h2><p>导入进度条库 <code>from tqdm import tqdm</code> （in Arabic means <em>progress</em>, also in Spanish <em>te quiero demasiado</em> means <em>I love you so much. </em>），在迭代器处加入 <span class="math inline">\(\mbox{tqdm}\)</span> 就可以清晰地看到迭代所处位置，再也不用一直盯着闪烁的光标无脑等待了~~</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> tqdm(file_list):<br></code></pre></td></tr></table></figure><p>在 <span class="math inline">\(\mbox{Python}\)</span> 交互式系统中可以达到这样效果，输入时保证可以需要输入就不会自动运行：</p><p><img src="https://pic.imgdb.cn/item/6224c13c5baa1a80ab7af253.jpg" /></p><h2 id="在大字符串中查找小字符串出现次数">在大字符串中查找小字符串出现次数</h2><p>使用字符串变量内置函数 <span class="math inline">\(str.\mbox{count}\)</span>，直接返回次数。造轮子的事情尽量少做：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span>.count(find_str)<br></code></pre></td></tr></table></figure><h2 id="调试工程能力的体现">调试（工程能力的体现）</h2><p>在编写代码中，尽管“前端”有可能背锅，但大部分的错误还是因为自己总像个小孩子一样“犯傻”，不过 <span class="math inline">\(\mbox{Python}\)</span> 毕竟还是“大人”使用的工具，要学会定位 <span class="math inline">\(\mbox{Bug}\)</span> 的能力：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> IPython <span class="hljs-keyword">import</span> embed<br></code></pre></td></tr></table></figure><p><span class="math inline">\(\mbox{embed}\)</span> 函数有点像 <span class="math inline">\(\mathbf{C}\large艹\)</span> 中的断点调试，但是更好的一点是，在出现错误的地方打上 <span class="math inline">\(\mbox{embed}\)</span> 后程序会在指定的地方停止，同时保留了当前所有的存储变量，向外提供执行任意输入代码的接口，在 <span class="math inline">\(\mbox{embed}\)</span> 之后，<span class="math inline">\(\mbox{print}\)</span> 出当前的存储变量，或者手动输入（也可以多行复制）运行接下来的代码快速找到相应问题。虽然最后来说很多问题都比较弱智，但是就是这些弱智问题的 <span class="math inline">\(\mbox{Debug}\)</span> 很大程度影响了代码编写、维护以及（满足甲方需求）成功运行的总开发时长。</p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>可视化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python 可视化工作经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Calculus_A2_notes_Chapter_three（WXF）</title>
    <link href="/2022/03/02/Math/Calculus/Calculus%20A2%20notes%EF%BC%88Chapter%20three%EF%BC%89/"/>
    <url>/2022/03/02/Math/Calculus/Calculus%20A2%20notes%EF%BC%88Chapter%20three%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="微积分第3讲笔记多元函数的导数与微分">微积分第3讲笔记（多元函数的导数与微分）</h1><p>对于一元函数的导数定义：<span class="math inline">\(f&#39;(x_0)=\lim\limits_{x\to x_0}\dfrac{f(x)-f(x_0)}{x-x_0}\)</span>，对于多元时 <span class="math inline">\(\mathbf{x}-\mathbf{x_0}\)</span> 是向量，无法成为分母。</p><p>解决方法 <span class="math inline">\(1\)</span>：沿向量求导 <span class="math inline">\(\partial _{\mathbf{v}}f(\mathbf{x}^*)=\lim\limits_{t\to 0}\dfrac{f(\mathbf{x}_0+t\mathbf{v})-f(\mathbf{x}_0)}{t}\)</span>，设 <span class="math inline">\(E\subseteq \mathbb{R}^m\)</span>，若 <span class="math inline">\(\exists\ \delta &gt;0,s.t.\forall \ \mathbf{x}\in \mathbb{R}^m,\|\mathbf{x}-\mathbf{x_0}\|&lt;\delta\Longrightarrow \mathbf{x}\in E\)</span>，称 <span class="math inline">\(\mathbf{x}_0\)</span> 为内点</p><p>对经过 $x^* $ 处斜率为 <span class="math inline">\(\vec{v}\)</span> 的任意曲线均成立 <span class="math inline">\(\partial_{\vec{v}} f(x^*)=Const,\ \mbox{for any curve }\)</span></p><p><strong>方向导数</strong>：（将 <span class="math inline">\(\vec{v}\)</span> 单位化，<strong>将导数定义在像空间</strong>） <span class="math inline">\(f\)</span> 在 <span class="math inline">\(\mathbf{x}^*\)</span> 处沿着单位向量 <span class="math inline">\(\mathbf{v}\)</span> 所在方向的方向导数为 <span class="math display">\[\lim _{t \rightarrow 0^{+}} \frac{f\left(\mathbf{x}^{*}+t \mathbf{v}\right)-f\left(\mathbf{x}^{*}\right)}{t}=\lim _{\mathbf{x} \rightarrow \mathbf{x}^{*}} \frac{f(\mathbf{x})-f\left(\mathbf{x}^{*}\right)}{\left\|\mathbf{x}-\mathbf{x}^{*}\right\|}\]</span> 解决方法 <span class="math inline">\(1&#39;\)</span>：偏导数，<span class="math inline">\(\dfrac{\partial }{\partial x^{k}}f(x^{1},x^2,\cdots,x^{m})\)</span>，<span class="math inline">\(x=x^1\mathbf{v}_1+\cdots x^m\mathbf{v}_m\)</span>，则记 <span class="math display">\[\partial_{k} f\left(\mathbf{x}^{*}\right)=\frac{\partial f}{\partial x^{k}}\left(\mathbf{x}^{*}\right)=\partial_{\mathbf{v}_{k}} f\left(\mathbf{x}^{*}\right)=\lim _{t \rightarrow 0} \frac{f\left(\mathbf{x}^{*}+t \mathbf{v}_{k}\right)-f\left(\mathbf{x}^{*}\right)}{t}\]</span> 为 $f $ 在 <span class="math inline">\(x^*\)</span> 处对坐标架 <span class="math inline">\(x^{k}\)</span> 的偏导数</p><p>偏导数只能代表函数极少一部分性质（构造十字架“高高在上”，其余函数值在下方，该十字架在 <span class="math inline">\(x\)</span> 和 <span class="math inline">\(y\)</span> 方向上偏导数都是 <span class="math inline">\(0\)</span> ，但是该十字架在交叉处不可导）</p><p>有一般情况下，<strong>坐标系是局部的、非线性的坐标系</strong></p><p>解决方法 <span class="math inline">\(2\)</span>：多元函数的原像空间是多维空间，多维空间并不是一些一维空间的简单汇集，其包含了无穷多个一维空间，且是无穷多个一维空间的有机结合</p><p>引入<strong>映射的可微性与微分</strong>（<strong>将导数定义为连接原空间和像空间的法则</strong>） ：设 <span class="math inline">\(E \subseteq \mathbb{R}^{m}, \mathrm{x}^{*}\)</span> 是 <span class="math inline">\(E\)</span> 的一个内点。 称 <span class="math inline">\(f: E \rightarrow \mathbb{R}^{p}\)</span> 在 <span class="math inline">\(\mathrm{x}^{*}\)</span> 处可微，如果存在线性映射 <span class="math inline">\(L: \mathbb{R}^{m} \rightarrow \mathbb{R}^{p}\)</span> (称为 <span class="math inline">\(f: E \rightarrow \mathbb{R}^{p}\)</span> 在 <span class="math inline">\(\mathbf{x}^{*}\)</span> 处的导数或微分, 记为 <span class="math inline">\(\mathrm{D} f\left(\mathbf{x}^{*}\right)\)</span> ）使得 <span class="math display">\[f\left(\mathbf{x}^{*}+\mathbf{v}\right)=f\left(\mathbf{x}^{*}\right)+L(\mathbf{v})+o(\|\mathbf{v}\|), \quad \mathbf{v} \rightarrow \mathbf{0} .\]</span> <span class="math inline">\(\left(p=1\right.\)</span> 时更常称为微分, 记为 <span class="math inline">\(\left.\mathrm{d} f\left(\mathbf{x}^{*}\right)\right)\)</span></p><p><strong>例</strong>：证明 <span class="math inline">\(\mbox{inv}:\mathcal{G L}(m) \rightarrow \mathcal{G L}(m), \quad \operatorname{inv}(A)=A^{-1}\)</span> 是可微映射，并求其微分。</p><p>由 <span class="math inline">\(\mbox{inv}(I-B)=I+C=I+B+CB\)</span>，其中 <span class="math inline">\(\|CB\|\leq \dfrac{\|B\|^2}{1-\|B\|}\to o(B)\)</span></p><p>则 <span class="math inline">\(\mbox{inv}(A_0+B)=(A_0(I+A_0^{-1}B))^{-1}=(I+A_0^{-1}B)^{-1}A_0^{-1}=(I-A_0^{-1}B+o(B))A_0^{-1}\)</span></p><p>从而其可微， <span class="math inline">\(\mbox{Dinv}(A_0)(B)=-A_0^{-1}BA_0^{-1}\)</span></p><p><span class="math inline">\(dx,dy,dz\)</span> 本质上是坐标线性函数，对于空间中任意一组基，<span class="math inline">\(\mathbf{v}_{1},\cdots ,\mathbf{v}_{m}\)</span>，取 <span class="math inline">\(\mathbf{v}^{*1},\cdots ,\mathbf{v}^{*m}\)</span> 为 <span class="math inline">\(\mathbf{v}_{1},\cdots ,\mathbf{v}_{m}\)</span> 的对偶基 <span class="math inline">\(\mathbf{v}^{*k}:\boldsymbol R^{m}\to \boldsymbol R\)</span> 为线性函数</p><p>可以推出 <span class="math inline">\(df(\mathbf{x}^*)=(\partial _1f\quad \cdots\quad \partial _mf)\begin{pmatrix}dx^1\\\vdots\\dx^{m}\end{pmatrix}\)</span></p><p>对于 <span class="math inline">\(df=\dfrac{\partial f}{\partial x}dx+\dfrac{\partial f}{\partial y}dy+\dfrac{\partial f}{\partial z}dz\)</span>，本质上是 <span class="math inline">\(df\)</span> 这个坐标函数可以写成 <span class="math inline">\(dx,dy,dz\)</span> 这三个坐标函数的线性组合</p><p>对行列式函数微分有 <span class="math inline">\(D \det(A)(B) = \tr(A^*B)\)</span>， <span class="math inline">\(\det(A+B)=\det(A)+\tr(A^*B),B\to 0\)</span></p><p>则定义 <span class="math inline">\(e\)</span> 的矩阵幂 <span class="math inline">\(e^{A}:=\displaystyle \sum_{n=0}^{\infty}\dfrac{A^n}{n!}\)</span>，考虑行列式函数 <span class="math inline">\(f(t)=\det (e^{tA})\)</span> <span class="math display">\[\dfrac{df(t)}{dt}=\lim\limits_{\Delta t \to 0}\dfrac{\det(e^{(t+\Delta t)A})-\det(e^{tA})}{\Delta t}=\lim\limits_{\Delta t \to 0}\dfrac{\det(e^{tA})\cdot (\det(e^{\Delta tA})-1)}{\Delta t}\]</span> 而 <span class="math inline">\(\det(e^{\Delta t A})\approx \det(I+\Delta tA)=1+\tr(A)\Delta t,\Delta t\to 0\)</span>，即 <span class="math inline">\(\det&#39;(e^{\Delta tA})=\tr(A)\)</span></p><p>则 <span class="math inline">\(\displaystyle \dfrac{df(t)}{dt}=\tr(A)\cdot \det(e^{tA})=\tr(A)f(t)\)</span>，该微分方程解为 <span class="math inline">\(f(t)=\det(e^{tA})=e^{t\tr(A)}\)</span></p><p>对极坐标 <span class="math inline">\(\begin{pmatrix}dx\\dy\end{pmatrix}=\hat{\rho}\begin{pmatrix}\cos \theta\\\sin \theta\end{pmatrix}+\rho \hat{\theta}\begin{pmatrix}-\sin \theta\\\cos \theta\end{pmatrix}\)</span>，代表坐标架的变换，这两个方向是正交的，但是长度不是单位的，有 <span class="math display">\[\mathbf{e}_{r}=\left[\begin{array}{c}\cos \theta \\\sin \theta\end{array}\right]\quad \mathbf{e}_{\theta}=\left[\begin{array}{c}-r \sin \theta \\r \cos \theta\end{array}\right]\]</span> <img src="../../../../../../AppData/Roaming/Typora/typora-user-images/image-20220307105416871.png" alt="image-20220307105416871" style="zoom:25%;" /></p><p>微分的形式不变性：对任意坐标系，<span class="math inline">\(du=\displaystyle \sum_{j=1}^{m}\partial _{x^{j}}udx^j=\displaystyle \sum_{j=1}^{m}\partial _{y^{j}}udy^j\)</span></p><p>梯度的定义：先对可以几何直观现实的情况：设<span class="math inline">\(L:\mathbb{R}^{m}\to R\)</span> 为线性映射，若 <span class="math inline">\(\forall \ \vec{v}\in \mathbb{R}^m\)</span>，都有 <span class="math inline">\(L(\vec{v})=\langle\vec{v}, \nabla L\rangle\)</span></p><p><img src="https://pic.imgdb.cn/item/622582ca5baa1a80abd6b01f.jpg" style="zoom:30%;" /></p><p>如图，由于已经规定 <span class="math inline">\(L\)</span> 是线性映射，其图像必然是 <span class="math inline">\(m+1\)</span> 维空间中的一个 <span class="math inline">\(m\)</span> 维“平面”。现取此“平面”与自变量“平面”（同样是 <span class="math inline">\(m\)</span> 维空间）的 <span class="math inline">\(m-1\)</span> “交线”，此“交线”也自然是“直线”。由于此 <span class="math inline">\(m-1\)</span> 维”交线“在 <span class="math inline">\(m\)</span> 维自变量空间中，在该空间中必然只有唯一一个方向与其垂直。<span class="math inline">\(\nabla L\)</span> 就在这个方向。由几何学可以知道，图像上任意一点的高度，等于其在自变量空间的投影向量与 <span class="math inline">\(\nabla L\)</span> 的内积与 <span class="math inline">\(\nabla L\)</span> 点对应的高度的乘积。</p><p><strong>可微函数的梯度</strong>：设 <span class="math inline">\(f\)</span> 在 <span class="math inline">\(\mathbf{x}^{*} \in E\)</span> 处可微, 称 <span class="math inline">\(\mathrm{d} f\left(\mathbf{x}^{*}\right)\)</span> 的梯度为 <span class="math inline">\(f\)</span> 在 <span class="math inline">\(\mathbf{x}^{*} \in E\)</span> 处的梯度, 记为 <span class="math inline">\(\nabla f\left(\mathbf{x}^{*}\right)\)</span>, 即对任意向量 <span class="math inline">\(\mathbf{v}\)</span>, <span class="math display">\[\partial_{\mathbf{v}} f\left(\mathbf{x}^{*}\right)=\left\langle\mathbf{v}, \nabla f\left(\mathbf{x}^{*}\right)\right\rangle\]</span> 对以 <span class="math inline">\(\mathbf{v}_{1}, \ldots, \mathbf{v}_{m}\)</span> 为基的内积空间，要想求 <span class="math inline">\(\nabla f\left(\mathbf{x}^{*}\right)\)</span> 在这组基底下的坐标。设</p><p><span class="math display">\[\nabla f\left(\mathbf{x}^{*}\right)=c^{1} \mathbf{v}_{1}+\cdots+c^{m} \mathbf{v}_{m}, \quad \mathbf{v}=\xi^{1} \mathbf{v}_{1}+\cdots+\xi^{m} \mathbf{v}_{m}\]</span> 这里 <span class="math inline">\(\mathbf v\)</span> 是任意向量。则有 <span class="math inline">\(\left\langle\mathbf{v}, \nabla f\left(\mathbf{x}^{*}\right)\right\rangle=\sum_{1 \leq i, j \leq m} \xi^{i}\left\langle\mathbf{v}_{i}, \mathbf{v}_{j}\right\rangle c^{j}=\left(\xi^{1}, \ldots, \xi^{m}\right)\left(\left\langle\mathbf{v}_{i}, \mathbf{v}_{j}\right\rangle\right)_{m \times m}\left(\begin{array}{c}c^{1} \\ \vdots \\ c^{m}\end{array}\right)\)</span> <span class="math inline">\(\mathrm{d} f\left(\mathbf{x}^{*}\right) \mathbf{v}=\partial_{1} f\left(\mathbf{x}^{*}\right) \xi^{1}+\cdots+\partial_{m} f\left(\mathbf{x}^{*}\right) \xi^{m}=\left(\xi^{1}, \ldots, \xi^{m}\right)\left(\begin{array}{c}\partial_{1} f\left(\mathbf{x}^{*}\right) \\ \vdots \\ \partial_{m} f\left(\mathbf{x}^{*}\right)\end{array}\right)\)</span></p><p>由梯度定义知以上两式应对任意 <span class="math inline">\(\xi^{1}, \ldots, \xi^{m}\)</span> 恒等, 所以 <span class="math display">\[\left(\left\langle\mathbf{v}_{i}, \mathbf{v}_{j}\right\rangle\right)_{m \times m}\left(\begin{array}{c}c^{1} \\\vdots \\c^{m}\end{array}\right)=\left(\begin{array}{c}\partial_{1} f\left(\mathbf{x}^{*}\right) \\\vdots \\\partial_{m} f\left(\mathbf{x}^{*}\right)\end{array}\right)\]</span> 因此梯度的表达式： <span class="math display">\[\begin{aligned}\nabla f\left(\mathbf{x}^{*}\right) &amp;=\left(\mathbf{v}_{1}, \ldots, \mathbf{v}_{m}\right)\left(\begin{array}{c}c^{1} \\\vdots \\c^{m}\end{array}\right)=\left(\mathbf{v}_{1}, \ldots, \mathbf{v}_{m}\right)\left(\left\langle\mathbf{v}_{i}, \mathbf{v}_{j}\right\rangle\right)_{m \times m}^{-1}\left(\begin{array}{c}\partial_{1} f\left(\mathbf{x}^{*}\right) \\\vdots \\\partial_{m} f\left(\mathbf{x}^{*}\right)\end{array}\right) \\&amp;=\sum_{i, j} g^{i j} \partial_{j} f \mathbf{v}_{i} \end{aligned}\]</span> 其中 <span class="math inline">\(\left(g^{i j}\right)_{m \times m}=\left(\left\langle\mathbf{v}_{i}, \mathbf{v}_{j}\right\rangle\right)_{m \times m}^{-1}\)</span> ，为度量矩阵的逆。对于一般的 <span class="math inline">\(x,y,z\)</span> 坐标系，为单位矩阵。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elementary number theory homework 2</title>
    <link href="/2022/03/01/Math/Elementary%20number%20theory/Elementary%20number%20theory%20homework%202/"/>
    <url>/2022/03/01/Math/Elementary%20number%20theory/Elementary%20number%20theory%20homework%202/</url>
    
    <content type="html"><![CDATA[<h1 id="largetextcolorblue初等数论第二次作业-_textcolorblue2022.3.1"><span class="math inline">\(\large\textcolor{blue}{初等数论第二次作业}\ \ \ \ \ \ _\textcolor{blue}{2022.3.1}\)</span></h1><p>（当前没过截止日期，只将题目上传）</p><h2 id="习题1.2">习题1.2</h2><h4 id="设-abcin-zaneq-0则-amid-bc-当且仅当-dfracaabmid-c">4. 设 <span class="math inline">\(a,b,c\in Z,a\neq 0\)</span>。则 <span class="math inline">\(a\mid bc\)</span> 当且仅当 <span class="math inline">\(\dfrac{a}{(a,b)}\mid c\)</span></h4><h4 id="m-和-n-是互素的正整数证明">5. <span class="math inline">\(m\)</span> 和 <span class="math inline">\(n\)</span> 是互素的正整数，证明：</h4><h4 id="对每个整数-aamnaman"><span class="math inline">\(\ \ \ (1)\)</span> 对每个整数 <span class="math inline">\(a\)</span>，<span class="math inline">\((a,mn)=(a,m)(a,n)\)</span>；</h4><h4 id="mn-的每个正因子-d-均可唯一地表示成-dd_1d_2其中-d_1-和-d_2-分别为"><span class="math inline">\(\ \ \ (2)\)</span> <span class="math inline">\(mn\)</span> 的每个正因子 <span class="math inline">\(d\)</span> 均可唯一地表示成 <span class="math inline">\(d=d_1d_2\)</span>，其中 <span class="math inline">\(d_1\)</span> 和 <span class="math inline">\(d_2\)</span> 分别为</h4><h4 id="m-和-n-的正因子"><span class="math inline">\(m\)</span> 和 <span class="math inline">\(n\)</span> 的正因子。</h4><h4 id="设-n-为正整数ab-是不全为零的整数证明">6. 设 <span class="math inline">\(n\)</span> 为正整数，<span class="math inline">\(a,b\)</span> 是不全为零的整数，证明：</h4><h4 id="anbnabn"><span class="math inline">\(\ \ \ (1)\)</span> <span class="math inline">\((a^n,b^n)=(a,b)^n\)</span>；</h4><h4 id="若-a-和-b-是互素的正整数abcncin-z则-a-和-b-都是正整数的"><span class="math inline">\(\ \ \ (2)\)</span> 若 <span class="math inline">\(a\)</span> 和 <span class="math inline">\(b\)</span> 是互素的正整数，<span class="math inline">\(ab=c^n,c\in Z\)</span>，则 <span class="math inline">\(a\)</span> 和 <span class="math inline">\(b\)</span> 都是正整数的</h4><h4 id="n-次方幂"><span class="math inline">\(n\)</span> 次方幂。</h4><h4 id="求-963x657y963657-的全部整数解">9. 求 <span class="math inline">\(963x+657y=(963,657)\)</span> 的全部整数解。</h4><h4 id="求下列方程的全部整数解">10. 求下列方程的全部整数解：</h4><h4 id="x20y-15z23"><span class="math inline">\(\ \ \ (1)\)</span> <span class="math inline">\(6x+20y-15z=23\)</span>；</h4><h4 id="x13y7z2"><span class="math inline">\(\ \ \ (2)\)</span> <span class="math inline">\(25x+13y+7z=2\)</span>。</h4><h4 id="设-fxxna_1xn-1cdots-a_n-1xa_n-为首项系数为-1-的整系">12. 设 <span class="math inline">\(f(x)=x^n+a_1x^{n-1}+\cdots +a_{n-1}x+a_n\)</span> 为首项系数为 <span class="math inline">\(1\)</span> 的整系</h4><h4 id="数多项式则-fx-的每个有理根必为整数">数多项式，则 <span class="math inline">\(f(x)\)</span> 的每个有理根必为整数。</h4><h4 id="设-m-和-n-为正整数则在-n2ncdotsmn-这-m-个数当中恰有-mn">13. 设 <span class="math inline">\(m\)</span> 和 <span class="math inline">\(n\)</span> 为正整数，则在 <span class="math inline">\(n,2n,\cdots,mn\)</span> 这 <span class="math inline">\(m\)</span> 个数当中恰有 <span class="math inline">\((m,n)\)</span></h4><h4 id="个是-m-的倍数">个是 <span class="math inline">\(m\)</span> 的倍数。</h4><h4 id="设-m-和-n-是互素的非零整数证明对整数-a若-mmid-anmid-a则-mnmid-a">16. 设 <span class="math inline">\(m\)</span> 和 <span class="math inline">\(n\)</span> 是互素的非零整数。证明对整数 <span class="math inline">\(a\)</span>，若 <span class="math inline">\(m\mid a,n\mid a\)</span>，则 <span class="math inline">\(mn\mid a\)</span></h4><h2 id="习题1.3">习题1.3</h2><h4 id="设-abc-为正整数证明">3. 设 <span class="math inline">\(a,b,c\)</span> 为正整数，证明</h4><h4 id="abcabac"><span class="math inline">\(\ \ \ (1)\)</span> <span class="math inline">\((a,[b,c])=[(a,b),(a,c)]\)</span>；</h4><h4 id="abcabac-1"><span class="math inline">\(\ \ \ (2)\)</span> <span class="math inline">\([a,(b,c)]=([a,b],[a,c])\)</span>。</h4><h4 id="不存在整数-mgeq-2-使得-m2mid-n-的正整数-n-为无平方因子证明">4. 不存在整数 <span class="math inline">\(m\geq 2\)</span> ，使得 <span class="math inline">\(m^2\mid n\)</span> 的正整数 <span class="math inline">\(n\)</span> 为无平方因子，证明：</h4><h4 id="正整数-n-是无平方因子当且仅当-n1-或者是不素因子的乘积"><span class="math inline">\(\ \ \ (1)\)</span> 正整数 <span class="math inline">\(n\)</span> 是无平方因子当且仅当 <span class="math inline">\(n=1\)</span> 或者是不素因子的乘积；</h4><h4 id="每个正整数-n-可以唯一地表示成-nm2cdot-n其中-m2-为平方数而-n"><span class="math inline">\(\ \ \ (2)\)</span> 每个正整数 <span class="math inline">\(n\)</span> 可以唯一地表示成 <span class="math inline">\(n=m^2\cdot n&#39;\)</span>，其中 <span class="math inline">\(m^2\)</span> 为平方数，而 <span class="math inline">\(n&#39;\)</span></h4><h4 id="为无平方因子整数">为无平方因子整数。</h4>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>初等数论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>初等数论作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Calculus note for Chapter two</title>
    <link href="/2022/02/28/Math/Calculus/Calculus%20A2%20notes%20%EF%BC%88Chapter%20two%EF%BC%89/"/>
    <url>/2022/02/28/Math/Calculus/Calculus%20A2%20notes%20%EF%BC%88Chapter%20two%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="微积分笔记第二讲多元函数的极限">微积分笔记第二讲（多元函数的极限）</h1><p><strong>聚点</strong>：设 <span class="math inline">\(E\subseteq\mathbb{R}^{m}\)</span>，若 <span class="math inline">\(\forall \ \delta &gt; 0 ,\exists \ \mathbf{x}\in E,s.t.\|\mathbf{x}-\mathbf{x}^*\|&lt;\delta\)</span>，称 <span class="math inline">\(\mathbf{x}^*\)</span> 为 <span class="math inline">\(E\)</span> 的一个聚点。</p><p><strong>多元函数极限</strong>：设 <span class="math inline">\(\mathbf{x}^*\)</span> 为 <span class="math inline">\(E\)</span> 的一个聚点，对 <span class="math inline">\(A\in \mathbb{R}^p\)</span> 和映射 <span class="math inline">\(f:E\to \mathbb{R}^p\)</span>，有 <span class="math inline">\(\lim\limits_{\mathbf{x}\to \mathbf{x}^*}f(\mathbf{x})=A\)</span>，有 <span class="math display">\[\forall \varepsilon&gt;0, \exists \delta_{\varepsilon}&gt;0, s.t. \forall \mathbf{x} \in E, \textcolor{red}{0&lt;}\left\|\mathbf{x}-\mathbf{x}^{*}\right\|&lt;\delta_{\varepsilon} \Rightarrow\|f(\mathbf{x})-A\|&lt;\varepsilon \text {. }\]</span> <span class="math inline">\(\mathbf{x}^*\)</span> 甚至可以不再定义域内，依靠其他 <span class="math inline">\(\mathbf{x}\)</span> 逼近</p><p><strong>复合极限</strong>：（极限复杂度大于连续）<span class="math inline">\(\mathbf{a}\)</span> 和 <span class="math inline">\(\mathbf{b}\)</span> 分别为 <span class="math inline">\(E\)</span> 和 <span class="math inline">\(F\)</span> 的聚点，有 <span class="math inline">\(\lim\limits_{\mathbf{x}\to \mathbf{a}}=\mathbf{b}\)</span>，只有两种情况有 <span class="math inline">\(\lim\limits_{\mathbf{y}\to \mathbf{b}}g(f(\mathbf{x}))=A\)</span> <span class="math display">\[\begin{cases}g\ 在\ \mathbf{b} \ 连续, A=g(\mathbf{b})\\\lim\limits_{y\to \mathbf{b}}g(y)=A,且\ \textcolor{red}{f(\mathbf{x})\neq \mathbf{b},当\ \mathbf{x}\to \mathbf{a}}\end{cases}\]</span> 也就是要保证 <span class="math inline">\(g\)</span> 在 <span class="math inline">\(\mathbf{b}\)</span> 处不能“乱跳”</p><p><strong>例</strong>：求极限 <span class="math inline">\(\lim\limits_{(x,y)\to (0,0)}\dfrac{\ln(1+x^2+y^2)}{x^2+y^2}\)</span>，就只需要考虑 <span class="math inline">\(g(\rho)=\dfrac{\ln(1+\rho)}{\rho}\)</span>，有 <span class="math inline">\(\lim\limits_{\rho\to 0}g(\rho)=1\)</span>，且有 <span class="math inline">\(\rho=f(x,y)=x^2+y^2\neq0\)</span>，从而极限为 <span class="math inline">\(1\)</span></p><p><strong>例</strong>：求极限 <span class="math inline">\(\lim\limits_{(x,y)\to (1,0)}(x+y)^{\frac{x+y+1}{x+y-1}}\)</span>，有底数大于等于零以及分母不为 <span class="math inline">\(0\)</span>，考虑 <span class="math inline">\(g(z)=(1+z)^{\frac{z+2}{z}}\)</span>，且 <span class="math inline">\(f(z)=x+y-1\neq0\)</span>，<span class="math inline">\(\lim\limits_{z\to 0}g(z)=e^2\)</span>，从而极限为 <span class="math inline">\(e^2\)</span></p><p><strong>例</strong>：求极限 <span class="math inline">\(\lim\limits_{(x,y)\to (0,0)}x^y\)</span> ，令 <span class="math inline">\(x^{y}=e^{y\ln x}\)</span> ，该函数在定义域内处处连续，若构造一种 <span class="math inline">\(y=\dfrac{-1}{|\ln x|^{\alpha}}\)</span>，代入有 <span class="math display">\[\lim _{x \rightarrow 0^{+}} x^{\frac{-1}{|\ln x|^{\alpha}}}= \begin{cases}\mathrm{e}, &amp; \alpha=1 \\ +\infty, &amp; 0&lt;\alpha&lt;1 ; \\ 1, &amp; \alpha&gt;1\end{cases}\]</span> <strong>例</strong>：讨论极限 <span class="math inline">\(\lim\limits_{(x,y)\to (0,0)}\dfrac{2xy}{x^2+y^2}\)</span>，沿着曲线 <span class="math inline">\(y=Cx^{\alpha}(\alpha&gt;0,C\neq 0)\)</span></p><p>代入有 <span class="math display">\[\lim _{\left(x, C x^{\alpha}\right) \rightarrow(0,0)} \frac{2 x C x^{\alpha}}{x^{2}+C^{2} x^{2 \alpha}}= \begin{cases}0, &amp; \alpha&gt;0, \alpha \neq 1 \\ \dfrac{2 C}{1+C^{2}}, &amp; \alpha=1\end{cases}\]</span> 从而极限不存在，但其<strong>累次极限</strong>存在，且<strong>两种累次极限相等</strong> <span class="math display">\[\lim\limits_{x\to 0}\lim\limits_{y\to 0}\dfrac{2xy}{x+y^2}=\lim\limits_{y\to 0}\lim\limits_{x\to 0}\dfrac{2xy}{x+y^2}=0\]</span> <strong>例</strong>：讨论极限 <span class="math inline">\(\lim\limits_{(x,y)\to (0,0)}\dfrac{x^2+y^2}{x+y}\)</span>，沿着曲线 <span class="math inline">\(y=-x+Cx^{\alpha}(\alpha&gt;0,C\neq 0)\)</span>，这样将分母成为一个单独的项，有 <span class="math display">\[\lim _{\left(x,-x+C x^{\alpha}\right) \rightarrow(0,0)} \frac{x^{2}+\left(-x+C x^{\alpha}\right)^{2}}{C x^{\alpha}}= \begin{cases}\infty, &amp; \alpha&gt;2 \\ \frac{2}{C}, &amp; \alpha=2 \\ 0, &amp; 0&lt;\alpha&lt;2\end{cases}\]</span> 按一般思想应该是 <span class="math inline">\(0\)</span>，但是 <span class="math inline">\((x,y)\)</span> 的趋势可以任意构造，从而<strong>重极限</strong>不能直接借助一元微积分的经验，若分成多次过程，则称为<strong>累次极限</strong></p><p><strong>例</strong>：求极限 <span class="math inline">\(\lim\limits_{x\to 0,y\to \infty}(1+x)^{\frac{y+1}{xy}}\)</span>，代换 <span class="math inline">\(u=\dfrac{1}{y}\)</span>，有 <span class="math inline">\(x\to 0,y\to \infty\)</span>，当且仅当 <span class="math inline">\(x\to 0,u\to 0\)</span>，从而 <span class="math display">\[\lim\limits_{x\to 0,y\to \infty}(1+x)^{\dfrac{y+1}{xy}}=\lim\limits_{x,u\to 0}e^{\dfrac{\ln (1+x)}{x}\cdot \dfrac{1+u}{1}}=e^{1}=e\]</span> <strong>例</strong>：讨论 <span class="math inline">\(f(x,y)=\dfrac{x^2-y^2}{x^2+y^2}\)</span> 极限，其重极限不存在 ，这是由于 <span class="math inline">\(\lim\limits_{(x,kx)\to (0,0)}\dfrac{x^2-y^2}{x^2+y^2}=\dfrac{1-k^2}{1+k^2}\)</span> ，而两种累次极限不同 <span class="math inline">\(\lim\limits_{x\to 0}\lim\limits_{y\to 0}\dfrac{x^2-y^2}{x^2+y^2}=1,\lim\limits_{y\to 0}\lim\limits_{x\to 0}\dfrac{x^2-y^2}{x^2+y^2}=-1\)</span></p><p><strong>例</strong>：设 <span class="math inline">\(E=\{(x,y)\in \mathbb{R}^2 \mid \dfrac{|x|}{2}\leq |y|\leq 2|x|\},f:E\to R,f(x,y)=1\)</span>，二重极限存在 <span class="math inline">\(\lim\limits_{(x,y)\to (0,0)}f(x,y)=1\)</span>，但是 <span class="math inline">\(\lim\limits_{x\to 0}\lim\limits_{y\to 0}f(x,y)\)</span> 和 <span class="math inline">\(\lim\limits_{y\to 0}\lim\limits_{x\to 0}f(x,y)\)</span> 都不存在（无法定义）</p><p>更一般地，<strong>能交换顺序的极限都需要满足一定条件</strong>（累次极限、积分和求导）</p><p><strong>定理</strong>：如果 <span class="math inline">\(\lim\limits _{(x, y) \rightarrow(a, b)} f(x, y)\)</span> 和累次极限 <span class="math inline">\(\lim\limits _{y \rightarrow b} \lim\limits _{x \rightarrow a} f(x, y)\)</span> 都存在, 则二者的值相等。</p><p><strong>大 <span class="math inline">\(O\)</span> 和小 <span class="math inline">\(o\)</span> </strong>：（大 <span class="math inline">\(O\)</span> 是用一个常数“管制”，小 <span class="math inline">\(o\)</span> 可以用任意小的 <span class="math inline">\(\epsilon\)</span> “管制”）</p><p><strong>当 <span class="math inline">\(\mathbf{x}\to \mathbf{a}\)</span> 时，<span class="math inline">\(f=O(g)\)</span></strong>：存在 <span class="math inline">\(a\)</span> 的去心领域 <span class="math inline">\(U\)</span> 和常数 <span class="math inline">\(M&gt;0\)</span>，使得 <span class="math inline">\(\mathbf{x}\in U\)</span>，都有 <span class="math inline">\(\|f(\mathbf{x}\|\leq M\|g(\mathbf{x})\|\)</span></p><p><strong>当 <span class="math inline">\(\mathbf{x}\to \mathbf{a}\)</span> 时，<span class="math inline">\(f=o(g)\)</span></strong>：对 <span class="math inline">\(\forall \ \epsilon &gt;0\)</span>，存在 <span class="math inline">\(a\)</span> 的去心领域 <span class="math inline">\(U_\epsilon\)</span> ，使得 <span class="math inline">\(\mathbf{x}\in U\)</span>，都有 <span class="math inline">\(\|f(\mathbf{x}\|\leq \epsilon\|g(\mathbf{x})\|\)</span></p><p><strong>当 <span class="math inline">\(\mathbf{x}\to \mathbf{a}\)</span> 时，<span class="math inline">\(f,g\)</span> 同阶</strong>：<span class="math inline">\(f=O(g)\)</span> 且 <span class="math inline">\(g=O(f)\)</span></p><p><strong>当 <span class="math inline">\(\mathbf{x}\to \mathbf{a}\)</span> 时，<span class="math inline">\(f,g\)</span> 等价</strong>：<span class="math inline">\(g=f+o(f)\)</span></p><p>范数等价性可以表述为：对 <span class="math inline">\(\forall \ \|\cdot\|\)</span>，<span class="math inline">\(\|\mathbf{x}\|=O(\|\mathbf{x}\|_{\infty}),\|\mathbf{x}\|_{\infty}=O(\|\mathbf{x}\|\)</span></p><p><span class="math inline">\(\mathbb{R}^{m}\)</span> 上的所有范数都是同阶的</p><p>所有 <span class="math inline">\(k-\)</span>重线性映射 <span class="math inline">\(L\)</span>，都是一个 <span class="math inline">\(k-\)</span>次性，教材上使用 <span class="math inline">\(\lim\limits_{\rho\to 0}\dfrac{f(\mathbf{x})}{\rho^{k}}=C\neq0\)</span> 会出现问题</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Thoughts on the first week of blog building</title>
    <link href="/2022/02/27/Thoughts%20on%20the%20first%20week%20of%20blog%20building/"/>
    <url>/2022/02/27/Thoughts%20on%20the%20first%20week%20of%20blog%20building/</url>
    
    <content type="html"><![CDATA[<p><span class="math inline">\(2022\)</span> 年 <span class="math inline">\(2\)</span> 月 <span class="math inline">\(21\)</span> 日开始建成该博客，当前建成博客刚好一周，也算是<strong>一周纪念日</strong>。虽然还有很多东西需要优化，内容也需要多样化。感谢 <a href="https://zhaochenyang20.github.io/">学长</a> 给予我许多帮助，他列出如下清单，当前进度 <span class="math inline">\(3/9\)</span>，希望这学期完了之后把这些东西一一配好。</p><ul class="task-list"><li><input type="checkbox" disabled="" />设置密码</li><li><input type="checkbox" disabled="" checked="" />设置主题</li><li><input type="checkbox" disabled="" />设置置顶</li><li><input type="checkbox" disabled="" checked="" />设置数学公式</li><li><input type="checkbox" disabled="" checked="" />设置 <span class="math inline">\(\mbox{tags}\)</span></li><li><input type="checkbox" disabled="" />设置分类</li><li><input type="checkbox" disabled="" />设置访客地图</li><li><input type="checkbox" disabled="" />添加友链</li><li><input type="checkbox" disabled="" />添加 <span class="math inline">\(\mbox{about,utool}\)</span></li></ul><p>周末跟着学长 <span class="math inline">\(\mbox{process}\)</span> 了一些 <span class="math inline">\(\mbox{data}\)</span>，之后有时间的话把当中一些 <span class="math inline">\(\mbox{tricks}\)</span> 整理一下丢在昨天的博客里，现在首要任务是把“甲方”的图表拿出来。感觉把 <span class="math inline">\(\mbox{Python}\)</span> 运用到实际 <span class="math inline">\(\mbox{Project}\)</span> 当中收获和进步是很快的，这是无论做多少次小作业都学不到的。每次 <span class="math inline">\(\mbox{Error}\)</span> 的修正，每次 <span class="math inline">\(\mbox{Debug}\)</span> 的探索，每次 <span class="math inline">\(\mbox{Except}\)</span> 的处理，都让我增长不少。</p><p>周六早上开班会，为我们班集体的出色点赞！虽然我们班来自不同方向，但是我们也能凝聚在一起，共同交流进步。中午和下午写 <span class="math inline">\(\mbox{OOP}\)</span>，晚上吃了听涛园<strong>咖喱味的麻辣香锅</strong>，属实可口！然后晚上到三教和“甲方”交流，调环境，写 <span class="math inline">\(\mbox{Python}\)</span>，跑代码，终于赶在三教闭馆前搞定。</p><p>周日早八起来打乒乓，还比较冷，回来洗完澡后码代码，把 <span class="math inline">\(102\)</span> 张图表批量做出来了，出去吃午饭还比较暖和，下午睡了好一会儿，感觉还比较舒服。</p><p>博客的建立就是跟着学长学的，最开始以为就是传传文章就完了，但说真的，博客有很好的督促效果，自带 <span class="math inline">\(\mbox{push}\)</span> 属性，这一周的学习生活变得非常有规律，提前做完了好多事情，方便自主探索和课外拓展，相信这个博客能够一直更新下去，默默地守护着一些宝贵的回忆吧。</p><p>说起来也快到三月了，路边还有些许冰没有融化，但阳光还是比较明媚，从去年冬天到现在，寝室门外的树木一直光秃秃的，<strong>“春天还会远吗？”</strong>。从小生长在南方，也许没有真正地体会到万物复苏，也许没有真正看到无数生命在身边从无到有蓬勃生长的样子，希望自己也能像种子一样，顶住破土的压力，向上成长。</p>]]></content>
    
    
    <categories>
      
      <category>随想</category>
      
      <category>里程碑</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客建成一周随想</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OOP-Homework-1</title>
    <link href="/2022/02/26/Program/OOP%20Homework%201/"/>
    <url>/2022/02/26/Program/OOP%20Homework%201/</url>
    
    <content type="html"><![CDATA[<h1 id="面向对象编程第一次作业">面向对象编程第一次作业</h1><p><strong>Object-Oriented Programming <span class="math inline">\(\bullet\)</span> Homework <span class="math inline">\(\mathbf{1}\)</span></strong></p><h2 id="摘要">摘要</h2><p>本次作业报告从模型、验证、复杂度分析三个层面，使用<span class="math inline">\(\mbox{Visual~Studio~2022}\)</span>编写具有面向对象特性的<span class="math inline">\(\mbox{C}++\)</span>程序，使用两种不同的算法，并实现了单一测试和自动化测试，同时记录对应消耗的时间。</p><p>结合数据规模<span class="math inline">\(10^{9}\)</span>，在自动化测试中，利用时间复杂度，对测得的消耗时间进行线性回归，预测了下组数据计算完成所需要的总时间，与实际测得时间吻合，并估计所有数据点<span class="math inline">\((10^{9})\)</span>全部测试完成所需要的时间（<span class="math inline">\(20\)</span>年左右）。 <strong>关键词:</strong> <span class="math inline">\(\mbox{OOP}\)</span>;模拟;高斯求和;复杂度分析;线性回归</p><h2 id="模型">模型</h2><h3 id="模拟求和">模拟求和</h3><p>对输入的正整数<span class="math inline">\(N(1\leq N\leq 10^{9})\)</span>，从最小的偶数<span class="math inline">\(2\)</span>开始遍历求和，直到大于<span class="math inline">\(N\)</span>为止。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">Sum = <span class="hljs-number">0</span>;             <span class="hljs-comment">//初始化Sum为0</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= N; i+=<span class="hljs-number">2</span>)<span class="hljs-comment">//遍历每一个数</span><br>    Sum += i;<br></code></pre></td></tr></table></figure><p>计算不超过<span class="math inline">\(N\)</span>所有偶数之和的关键代码如上，注意由于<span class="math inline">\(\mbox{Sum}\)</span>不断地被修改，每次计算前均将其初始化为<span class="math inline">\(0\)</span></p><h3 id="高斯求和">高斯求和</h3><p>对上限<span class="math inline">\(10^{9}\)</span>，利用高斯求和法 <span class="math display">\[\displaystyle \sum_{i=1}^{5\times 10^{8}}2i=2\cdot \dfrac{i(i+1)}{2}\big |_{i=5\times 10^{8}}\approx 2.5\times 10^{17}\gg \mbox{max of (}\textcolor{blue}{int})\approx 2.147\times 10^{9}\]</span> 从而存储结果<span class="math inline">\(\mbox{Sum}\)</span>应选用<span class="math inline">\(\textcolor{blue}{long\ long}\)</span>数据类型，对输入数据<span class="math inline">\(\mbox{N}\)</span>分奇偶两种情况 <span class="math display">\[\mbox{Sum}=\begin{cases}\mbox{N is odd},\displaystyle \sum_{i=1}^{\frac{N-1}{2}}2i=\dfrac{N-1}{2}\cdot (\dfrac{N-1}{2}+1)=\dfrac{(N-1)(N+1)}{4}\\\mbox{N is even},\displaystyle \sum_{i=1}^{\frac{N}{2}}2i=\dfrac{N}{2}\cdot (\dfrac{N}{2}+1)=\dfrac{N(N+2)}{4}\end{cases}\]</span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">Sum = <span class="hljs-number">0</span>;             <span class="hljs-comment">//初始化Sum为0</span><br><span class="hljs-keyword">if</span> (N &amp; <span class="hljs-number">1</span>)<br>    Sum = (<span class="hljs-type">long</span> <span class="hljs-type">long</span>)(N - <span class="hljs-number">1</span>) * (<span class="hljs-type">long</span> <span class="hljs-type">long</span>)(N + <span class="hljs-number">1</span>) / <span class="hljs-number">4</span>;<br><span class="hljs-keyword">else</span><br>    Sum = (<span class="hljs-type">long</span> <span class="hljs-type">long</span>)N * (<span class="hljs-type">long</span> <span class="hljs-type">long</span>)(N + <span class="hljs-number">2</span>) / <span class="hljs-number">4</span>;<br></code></pre></td></tr></table></figure><p>第二种方法对应关键代码如上，其中<span class="math inline">\(\mbox{if (N \&amp; 1)}\)</span>使用"与"的方法判断<span class="math inline">\(N\)</span>二进制表示的结尾数字，若为<span class="math inline">\(1\)</span>，则为奇数，对应第一种情况，反之亦然。</p><h3 id="类的定义">类的定义</h3><p>本次编程头文件<span class="math inline">\(SumOfEvenLessThanN.h\)</span>中类的定义以及对应方法如下，其中将输入数据<span class="math inline">\(N\)</span>和输出结果<span class="math inline">\(\mbox{Sum}\)</span>以及相关的时间放在<span class="math inline">\(\mbox{private}\)</span>内，其余构造函数、析构函数以及输入、方法计算、自动测试、预测时间相关函数头放在<span class="math inline">\(\mbox{public}\)</span>中。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SumOfEvenLessThanN</span> &#123;<br>    <span class="hljs-keyword">private</span>:<br>        <span class="hljs-type">int</span> N;      <span class="hljs-comment">//输入数据</span><br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> Sum;  <span class="hljs-comment">//输出结果</span><br>        <span class="hljs-type">bool</span> IsFirst;   <span class="hljs-comment">//是否使用第一种方法</span><br>        <span class="hljs-type">double</span> FirstTime;   <span class="hljs-comment">//法一需要的时间</span><br>        <span class="hljs-type">double</span> SecondTime;  <span class="hljs-comment">//法二需要的时间</span><br>        <span class="hljs-type">double</span> timelist[<span class="hljs-number">1000</span>];  <span class="hljs-comment">//时间列表</span><br>        <span class="hljs-type">double</span> LogSumOfSquareN[<span class="hljs-number">1000</span>];  <span class="hljs-comment">//对数基准</span><br>        <span class="hljs-type">const</span> <span class="hljs-type">double</span> LastLogSumOfSquareN = <span class="hljs-number">18</span> * <span class="hljs-built_in">log</span>(<span class="hljs-number">10</span>);    <span class="hljs-comment">//预测所有时间对数常数</span><br>    <span class="hljs-keyword">public</span>:<br>        <span class="hljs-built_in">SumOfEvenLessThanN</span>();   <span class="hljs-comment">//构造函数</span><br>        ~<span class="hljs-built_in">SumOfEvenLessThanN</span>() &#123;&#125;<span class="hljs-comment">//析构函数</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Input</span><span class="hljs-params">()</span></span>;       <span class="hljs-comment">//输入</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">FirstMethod</span><span class="hljs-params">()</span></span>; <span class="hljs-comment">//法一</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SecondMethod</span><span class="hljs-params">()</span></span>;    <span class="hljs-comment">//法二</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ShowData</span><span class="hljs-params">()</span></span>;    <span class="hljs-comment">//输出</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SingleTest</span><span class="hljs-params">()</span></span>;  <span class="hljs-comment">//单点测试</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">AutoTest</span><span class="hljs-params">()</span></span>;    <span class="hljs-comment">//自动测试</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">PredictCostTime</span><span class="hljs-params">(<span class="hljs-type">double</span> list[], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> st)</span></span>;     <span class="hljs-comment">//预测下次运行时间</span><br>        <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ShowYearsOfTestAll</span><span class="hljs-params">(<span class="hljs-type">double</span> second)</span></span>;     <span class="hljs-comment">//预测计算所有数据需要花的时间</span><br>    &#125;;<br></code></pre></td></tr></table></figure><p>预测时间部分运用线性回归，对于样本<span class="math inline">\(\mbox{(x,y)}\)</span>​，其线性拟合公式如下： <span class="math display">\[\left\{\begin{array}{l}\hat{b}=\frac{\displaystyle \sum_{i=1}^{n}\left(x_{i}-\bar{x}\right)\left(y_{i}-\bar{y}\right)}{\displaystyle \sum_{i=1}^{n}\left(x_{i}-\bar{x}\right)^{2}}=\frac{\displaystyle \sum_{i=1}^{n} x_{i} y_{i}-n \bar{x} \bar{y}}{\displaystyle \sum_{i=1}^{n} x_{i}^{2}-n \bar{x}^{2}} \\\hat{a}=\bar{y}-\hat{b} \bar{x} .\end{array}\right.\]</span></p><h2 id="验证">验证</h2><p>本实验结合不同情况，编写两种测试，一种为输入<span class="math inline">\(1\sim 1\times 10^{9}\)</span>中某个整数进行测试，输出两种方法对应结果和所需要时间。另一种测试方式为自动测试，以<span class="math inline">\(10^{4}\)</span>为步长，将两种方法计算的结果进行比较并输出结果，截图如下：</p><h3 id="单点测试">单点测试</h3><p>在初始询问时输入<span class="math inline">\(\mbox{no}\)</span>进入单点测试模式，输入不同的数字给出对应结果：</p><p><img src="https://pic.imgdb.cn/item/622a1c305baa1a80ab53f38b.jpg" style="zoom:80%;" /></p><p>可以看出，对于第二种方法，计算时间<span class="math inline">\(&lt;0.001\mbox{s}\)</span>，几乎认为不占总时间。第一种方法计算时间随输入数据增加。</p><h3 id="自动测试">自动测试</h3><p>在初始询问时输入<span class="math inline">\(\mbox{yes}\)</span>进入自动化测试模式，以<span class="math inline">\(10^{4}\)</span>为步长使用两种方法判断对应结果是否相同，当计算结果相同时，对应输出<span class="math inline">\(\mbox{Right!}\)</span>，同时记录对应消耗的总时间进行进行对数线性拟合。</p><p>某次运行在控制台获取的部分数据如下表格所示，可以看出拟合预测下次时间与实际测得总时间基本吻合，误差在<span class="math inline">\(0.5\mbox{s}\)</span>之内，预测计算完成所有数据<span class="math inline">\((10^{9})\)</span>需要总时间稳定在<span class="math inline">\(18\)</span>年到<span class="math inline">\(21\)</span>年，基本不可能完成（笔记本平均寿命为<span class="math inline">\(10\)</span>年）。 <span class="math display">\[\small\begin{array}{|c|c|c|c|c|}\hline \text { 数据范围 } &amp; \text { 结果 } &amp; \text { 总时间 } &amp; \text { 预测下次时间 } &amp; \text { 预测计算完成 } 10^{9} \text { 需要总时间 } \\\hline 200000-210000 &amp; \text { Right! } &amp; 20.087 \mathrm{~s} &amp; 21.764 \mathrm{~s} &amp; 18 \text { years } 5 \text { months } 29 \text { days } 2.20994 \text { hours } \\\hline 210000-220000 &amp; \text { Right! } &amp; 22.086 \mathrm{~s} &amp; 23.871 \mathrm{~s} &amp; 18 \text { years } 10 \text { months } 8 \text { days } 20.2604 \text { hours } \\\hline 220000-230000 &amp; \text { Right! } &amp; 24.206 \mathrm{~s} &amp; 26.078 \mathrm{~s} &amp; 19 \text { years } 1 \text { months } 29 \text { days } 20.2625 \text { hours } \\\hline 230000-240000 &amp; \text { Right! } &amp; 26.409 \mathrm{~s} &amp; 28.383 \mathrm{~s} &amp; 19 \text { years } 5 \text { months } 8 \text { days } 21.9619 \text { hours } \\\hline 240000-250000 &amp; \text { Right! } &amp; 28.712 \mathrm{~s} &amp; 30.787 \mathrm{~s} &amp; 19 \text { years } 8 \text { months } 4 \text { days } 11.7022 \text { hours } \\\hline 250000-260000 &amp; \text { Right! } &amp; 31.102 \mathrm{~s} &amp; 33.287 \mathrm{~s} &amp; 19 \text { years } 10 \text { months } 16 \text { days } 4.11791 \text { hours } \\\hline 260000-270000 &amp; \text { Right! } &amp; 33.622 \mathrm{~s} &amp; 35.889 \mathrm{~s} &amp; 20 \text { years } 0 \text { months } 17 \text { days } 22.2443 \text { hours } \\\hline 270000-280000 &amp; \text { Right! } &amp; 36.225 \mathrm{~s} &amp; 38.590 \mathrm{~s} &amp; 20 \text { years } 8 \text { months } 16 \text { days } 23.5517 \text { hours } \\\hline 280000-290000 &amp; \text { Right! } &amp; 38.924 \mathrm{~s} &amp; 41.391 \mathrm{~s} &amp; 21 \text { years } 4 \text { months } 8 \text { days } 22.0112 \text { hours } \\\hline 290000-300000 &amp; \text { Right! } &amp; 41.732 \mathrm{~s} &amp; 44.291 \mathrm{~s} &amp; 21 \text { years } 2 \text { months } 26 \text { days } 2.99112 \text { hours } \\\hline 300000-310000 &amp; \text { Right! } &amp; 44.613 \mathrm{~s} &amp; 47.290 \mathrm{~s} &amp; 20 \text { years } 7 \text { months } 5 \text { days } 19.2841 \text { hours } \\\hline 310000-320000 &amp; \text { Right! } &amp; 47.605 \mathrm{~s} &amp; 50.388 \mathrm{~s} &amp; 20 \text { years } 8 \text { months } 10 \text { days } 14.1711 \text { hours } \\\hline 320000-330000 &amp; \text { Right! } &amp; 50.826 \mathrm{~s} &amp; 53.597 \mathrm{~s} &amp; 20 \text { years } 9 \text { months } 24 \text { days } 0.428567 \text { hours } \\\hline 330000-340000 &amp; \text { Right! } &amp; 53.963 \mathrm{~s} &amp; 56.900 \mathrm{~s} &amp; 20 \text { years } 10 \text { months } 26 \text { days } 18.043 \text { hours } \\\hline 340000-350000 &amp; \text { Right! } &amp; 57.171 \mathrm{~s} &amp; 60.296 \mathrm{~s} &amp; 20 \text { years } 11 \text { months } 18 \text { days } 15.4001 \text { hours } \\\hline 350000-360000 &amp; \text { Right! } &amp; 60.495 \mathrm{~s} &amp; 63.786 \mathrm{~s} &amp; 20 \text { years } 12 \text { months } 3 \text { days } 5.2781 \text { hours } \\\hline 360000-370000 &amp; \text { Right! } &amp; 63.897 \mathrm{~s} &amp; 67.369 \mathrm{~s} &amp; 21 \text { years } 0 \text { months } 5 \text { days } 14.4397 \text { hours } \\\hline 370000-380000 &amp; \text { Right! } &amp; 67.423 \mathrm{~s} &amp; 71.048 \mathrm{~s} &amp; 21 \text { years } 0 \text { months } 8 \text { days } 20.6017 \text { hours } \\\hline 380000-390000 &amp; \text { Right! } &amp; 71.036 \mathrm{~s} &amp; 74.822 \mathrm{~s} &amp; 21 \text { years } 0 \text { months } 8 \text { days } 4.89934 \text { hours } \\\hline 390000-400000 &amp; \text { Right! } &amp; 74.737 \mathrm{~s} &amp; 78.690 \mathrm{~s} &amp; 20 \text { years } 8 \text { months } 3 \text { days } 22.6821 \text { hours } \\\hline\end{array}\]</span></p><h2 id="分析">分析</h2><h3 id="复杂度">复杂度</h3><p>对于模拟求和法，由于每次加法为常数时间，需要计算次数大约为输入数据的一半，从而时间复杂度为<span class="math inline">\(O(\dfrac{N}{2})\sim O(n)\)</span>，而高斯求和法只涉及两次加减法和两次除法，其时间复杂度为<span class="math inline">\(O(2)+O(2)=O(1)\)</span>。两者空间复杂度均为<span class="math inline">\(O(1)\)</span>。</p><p>从实际测量的时间来看，两者的差异也是显著的，对于最大的数据点，前者耗时<span class="math inline">\(1\sim 2\)</span>秒，后者几乎不耗时。</p><h3 id="优缺点">优缺点</h3><p>显然，从耗时的角度，高斯求和法远远快于模拟求和法。但是从代码编写的角度来看，前者容易编写和维护，后者由于对奇数和偶数的情况需要分类讨论，增加推导数学公式难度，也不便于调试。</p><p>从而对于需要高性能计算的软件构件库，高斯求和法更加适合；若软件构件库数据规模量较小，则便于编写和维护的模拟求和法更加适合。</p><h3 id="线性拟合过程">线性拟合过程</h3><p>由于<span class="math inline">\(t_{\mbox{高斯}}\ll t_{\mbox{模拟}}\)</span>，则总时间由后者决定，又由于时间复杂度为<span class="math inline">\(O(n)\)</span>，则对于步长<span class="math inline">\(a=10^{4}\)</span>来说，总时间消耗为常数时间乘上<span class="math inline">\(\displaystyle \sum_{i=1}^{an}i=\dfrac{an(an+1)}{2}\sim \dfrac{a^2}{2}n^2\)</span>，即正比于<span class="math inline">\(n^2\)</span> <span class="math display">\[T\sim An^2\Longrightarrow \ln T=\ln A +k\ln (n^2)\]</span> 将<span class="math inline">\(\ln (n^2)\)</span>看作自变量<span class="math inline">\(x\)</span>，<span class="math inline">\(ln T\)</span>看作因变量，进行线性拟合，若输出<span class="math inline">\(k\)</span>，可以发现<span class="math inline">\(k\longrightarrow 1\)</span>，与理论相吻合，并用获得的<span class="math inline">\(\ln A\)</span>和<span class="math inline">\(k\)</span>预测<span class="math inline">\(n+1\)</span>组的时间以及<span class="math inline">\(n=10^{9}\)</span>的时间，结果在"预测"部分已经体现。</p>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>面向对象编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面向对象编程作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Concrete Mathematics Chapter one note</title>
    <link href="/2022/02/25/Math/Concrete%20Mathematics%20Chapter%20one%20note/"/>
    <url>/2022/02/25/Math/Concrete%20Mathematics%20Chapter%20one%20note/</url>
    
    <content type="html"><![CDATA[<h1 id="chapter-1-recurrent-problem">Chapter 1 Recurrent problem</h1><p>For <strong>Hanoi problem</strong>, consider the largest disk must be moved when the <span class="math inline">\(n-1\)</span> disks on it were moved. And once <span class="math inline">\(T_{n-1}\)</span> times are down, we must at least move the largest one once and do another <span class="math inline">\(T_{n-1}\)</span> times to make it. Hence: <span class="math display">\[T_{n}\geq2T_{n-1}+1\]</span> Apparently we can give a structure to suit this <span class="math inline">\(T_n\)</span> , so recurrence <span class="math inline">\(T_n=2T_{n-1}+1\)</span>, then <span class="math inline">\(T_n=2^n-1\)</span></p><p>For <strong>Lines-in-the-plane problem</strong>, consider nth line can intersect <span class="math inline">\(n-1\)</span> common points, and these points divide this line into <span class="math inline">\(n\)</span> parts, each part gives one more region. Hence: <span class="math display">\[L_n\leq L_{n-1}+n\]</span> Combined with boundary value, so <span class="math inline">\(L_n=\dfrac{n(n+1)}{2}+1\\\)</span></p><p>For <strong>Zigs-in-the-plane problem</strong>, if extend the sharp side, we have <span class="math inline">\(Z&#39;_{n}=L_{2n}=2n^2+n+1\)</span>, but because of the sharps, the ideal situation is each sharp lose two regions. So <span class="math inline">\(Z_n=Z&#39;_{n}-2\cdot n=2n^2-n+1\)</span></p><p>For <strong>Josephus problem</strong>, assume the order of the death is <span class="math inline">\(2\)</span>. Consider <span class="math inline">\(1,2,\dots ,2n\)</span>, after first round the circle leave <span class="math inline">\(1,3,\cdots ,2n-1\)</span>, and each correspond to the n-people situation, hence: <span class="math display">\[J_{2n}=2J_{n}-1\]</span> This equation gives that <span class="math inline">\(J_{2^n}\equiv1\)</span>, when the number of people is the power of <span class="math inline">\(2\)</span>, the first guy is lucky. And consider <span class="math inline">\(1,2,\cdots ,2n,2n+1\)</span>, after first round it remains <span class="math inline">\(3,5,\cdots ,2n+1\)</span>, each correspond to the n-people situation, hence:</p><p><span class="math display">\[J_{2n+1}=2J_{n}+1\]</span> And define <span class="math inline">\(m\triangleq \lfloor log_2 n\rfloor\)</span> , so <span class="math inline">\(l\triangleq n-2^m\in[0,\dfrac{n}{2})\)</span>, and after <span class="math inline">\(l\)</span> times the number is power of 2 and the first guy that is currently pointed is lucky. Hence: <span class="math display">\[J_{n}=2l+1=2(n-2^{\lfloor log_2 n \rfloor})+1\]</span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">BinarySolutionToJosephusTwo</span><span class="hljs-params">(<span class="hljs-type">long</span> <span class="hljs-type">long</span> a)</span> </span>&#123;<span class="hljs-comment">//time complexity O(logn)</span><br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> A = a;<br>    <span class="hljs-keyword">while</span> ((A &amp; (A - <span class="hljs-number">1</span>)) != <span class="hljs-number">0</span>)<span class="hljs-comment">//get the first 1</span><br>        A &amp;= (A - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> ((a - A) &lt;&lt; <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>To generalize it, we assume that <span class="math inline">\(f(j)=\alpha_j(1\leq j&lt;d)\)</span> and <span class="math display">\[f(dn+j)=cf(n)+\beta_j(0\leq j\]</span> Use base system, the result is: <span class="math display">\[f((b_mb_{m-1}\cdots b_1b_0)_d)=(\alpha_{b_m}\beta_{b_{m-1}}\beta_{b_{m-2}}\cdots \beta_{b_1}\beta_{b_0})_c\]</span> Beautiful proof of <strong>AGM</strong>(Arithmetic-Geometric-Mean inequality), let <span class="math inline">\(P(n)\)</span> means when there are n numbers is true: <span class="math display">\[P(2)\ is\ true ,P(n)\to P(n-1),P(n)\ and \ P(2)\to P(2n)\]</span> <strong>repertoire method</strong>: Use undetermined function method to solve recurrent problem, for instance <span class="math display">\[\begin{aligned}&amp;R_{0}=\alpha \\&amp;R_{n}=2R_{n-1}+\beta n+\gamma\end{aligned}\]</span> Set <span class="math inline">\(R_{n}=A(n) \alpha+B(n) \beta+C(n) \gamma\)</span>, use some special situations to get <span class="math inline">\(A(n),B(n),C(n)\)</span> <span class="math display">\[\begin{cases}R_{n}=1\Longrightarrow \alpha=1,\gamma=-1,\beta=0\Longrightarrow A(n)-C(n)=1\\R_{n}=n\Longrightarrow \alpha=0,n=2\cdot (n-1)+\beta n+\gamma,\beta=-1,\gamma=2\Longrightarrow2C(n)-B(n)=n\\R_{n}=2^n\Longrightarrow \alpha=1,2^n=2\cdot 2^{n-1}+\beta n+\gamma\Longrightarrow\beta=\gamma=0\Longrightarrow A(n)=2^{n}\end{cases}\]</span> Solution <span class="math inline">\(\begin{cases}A(n)=2^n\\B(n)=2^{n+1}-n-2\\C(n)=2^{n}-1\end{cases}\)</span>, then <span class="math inline">\(R_{n}=(\alpha+2\beta+\gamma)2^{n}-\beta n-(2\beta+\gamma)\)</span></p><p><span class="math inline">\(n\)</span> planes divide the three dimensions space into <span class="math inline">\(\large C_{n}^{0}+C_{n}^{1}+C_{n}^{2}+C_{n}^{3}\)</span> pieces at most.</p><p>consider <span class="math inline">\(T_{n}\)</span> and <span class="math inline">\(T_{n-1}\)</span>, the pieces that are added is <span class="math inline">\(n-1\)</span> lines that cut the new plane, so that <span class="math display">\[T_{n}=T_{n-1}+\large C_{n-1}^{0}+C_{n-1}^{1}+C_{n-1}^{2}\]</span> So we can guess that when the super-plane is <span class="math inline">\(d-1\)</span> dimensions, then <span class="math inline">\(n\)</span> super-planes cut the <span class="math inline">\(d\)</span> dimensions space into <span class="math inline">\(\displaystyle \sum_{k=0}^{d}\large C_{n}^{i}\)</span> pieces at most.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>具体数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>具体数学笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Calculus-A2-homework first</title>
    <link href="/2022/02/24/Math/Calculus/Calculus%20A2%20homework%20first/"/>
    <url>/2022/02/24/Math/Calculus/Calculus%20A2%20homework%20first/</url>
    
    <content type="html"><![CDATA[<h1 id="largetextcolorblue微积分第一次作业-smallwtimes-f-_textcolorblue2022.2.25"><span class="math inline">\(\large\textcolor{blue}{微积分第一次作业\ \small(W\times f)}\ \ \ \ \ \ _\textcolor{blue}{2022.2.25}\)</span></h1><h4 id="设-cdot-是范数证明-mathbbcvecxinmathbbrmmidvecxleq-1-是闭凸集">1、设 <span class="math inline">\(\|\cdot\|\)</span> 是范数，证明 <span class="math inline">\(\mathbb{C}=\{\vec{x}\in\mathbb{R}^m\mid\|\vec{x}\|\leq 1\}\)</span> 是闭凸集。</h4><h4 id="mathbbcinmathbbrm-是凸集-longleftrightarrow-forall-vecxvecyinmathbbc-forall-tin01-1-tvecxtvecyinmathbbc">（ <span class="math inline">\(\mathbb{C}\in\mathbb{R}^{m}\)</span> 是凸集<span class="math inline">\(\ \Longleftrightarrow \ \forall\  \vec{x},\vec{y}\in\mathbb{C},\ \forall \ t\in(0,1),\ (1-t)\vec{x}+t\vec{y}\in\mathbb{C}\)</span>）</h4><p><strong>证明</strong>：先证明其为凸集，由范数的性质，满足三角不等式和正齐次性有 <span class="math display">\[\|\vec{x}\|,\|\vec{y}\|\leq 1\in\mathbb{C},\ \forall \ t\in(0,1),\ \|(1-t)\vec{x}+t\vec{y}\|\leq(1-t)\|\vec{x}\|+t\|\vec{y}\|\leq 1\]</span> 考虑 <span class="math inline">\(\mathbb{C}\)</span> 的补集 <span class="math inline">\(\mathbb{A}=\{\vec{x}\in\mathbb{R}^m\mid\|\vec{x}\|&gt; 1\}\)</span>，对于该集合中任意一点 <span class="math inline">\(\vec{a}\in\mathbb{A}\)</span>，令 <span class="math inline">\(\|\vec{a}\|=\lambda&gt;1\)</span> <span class="math display">\[\forall \ \vec{a}\in\mathbb{A},\ \exists \ \delta=\dfrac{\lambda-1}{2},\ s.t.\forall \ \|\vec{x}-\vec{a}\|&lt;\delta,\|\vec{x}\|\geq\|\vec{a}\|-\|\vec{a}-\vec{x}\|=\|\vec{a}\|-\|\vec{x}-\vec{a}\|&gt;1\]</span> 从而 <span class="math inline">\(\mathbb{A}\)</span> 满足任意一点总存在该点领域全在 <span class="math inline">\(\mathbb{A}\)</span> 中，<span class="math inline">\(\mathbb{A}\)</span> 为开集，<span class="math inline">\(\mathbb{C}\)</span> 为 <span class="math inline">\(\mathbb{A}\)</span> 的补集，则 <span class="math inline">\(\mathbb{C}\)</span> 为闭集</p><p>再结合其为凸集，得 <span class="math inline">\(\mathbb{C}\)</span> 为闭凸集 <span class="math inline">\(□\)</span></p><h4 id="设-cdot-满足正定正齐次性证明cdot-是范数-longleftrightarrow-mathbbcvecxinmathbbrmmidvecxleq-1-是凸集">2、设 <span class="math inline">\(\|\cdot\|\)</span> 满足正定、正齐次性，证明：<span class="math inline">\(\|\cdot\|\)</span> 是范数 <span class="math inline">\(\Longleftrightarrow\)</span> <span class="math inline">\(\mathbb{C}=\{\vec{x}\in\mathbb{R}^m\mid\|\vec{x}\|\leq 1\}\)</span> 是凸集。</h4><p><strong>证明</strong>：由第一题结论可得，<span class="math inline">\(\|\cdot\|\)</span> 是范数 <span class="math inline">\(\Longrightarrow\)</span> <span class="math inline">\(\mathbb{C}=\{\vec{x}\in\mathbb{R}^m\mid\|\vec{x}\|\leq 1\}\)</span> 是凸集。</p><p>又若 <span class="math inline">\(\mathbb{C}=\{\vec{x}\in\mathbb{R}^m\mid\|\vec{x}\|\leq 1\}\)</span> 是凸集，即 <span class="math inline">\(\forall\  \vec{x},\vec{y}\in\mathbb{C},\ \forall \ t\in(0,1),\ (1-t)\vec{x}+t\vec{y}\in\mathbb{C}\)</span>。若</p><p><span class="math inline">\(\|\vec{x}\|\)</span> 或 <span class="math inline">\(\|\vec{y}\|\)</span> 中有一者为 <span class="math inline">\(0\)</span>，由 <span class="math inline">\(\|\cdot\|\)</span> 的正定性，可得 <span class="math inline">\(\vec{x}\)</span> 或 <span class="math inline">\(\vec{y}\)</span> 中一者为 <span class="math inline">\(\boldsymbol 0\in \mathbb{R}^m\)</span>，此时三角不等式</p><p><span class="math inline">\(\|\vec{x}\|+\|\vec{y}\|\geq\|\vec{x}+\vec{y}\|\)</span> 成立。则对两者范数均大于 <span class="math inline">\(0\)</span> 的情况， <span class="math inline">\(\forall\ \vec{x},\vec{y}\)</span>，令<span class="math inline">\(\|\vec{x}\|=l_1&gt;0\)</span></p><p><span class="math inline">\(\|\vec{y}\|=l_2&gt;0\)</span>，单位化有 <span class="math inline">\(\vec{n}_1=\dfrac{\vec{x}}{l_1},\vec{n}_2=\dfrac{\vec{y}}{l_2}\)</span>，满足 <span class="math inline">\(\vec{n}_1,\vec{n}_2\in\mathbb{C}\)</span>， 由凸集性质 <span class="math display">\[\begin{gathered}\because \forall \ t\in(0,1),\|(1-t)\vec{n}_1+t\vec{n}_2\|\in\mathbb{C},\vec{n}_1=\dfrac{\vec{x}}{l_1},\vec{n}_2=\dfrac{\vec{y}}{l_2}\\\therefore \forall\ t\in (0,1),\|\dfrac{1-t}{l_1}\cdot \vec{x}+\dfrac{t}{l_2}\cdot \vec{y}\|\leq 1\ \therefore \mbox{set}\ \ \ t=\dfrac{l_2}{l_1+l_2},\|\dfrac{\vec{x}+\vec{y}}{l_1+l_2}\|\leq1\end{gathered}\]</span> 由正齐次性，<span class="math inline">\(\|\dfrac{\vec{x}+\vec{y}}{l_1+l_2}\|=\dfrac{1}{l_1+l_2}\|\vec{x}+\vec{y}\|\leq 1\)</span>，则有 <span class="math inline">\(\|\vec{x}+\vec{y}\|\leq l_1+l_2=\|\vec{x}\|+\|\vec{y}\|\)</span></p><p>则 <span class="math inline">\(\mathbb{C}=\{\vec{x}\in\mathbb{R}^m\mid\|\vec{x}\|\leq 1\}\)</span> 是凸集 <span class="math inline">\(\Longrightarrow \|\cdot\|\)</span> 为范数，两者等价 <span class="math inline">\(□\)</span></p><h4 id="证明-vecx_inftyunderset1leq-ileq-mmaxxi-是范数">3、证明 <span class="math inline">\(\|\vec{x}\|_{\infty}=\underset{1\leq i\leq m}{\max}|x^{i}|\)</span> 是范数。</h4><p><strong>证明</strong>：显然正定性满足；且 <span class="math inline">\(\|\lambda\vec{x}\|_{\infty}=\underset{1\leq i\leq m}{\max}|\lambda x^{i}|=|\lambda|\underset{1\leq i\leq m}{\max}|x^{i}|=|\lambda|\|\vec{x}\|_{\infty}\)</span> 满足正齐次性，</p><p>有 <span class="math inline">\(\vec{x}=(x^1,\cdots,x^m)^{T},\vec{y}=(y^1,\cdots,y^m)^{T}\)</span>，设两者最大值为 <span class="math inline">\(|x^{max}|,|y^{max}|\)</span> <span class="math display">\[\begin{gathered}\|\vec{x}+\vec{y}\|_{\infty}=(x^1+y^1,x^2+y^2,\cdots,x^m+y^m)\leq(|x^{1}|+|y^1|,\cdots,|x^{m}|+|y^m|)\\\leq(|x^{max}|+|y_1|,\cdots,|x^{max}|+|y^m|)=|x^{max}|+(|y^1|,\cdots,|y^m|)\leq|x^{max}|+|y^{max}|\\\end{gathered}\]</span> 即有 <span class="math inline">\(\forall \ \vec{x},\vec{y},\ \|\vec{x}+\vec{y}\|_{\infty}\leq\|\vec{x}\|_{\infty}+\|\vec{y}\|_{\infty}\)</span>，满足三角不等式，从而 <span class="math inline">\(\|\vec{x}\|_{\infty}\)</span> 是（无穷）范数 <span class="math inline">\(□\)</span></p><h4 id="设-p1证明-vecx_pdisplaystyle-sum_i1mxipfrac1p-是范数">4、设 <span class="math inline">\(p&gt;1\)</span>，证明 <span class="math inline">\(\|\vec{x}\|_{p}=(\displaystyle \sum_{i=1}^m|x^i|^p)^{\frac{1}{p}}\)</span> 是范数。</h4><p><strong>证明</strong>：显然 <span class="math inline">\((\displaystyle \sum_{i=1}^m|x^i|^p)^{\frac{1}{p}}\geq 0\)</span> 满足正定性，若乘以 <span class="math inline">\(\lambda\)</span> 倍，有 <span class="math display">\[\|\lambda\vec{x}\|_{p}=\|\vec{x}\|_{\infty}=(\displaystyle \sum_{i=1}^m|\lambda x^i|^p)^{\frac{1}{p}}=\|\vec{x}\|_{\infty}=(\lambda^p \displaystyle \sum_{i=1}^m|x^i|^p)^{\frac{1}{p}}=\lambda \cdot(\displaystyle \sum_{i=1}^m|x^i|^p)^{\frac{1}{p}}=\lambda\|\vec{x}\|_{\infty}\]</span> 从而 <span class="math inline">\(\|\vec{x}\|_p\)</span> 满足正齐次性，对三角不等式，先证明两个不等式</p><blockquote><p>引理一：<strong><span class="math inline">\(\mbox{Young}\)</span> 不等式</strong>：设 <span class="math inline">\(a,b&gt;0,q,p&gt;1,\dfrac{1}{p}+\dfrac{1}{q}=1\)</span>，有以下不等式成立 <span class="math display">\[ab\leq \dfrac{a^p}{p}+\dfrac{b^q}{q}\]</span> 构造函数 <span class="math inline">\(f(x)=\dfrac{1}{p}x^{p}+\dfrac{1}{q}-x\ (x&gt;0)\)</span>，求导有 <span class="math inline">\(f&#39;(x)=x^{p-1}-1\)</span>，当 <span class="math inline">\(x\in(0,1)\)</span> 时，</p><p><span class="math inline">\(f&#39;(x)&lt;0\)</span>，<span class="math inline">\(f(x)\)</span> 单调递减；当 <span class="math inline">\(x\in (1,+\infty)\)</span> 时，<span class="math inline">\(f&#39;(x)&gt;0\)</span>，<span class="math inline">\(f(x)\)</span> 单调递增。从而</p><p><span class="math inline">\(f(x)\geq f(1)=\dfrac{1}{p}+\dfrac{1}{q}-1=0\)</span>。令 <span class="math inline">\(x=\dfrac{a}{b^{\frac{q}{p}}}\)</span> 有 <span class="math inline">\(\dfrac{1}{p}\dfrac{a^p}{b^{q}}+\dfrac{1}{q}\geq\dfrac{a}{b^{\frac{q}{p}}}\)</span>，两边乘以 <span class="math inline">\(b^q\)</span>，代入</p><p><span class="math inline">\(\dfrac{1}{p}=1-\dfrac{1}{q}\)</span>，则有 <span class="math inline">\(\dfrac{a^p}{p}+\dfrac{b^q}{q}\geq a\cdot b^{q-\frac{q}{p}}=ab\)</span></p><p>引理二：<strong><span class="math inline">\(\mbox{Hölder}\)</span> 不等式</strong>：设 <span class="math inline">\(a_k,b_k&gt;0,p,q\geq1,k=1,2,\cdots,n,\dfrac{1}{p}+\dfrac{1}{q}=1\)</span>，有以下不等式成立 <span class="math display">\[\displaystyle \sum_{k=1}^na_kb_k\leq(\sum_{k=1}^na_k^p)^{\frac{1}{p}}\cdot(\sum_{k=1}^nb_k^q)^{\frac{1}{q}}\]</span> 考虑两者相除运用 <span class="math inline">\(\mbox{Young}\)</span> 不等式即可得证 <span class="math display">\[\begin{gathered}\dfrac{\displaystyle \sum_{i=1}^na_kb_k}{\displaystyle (\sum_{k=1}^na_k^p)^{\frac{1}{p}}\cdot(\sum_{k=1}^nb_k^q)^{\frac{1}{q}}}=\displaystyle\large \sum_{k=1}^n((\normalsize\dfrac{a_k^p}{\normalsize \displaystyle \sum_{k=1}^na_k^p})^{\frac{1}{p}}\cdot(\normalsize \dfrac{b_k^q}{\normalsize \displaystyle \sum_{k=1}^nb_k^q})^{\frac{1}{q}})\normalsize \\\leq\dfrac{1}{p}\sum_{i=1}^n\dfrac{a_k^p}{\normalsize \displaystyle \sum_{k=1}^na_k^p}+\dfrac{1}{q}\sum_{i=1}^n\dfrac{b_k^q}{\normalsize \displaystyle \sum_{k=1}^nb_k^q}=\dfrac{1}{p}+\dfrac{1}{q}=1\end{gathered}\]</span></p></blockquote><p>拆开和的 <span class="math inline">\(p-\)</span>范数有 <span class="math inline">\(\displaystyle \sum_{i=1}^{n}\left(x^{i}+y^{i}\right)^{p}=\sum_{i=1}^{n} x^{i}\left(x^{i}+y^{i}\right)^{p-1}+\sum_{i=1}^{n} y^{i}\left(x^{i}+y^{i}\right)^{p-1}\)</span></p><p>令 <span class="math inline">\(\dfrac{1}{p}+\dfrac{1}{q}=1\)</span>，利用 <span class="math inline">\(\mbox{Hölder}\)</span> 不等式放缩两者有 <span class="math display">\[\begin{gathered}\sum_{i=1}^{n} x^{i}(x^{i}+y^{i})^{p-1} \leq(\sum_{i=1}^{n} (x^{i})^{p})^{\frac{1}{p}}(\sum_{i=1}^{n}(x^{i}+y^{i})^{(p-1) q})^{\frac{1}{q}}=(\sum_{i=1}^{n} (x^{i})^{p})^{\frac{1}{p}}\cdot (\sum_{i=1}^{n}(x^{i}+y^{i})^{p})^{\frac{1}{q}}\\\sum_{i=1}^{n} y^{i}(x^{i}+y^{i})^{p-1} \leq(\sum_{i=1}^{n} (y^{i})^{p})^{\frac{1}{p}}(\sum_{i=1}^{n}(x^{i}+y^{i})^{(p-1) q})^{\frac{1}{q}}=(\sum_{i=1}^{n} (y^{i})^{p})^{\frac{1}{p}}\cdot (\sum_{i=1}^{n}(x^{i}+y^{i})^{p})^{\frac{1}{q}}\end{gathered}\]</span> 从而求和得到 <span class="math inline">\(\displaystyle \sum_{i=1}^n(x^i+y^i)^p\leq \Large(\normalsize (\displaystyle \sum_{i=1}^n(x^i)^p)^{\frac{1}{p}}+(\sum_{i=1}^n(y^i)^p)^{\frac{1}{p}}\Large)\normalsize \cdot (\sum_{i=1}^{n}(x^{i}+y^{i})^{p})^{\frac{1}{q}}\)</span>，移项即得 <span class="math display">\[(\displaystyle \sum_{i=1}^n(x^i)^p)^{\frac{1}{p}}+(\sum_{i=1}^n(y^i)^p)^{\frac{1}{p}}\geq (\sum_{i=1}^n(x^i+y^i)^p)^{1-\frac{1}{q}}=(\sum_{i=1}^n(x^i+y^i)^p)^{\frac{1}{p}}\]</span> <span class="math inline">\(\|\vec{x}\|_{p}=(\displaystyle \sum_{i=1}^m|x^i|^p)^{\frac{1}{p}}\)</span> 满足正定、正齐次、三角不等式，从而为范数 <span class="math inline">\(□\)</span></p><h4 id="设-m1证明-mathbbavecxinmathbbrmmid-x1-是道路连通集">5、设 <span class="math inline">\(m&gt;1\)</span>，证明 <span class="math inline">\(\mathbb{A}=\{\vec{x}\in\mathbb{R}^m\mid \|x\|=1\}\)</span> 是道路连通集。</h4><p><strong>证明</strong>：<span class="math inline">\(\forall \ \vec{x},\vec{y}\in E\)</span>，令 <span class="math inline">\(f(t)=\dfrac{(1-t)\vec{x}+t\vec{y}}{\|(1-t)\vec{x}+t\vec{y}\|}\)</span>，对 <span class="math inline">\(\vec{x}=\vec{y}\)</span> 时，显然 若 <span class="math inline">\(。\vec{x}\neq\vec{y}\)</span>，<span class="math inline">\(f(0)=\vec{x}\)</span>，</p><p><span class="math inline">\(f(1)=\vec{y}\)</span>，先证明该函数映射连续性。有线性函数 <span class="math inline">\(g_1:[0,1]\longrightarrow \mathbb{R}^m,t \longmapsto (1-t)\vec{x}+t\vec{y}\)</span> 连</p><p>续，考虑函数 <span class="math inline">\(g_2:[0,1]\longrightarrow [0,1]t\longmapsto\|(1-t)\vec{x}+t\vec{y}\|\)</span>，由范数的正齐次性和三角不等式得 <span class="math display">\[\forall \ t_1,t_2\in[0,1],|g_2(t_1)-g_2(t_2)|=|\|\vec{x}+t_1(\vec{y}-\vec{x})\|-\|\vec{x}+t_2(\vec{y}-\vec{x})\||\leq|t_1-t_2|\|\vec{y}-\vec{x}\|\]</span> 而 <span class="math inline">\(\|\vec{y}-\vec{x}\|\leq \|\vec{y}\|+\|-\vec{x}\|=2\)</span> 为有限量，则有 <span class="math display">\[\forall \ \epsilon&gt;0,\exists\ \delta&lt;\dfrac{\epsilon}{2},s.t.\forall \ t_1,t_2\in[0,1],|t_1-t_2|&lt;\delta,|g(t_1)-g(t_2)|\leq|t_1-t_2|\|\vec{y}-\vec{x}\|&lt;\epsilon\]</span> 从而 <span class="math inline">\(g_2\)</span> 为连续函数，同时由范数的正定性，<span class="math inline">\(\|(1-t)\vec{x}+t\vec{y}\|\geq0\)</span>，若 <span class="math inline">\(\|(1-t)\vec{x}+t\vec{y}\|=0\)</span></p><p>由正定性 <span class="math inline">\((1-t)\vec{x}+t\vec{y}=0\)</span> 得 <span class="math inline">\(\vec{x}=-\vec{y}\)</span> ，只要 <span class="math inline">\(\vec{x}\neq -\vec{y}\Longrightarrow \|(1-t)\vec{x}+t\vec{y}\|\neq 0\)</span></p><p>令 <span class="math inline">\(g_3:x\in(0,1]\longmapsto \dfrac{1}{x}\in[1,+\infty)\)</span> 为连续函数，复合函数 <span class="math inline">\(f(t)=(g_3\circ g_2)\cdot g_1\)</span> 也连续</p><p>而 <span class="math inline">\(\|f(t)\|=\dfrac{\|(1-t)\vec{x}+t\vec{y}\|}{\|(1-t)\vec{x}+t\vec{y}\|}=1\)</span>，则对 <span class="math inline">\(t\in[0,1]\)</span>，都有 <span class="math inline">\(f(t)\in \mathbb{A}\)</span>，满足道路连通集条件</p><p>而针对特殊情况（两向量恰好反向）， <span class="math inline">\(\vec{x}=-\vec{y}\)</span>，可选取 <span class="math inline">\(\vec{z}\neq \vec{x},\vec{z}\neq\vec{y}\)</span>，令 <span class="math inline">\(\vec{x}\)</span> 到 <span class="math inline">\(\vec{z}\)</span> 的连续映射为</p><p><span class="math inline">\(f_1(t)\)</span>，<span class="math inline">\(\vec{z}\)</span> 到 <span class="math inline">\(\vec{y}\)</span> 的连续映射为 <span class="math inline">\(f_2(t)\)</span>，可以构造连续映射 <span class="math display">\[f(t)=\begin{cases}f_1(2t),t\in[0,\dfrac{1}{2})\\f_2(2t-1),t\in[\dfrac{1}{2},1]\end{cases}\]</span> 也满足道路连续性的条件，从而 <span class="math display">\[\forall \ \vec{x},\vec{y}\in \mathbb{A},\ \exists\ 连续\ f(t),f(0)=\vec{x},f(1)=\vec{y},s.t.\forall\ t\in[0,1],f(t)\in\mathbb{A}\]</span> 即 <span class="math inline">\(\mathbb{A}\)</span> 为道路连通集 <span class="math inline">\(□\)</span></p><h4 id="设-m1证明-mathbbdamid-a-是-m-阶方阵det-a0-是道路连通集">6、设 <span class="math inline">\(m&gt;1\)</span>，证明 <span class="math inline">\(\mathbb{D}=\{A\mid A\ 是\ m\ 阶方阵,\det A&gt;0\}\)</span> 是道路连通集。</h4><p><strong>证明</strong>：首先证明单位阵 <span class="math inline">\(I\)</span> 到 <span class="math inline">\(\mathbb{D}\)</span> 中任意元素 <span class="math inline">\(A\in\mathbb{D},\det A&gt;0\)</span> 是连通的，对单位阵 <span class="math inline">\(I\)</span>，总存在一系列初等变换有 <span class="math display">\[E_1E_2\cdots E_nIE_1&#39;E_2&#39;\cdots E_n&#39;=A\]</span> 若 <span class="math inline">\(E_i\)</span> 是倍乘变换，倍乘系数为 <span class="math inline">\(k\neq0\)</span>，则对 <span class="math inline">\(\forall\ B\in \mathbb{D}\)</span>，作连续映射 <span class="math display">\[f_i(t):\mathcal{GL}^{+}(m) \longrightarrow  \mathcal{GL}^{+}(m)\quad B\longmapsto(1+(k-1)t)E_iB\]</span> 若 <span class="math inline">\(E_i\)</span> 是倍加变换，倍加系数为 <span class="math inline">\(m&gt;0\)</span>，则对 <span class="math inline">\(\forall \ C\in\mathbb{D}\)</span>，作连续映射 <span class="math display">\[g_i(t):\mathcal{GL}^{+}(m) \longrightarrow  \mathcal{GL}^{+}(m)\quad C\longmapsto(1+(k-1)t)E_iC\]</span> 若 <span class="math inline">\(E_i\)</span> 是换行 <span class="math inline">\(/\)</span> 换列变换并对其中一行 $/ $ 列乘以 <span class="math inline">\(-1\)</span> （保证行列式 <span class="math inline">\(&gt;0\)</span>），对改变的两行 <span class="math inline">\(/\)</span> 两列有连续复合映射 <span class="math display">\[(A,B)\stackrel{E_1}{\longrightarrow} (A+B,B)\stackrel{E_2}{\longrightarrow}(A+B,-A)\stackrel{E_3}{\longrightarrow}(B,-A)\stackrel{E_4(-1)}{\longrightarrow}(B,A)\]</span> 综上，对所有初等矩阵 <span class="math inline">\(E_i\)</span>，均存在连续映射 <span class="math inline">\(f_{E_{i}}(t)\)</span> 从 <span class="math inline">\(I\)</span> 到 <span class="math inline">\(E_i\)</span>，使得 <span class="math inline">\(I\)</span> 到 <span class="math inline">\(A\in\mathbb{D}\)</span> 是连通的</p><p>对 <span class="math inline">\(\forall \ A_1,A_2\in \mathbb{D}\)</span>，对 <span class="math inline">\(A_2\)</span> 实行上述步骤得到连续映射 <span class="math inline">\(I\longmapsto A_2,F(t):\displaystyle \prod_{i=1}^n f_{E_i}\)</span>，则 <span class="math inline">\(A_1^{-1}\circ F\)</span> 满足<span class="math inline">\(A_1\longmapsto A_2\)</span> 连续映射，且由于 <span class="math inline">\(f_{i}(t)\)</span> 和 <span class="math inline">\(g_{i}(t)\)</span> 都映射到 <span class="math inline">\(\mathbb{D}\)</span> 中，<span class="math inline">\(\forall \ t\in[0,1],A_1^{-1}\circ F(t)\in\mathbb{D}\)</span></p><p>，即 <span class="math inline">\(\mathbb{D}\)</span> 道路连通 <span class="math inline">\(□\)</span></p><h4 id="设-fmathbbrmdiagdown0longmapsto-mathbbr且-f-连续满足-forall-t0vecxneq0-ftvecxfvecx证明-f-有最大值和最小值">7、设 <span class="math inline">\(f:\mathbb{R}^m\diagdown\{0\}\longmapsto \mathbb{R}\)</span>，且 <span class="math inline">\(f\)</span> 连续，满足 <span class="math inline">\(\forall \ t&gt;0,\vec{x}\neq0 ,f(t\vec{x})=f(\vec{x})\)</span>，证明 <span class="math inline">\(f\)</span> 有最大值和最小值。</h4><p><strong>证明</strong>：令单位“实心球”集合 <span class="math inline">\(\mathbb{S}=\{\vec{y}\mid \|\vec{y}\|\leq 1\}\)</span> 为有界闭集，对 <span class="math inline">\(\forall\ \vec{y}\in\mathbb{R}^m\diagdown\{0\}\)</span>，若 <span class="math inline">\(\|\vec{y}\|\leq1\)</span>，</p><p>则 <span class="math inline">\(\vec{y}\in\mathbb{S}\)</span>，否则 <span class="math inline">\(\|\vec{y}\|&gt;1\)</span>，令 <span class="math inline">\(\vec{z}=\dfrac{\vec{y}}{\|\vec{y}\|}\)</span>，其范数 <span class="math inline">\(\|\vec{z}\|=1 ,\vec{z}\in\mathbb{S}\)</span>，<span class="math inline">\(f(\vec{y})=f(\|\vec{y}\|\cdot\vec{z})=f(\vec{z})\)</span></p><p>定义映射 <span class="math inline">\(g:\mathbb{S}\longmapsto\mathbb{R},g(\vec{x})=f(\vec{x})\)</span>，由知 <span class="math inline">\(f\)</span> 和 <span class="math inline">\(g\)</span> 的值域相同，且 <span class="math inline">\(g\)</span> 为有界闭集上的连续映射</p><p>从而 <span class="math inline">\(f\)</span> 和 <span class="math inline">\(g\)</span> 都有最大值和最小值 <span class="math inline">\(□\)</span></p><h4 id="设-fxyzdfracx2y3zx2y2z21证明-f-有正的最大值和负的最小值">8、设 <span class="math inline">\(f(x,y,z)=\dfrac{x+2y+3z}{x^2+y^2+z^2+1}\)</span>，证明 <span class="math inline">\(f\)</span> 有正的最大值和负的最小值。</h4><p>证明：令三维欧式空间向量 <span class="math inline">\(\vec{r}=(x,y,z)\)</span>，有 <span class="math display">\[f(x,y,z)=f(\vec{r})=\dfrac{\vec{r}\cdot(1,2,3)}{\|\vec{r}\|^2+1}=\dfrac{\|\vec{r}\|\cdot\sqrt{14}\cos \theta}{\|\vec{r}\|^2+1}\]</span> 由均值不等式 <span class="math inline">\(\dfrac{\|\vec{r}\|}{\|\vec{r}\|^2+1}\leq\dfrac{1}{2}\)</span>，以及 <span class="math inline">\(\cos \theta\in[-1,1]\)</span>，得 <span class="math inline">\(f(\vec{r})\in[-\dfrac{\sqrt{14}}{2},\dfrac{\sqrt{14}}{2}]\)</span> 有界</p><p>而 <span class="math inline">\(f(x,y,z)\)</span> 为连续函数，从而有最值，且当 <span class="math inline">\(x,y,z&gt;0\)</span> 时 <span class="math inline">\(f(x,y,z)&gt;0\)</span>；当 <span class="math inline">\(x,y,z&lt;0\)</span> 时</p><p><span class="math inline">\(f(x,y,z)&lt;0\)</span>，则 <span class="math inline">\(f\)</span> 有正的最大值和负的最小值 <span class="math inline">\(□\)</span></p>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Calculus_A2_notes_Chapter_one（WXF）</title>
    <link href="/2022/02/23/Math/Calculus/Calculus%20A2%20notes%EF%BC%88first%20week%EF%BC%89/"/>
    <url>/2022/02/23/Math/Calculus/Calculus%20A2%20notes%EF%BC%88first%20week%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="微积分笔记第一讲多元函数的连续性">微积分笔记第一讲（多元函数的连续性）</h1><p>函数图像：对应规则，公式，图像（二元函数需要使用三维空间），等值集</p><p>函数值/映射的像可以是数、点、向量等等</p><p>连续性（局部可以使用常值近似），可微性质（局部可以使用线性逼近）</p><p>例：欧式空间 <span class="math inline">\(R^n\)</span> 中三个点 <span class="math inline">\(P_1,P_2,P_3\)</span> 确定的三角形面积函数 <span class="math inline">\(S(P_1,P_2,P_3)\)</span> 多元函数，对内积产生的 <span class="math inline">\(\cos \theta\)</span> 计算 <span class="math display">\[\begin{gathered}S(P_{1}, P_{2}, P_{3})=\frac{1}{2}|P_{2}-P_{1}||P_{3}-P_{1}| \sin \theta=\frac{1}{2}|P_{2}-P_{1}||P_{3}-P_{1}| \sqrt{1-\cos ^{2} \theta} \\=\frac{1}{2}|P_{2}-P_{1}||P_{3}-P_{1}| \sqrt{1-(\frac{(P_{2}-P_{1}) \cdot(P_{3}-P_{1})}{|(P_{2}-P_{1})| \cdot|(P_{3}-P_{1})|})^{2}} \\=\frac{1}{2} \sqrt{\operatorname{det}(\begin{array}{cc}\langle P_{2}-P_{1}, P_{2}-P_{1}\rangle &amp; \langle P_{2}-P_{1}, P_{3}-P_{1}\rangle \\\langle P_{2}-P_{1}, P_{3}-P_{1}\rangle &amp; \langle P_{3}-P_{1}, P_{3}-P_{1}\rangle\end{array})}\end{gathered}\]</span> 使用固定两点，另外一点在一个椭圆上移动可知，当这个点在固定点中垂线上的时候三角形面积最大，有两边长度相等，更换固定点得，<strong>周长一定的三角形为等边三角形时最大</strong>。该论证有一定问题，<strong>没有证明有最大值</strong>的情况。固定 <span class="math inline">\(P_1\)</span> 为原点，考虑所有周长小于等于 <span class="math inline">\(L\)</span> 的集合 <span class="math display">\[K=\{(P_{2}, P_{3}) \in \mathbb{R}^{2} \times \mathbb{R}^{2} \mid\|P_{2}\|+\|P_{3}\|+\|P_{2}-P_{3}\| \leq L\}\]</span> 则 <span class="math inline">\(K\)</span> 是有界闭集，从而 <span class="math inline">\(S(P_{2}, P_{3})\)</span> 在 <span class="math inline">\(K\)</span> 上取得最大值 <span class="math inline">\(S(P_{2}^{*}, P_{3}^{*})\)</span> 。假若 <span class="math display">\[\|P_{2}^{*}\|+\|P_{3}^{*}\|+\|P_{2}^{*}-P_{3}^{*}\|&lt;L\]</span> 取 <span class="math inline">\(\lambda=\dfrac{L}{\|P_{2}^{*}\|+\|P_{3}^{*}\|+\|P_{2}^{*}-P_{3}^{*}\|}, P_{k}^{&#39;}=\lambda P_{k}^{*}\)</span>，显然面积变成原来的 <span class="math inline">\(\lambda^2\)</span> 倍。这与 <span class="math inline">\(S(P_{2}^{*}, P_{3}^{*})\)</span> 是最大值矛盾。因此</p><p><span class="math display">\[\left\|P_{2}^{*}\right\|+\left\|P_{3}^{*}\right\|+\left\|P_{2}^{*}-P_{3}^{*}\right\|=L\]</span> 上标为维数的区分，下标为同一维数不同点的区分，对 <span class="math inline">\(P_{1},P_{2},P_{3}\)</span> 中 <span class="math inline">\(\mathbf x_{1,2,3}^j\)</span> <span class="math display">\[S(P_1,P_2,P_3)=\frac{1}{2} \sqrt{\sum_{1\leq i&lt;j \leq n}\left|\begin{array}{cc}\mathbf x_{2}^{i}-\mathbf x_{1}^{i} &amp; \mathbf x_{3}^{i}-\mathbf x_{1}^{i} \\ \mathbf x_{2}^{j}-\mathbf x_{1}^{i} &amp; \mathbf x_{3}^{j}-\mathbf x_{1}^{j}\end{array}\right|^{2}}=\frac{1}{2} \sqrt{\sum_{1\leq i&lt;j \leq n}\left|\begin{array}{ccc}1&amp;1&amp;1\\ \mathbf x_{1}^{i} &amp; \mathbf x_{2}^{i} &amp; \mathbf x_{3}^{i} \\ \mathbf x_{1}^{j} &amp; \mathbf x_{2}^{j} &amp; \mathbf x_{3}^{j}\end{array}\right|^{2}}\]</span> <strong>（向量值）函数：</strong>映射 <span class="math inline">\(f:A\to R^{\ p}\)</span>，<span class="math inline">\(f(\mathbf x)=(f^1(\mathbf x),f^2(\mathbf x),\cdots,f^p(\mathbf x))\)</span></p><p>其中 <span class="math inline">\(f^{k}:A\to R\)</span> 是函数，将 <span class="math inline">\(f(\mathbf x)\in R^{p}\)</span> 映射后的向量“作用点”附着于<span class="math inline">\(\mathbf x\)</span> 处，称为<strong>数量场</strong>（物理中称为<strong>纯量场</strong>）</p><p><strong>等值集</strong>：<span class="math inline">\(\Sigma_{\mathbf{y}}=f^{-1}(\mathbf{y})=\{\mathbf{\mathbf x} \in A \mid {f(\mathbf{\mathbf x})}=\mathbf{y}\}\)</span></p><p>微积分的一个目标是通过局部线性近似来研究函数，所以需要空间是向量空间（线性空间）或者局部近似的空间（微分流形）</p><p><strong>距离</strong>，满足对称，正定，三角形不等式，可以度量两个点的远近程度。： <span class="math display">\[\begin{gathered}\text { (对称) } \quad d(\mathbf{x}, \mathbf{y})=d(\mathbf{y}, \mathbf{x}) \\\text { (正定) } \quad d(\mathbf{x}, \mathbf{y}) \geq 0, \forall \mathbf{x}, \mathbf{y} \in R^{m}, d(\mathbf{x}, \mathbf{y})=0 \Longleftrightarrow \mathbf{x}=\mathbf{y} \\\text { (三角形不等式) } \quad \forall \mathbf{x}, \mathbf{y}, \mathbf{z} \in R^{m}, d(\mathbf{x}, \mathbf{y}) \leq d(\mathbf{x}, \mathbf{z})+d(\mathbf{z}, \mathbf{y})\end{gathered}\]</span> 若 <span class="math inline">\(d(\mathbf x+\mathbf z,\mathbf y+\mathbf z)=d(\mathbf x,\mathbf y),\forall \mathbf x,\mathbf y,\mathbf z\in R^m\)</span>，称为距离 <span class="math inline">\(d\)</span> 是<strong>平移不变</strong>的</p><p><strong>范数</strong>，满足正定，三角形不等式，正齐次性，范数可以度量向量的“长度”： <span class="math display">\[\begin{gathered}(\text { 正定 }) \quad\|\mathbf{x}\| \geq 0, \forall \mathbf{x} \in R^{m},\|\mathbf{x}\|=0 \Longleftrightarrow \mathbf{x}=0 \\\text { (三角形不等式) } \quad \forall \mathbf{x}, y, z \in R^{m},\|\mathbf{x}+y\| \leq\|\mathbf{x}\|+\|y\| \\\text { (正齐次性) } \quad \forall \mathbf{x} \in R^{m}, \forall \lambda \in R,\|\lambda \mathbf{x}\|=|\lambda|\|\mathbf{x}\|\end{gathered}\]</span> 范数和凸集一一对应 <span class="math inline">\(\{x\mid \|x\|\leq 1\}\Longleftrightarrow 凸\)</span></p><p><strong>内积</strong>，满足对称，正定，双线性： <span class="math display">\[\begin{gathered}\text { (对称) } \quad\langle\mathbf{x}, \mathbf{y}\rangle=\langle\mathbf{y}, \mathbf{x}\rangle \\\text { (正定) } \quad\langle\mathbf{x}, \mathbf{x}\rangle \geq 0, \forall x \in R^{m},\langle\mathbf{x}, \mathbf{x}\rangle=0 \Longleftrightarrow \mathbf{x}=0 \\\text { (双线性) } \quad \forall \mathbf{x}, \mathbf{y}, \mathbf{z} \in R^{m},\langle\lambda \mathbf{x}+\mu \mathbf{y}\rangle=\lambda\langle\mathbf{x}\rangle+\mu\langle\mathbf{y}\rangle\end{gathered}\]</span> 代表方向长度，可以计算面积体积之类的度量</p><p><strong>p-范数</strong>：<span class="math inline">\(\displaystyle \|\mathbf{\mathbf x}\|_{p}=\left(\sum_{i=1}^{m}\left|\mathbf x^{i}\right|^{p}\right)^{\frac{1}{p}}\)</span>，对应可以定义一个平移不变的距离 <span class="math inline">\(\displaystyle \|d_{p}(\mathbf x,\mathbf y)\|=\left(\sum_{i=1}^{m}\left|\mathbf x^{i}-\mathbf y^{i}\right|^{p}\right)^{\frac{1}{p}}\)</span>，当</p><p><span class="math inline">\(p=2\)</span> 时，为欧几里得距离；当 <span class="math inline">\(p=1\)</span> 时为<strong>曼哈顿距离</strong>或<strong>出租车距离</strong>；当 <span class="math inline">\(p\to +\infty\)</span> 时，</p><p><span class="math inline">\(d_{p}(\mathbf x,\mathbf y)\to \underset{1\leq i\leq m}{max}|{\mathbf x^i-\mathbf y^i}|=d_{\infty}(\mathbf x,\mathbf y)\)</span>，对范数也可定义无穷范数 <span class="math inline">\(\|\mathbf x\|_{\infty}=\underset{1\leq i\leq m}{\max}|x^{i}|\)</span></p><p>图一展示了 <span class="math inline">\(p\geq 1\)</span> 的情形，对应凸集；图二展示了 <span class="math inline">\(p&lt;1\)</span> 的情形，对应凹集</p><p><img src="https://pic.imgdb.cn/item/6216283c2ab3f51d91032dd2.jpg" title="图一" style="zoom:45%;" /><img src="https://pic.imgdb.cn/item/621349b82ab3f51d91dbbfb3.png" title="图二" style="zoom:33%;" /></p><p><span class="math inline">\(\|\mathbf{\mathbf x}\|_{\infty} \leq\|\mathbf{\mathbf x}\|_{p} \leq m^{\frac{1}{p}}\|\mathbf{\mathbf x}\|_{\infty}\)</span>，在有限维空间下，对 <span class="math inline">\(R^m\)</span> 的任意范数均有 <span class="math display">\[\begin{aligned}\|\mathbf{\mathbf x}\| &amp;=\left\|\mathbf x^{1} \mathbf{e}_{1}+\cdots+\mathbf x^{m} \mathbf{e}_{m}\right\| \leq \left|\mathbf x^{1}\right|\left\|\mathbf{e}_{1}\right\|+\cdots+\left|\mathbf x^{m}\right|\left\|\mathbf{e}_{m}\right\| \\ &amp; \leq \max_{1\leq k \leq m}\left|\mathbf x^{k}\right|\left(\left\|\mathbf{e}_{1}\right\|+\cdots+\left\|\mathbf{e}_{m}\right\|\right|=M\|\mathbf{\mathbf x}\|_{\infty} . \end{aligned}\]</span> 则通过 <span class="math inline">\(\mbox{Cauchy}\)</span> 收敛准则可知，在 <span class="math inline">\(\mathbb{R}^{m}\)</span> 中，有界，收敛，极限这些概念与范数的选取无关。可以任意选取范数验证相关 <span class="math inline">\(\epsilon -\delta\)</span> 语言</p><p><strong>多元函数连续</strong>：设 <span class="math inline">\(E\subseteq R^m,\forall \ \epsilon &gt;0,\exists \ \delta_{\epsilon}&gt;0,s.t.\mathbf x\in E,\|\mathbf x-\mathbf a\|&lt;\delta_{\epsilon}\Longrightarrow \|f(\mathbf x)-f(\mathbf a)|&lt;\epsilon\)</span></p><p>则称 <span class="math inline">\(f:E\to R^n\)</span> 在 <span class="math inline">\(\mathbf a\in E\)</span> 处连续</p><p>常值映射，两个连续函数的复合映射，线性映射，<span class="math inline">\(k-\)</span>重线性映射都是连续映射</p><p>例：<strong>任何双线性映射 <span class="math inline">\(B\)</span>：<span class="math inline">\(\mathbb{R}^{m} \times \mathbb{R}^{n} \rightarrow \mathbb{R}^{p}\)</span> 都是连续映射</strong>。对两空间的基底和多元函数放缩得 <span class="math display">\[\begin{aligned}\|B(\mathbf{x}, \mathbf{y})\| &amp;=\left\|\sum_{i, j} x^{i} y^{j} B\left(\mathbf{e}_{i}, \mathbf{f}_{j}\right)\right\| \leq \sum_{i, j} \mid x^{i}\left\|y^{j}\right\| B\left(\mathbf{e}_{i}, \mathbf{f}_{j}\right) \| \\ &amp; \leq\|\mathbf{x}\|_{\infty}\|\mathbf{y}\|_{\infty} \sum_{i, j}\left\|B\left(\mathbf{e}_{i}, \mathbf{f}_{j}\right)\right\|=M\|\mathbf{x}\|_{\infty}\|\mathbf{y}\|_{\infty} \end{aligned}\]</span> 从而替换为无穷范数得 <span class="math display">\[\begin{aligned}&amp;\left\|B(\mathbf{x}, \mathbf{y})-B\left(\mathbf{x}_{0}, \mathbf{y}_{0}\right)\right\| \\\leq &amp;\left\|B\left(\mathbf{x}-\mathbf{x}_{0}, \mathbf{y}-\mathbf{y}_{0}\right)\right\|+\left\|B\left(\mathbf{x}-\mathbf{x}_{0}, \mathbf{y}_{0}\right)\right\|+\left\|B\left(\mathbf{x}_{0}, \mathbf{y}-\mathbf{y}_{0}\right)\right\| \\\leq &amp; M\left(\left\|\mathbf{x}-\mathbf{x}_{0}\right\|_{\infty}\left\|\mathbf{y}-\mathbf{y}_{0}\right\|_{\infty}+\left\|\mathbf{x}-\mathbf{x}_{0}\right\|_{\infty}\left\|\mathbf{y}_{0}\right\|_{\infty}+\left\|\mathbf{x}_{0}\right\|_{\infty}\left\|\mathbf{y}-\mathbf{y}_{0}\right\|_{\infty}\right) .\end{aligned}\]</span> 对任意 <span class="math inline">\(\varepsilon&gt;0\)</span>, 当 <span class="math display">\[\max \left\{\left\|\mathbf{x}-\mathbf{x}_{0}\right\|_{\infty},\left\|\mathbf{y}-\mathbf{y}_{0}\right\|_{\infty}\right\}&lt;\frac{\varepsilon}{\varepsilon+3 M\left(1+\left\|\mathbf{y}_{0}\right\|_{\infty}+\left\|\mathbf{x}_{0}\right\|_{\infty}\right)}\]</span> 时, <span class="math inline">\(\left\|B(\mathbf{x}, \mathbf{y})-B\left(\mathbf{x}_{0}, \mathbf{y}_{0}\right)\right\|&lt;\varepsilon_{0}\)</span> 所以 <span class="math inline">\(B\)</span> 是连续映射。</p><p><strong>有界闭集上的连续映射</strong>：称 <span class="math inline">\(E \subseteq \mathbb{R}^{m}\)</span> 是一个闭子集, 如果点列 <span class="math inline">\(\left\{\mathbf {x}_{n}\right\}\)</span> 满足对任意 <span class="math inline">\(n \geq 1\)</span>, <span class="math inline">\(\mathbf{x}_{n} \in E\)</span>, 且 <span class="math inline">\(\lim\limits_{n\to+\infty}\mathbf{x}_{n}=\mathbf{x}^{*}\)</span>, 则 <span class="math inline">\(\mathbf{x}^{*} \in E\)</span> 。(E对极限封闭)</p><p>对称线性变换的特征值和特征向量，<strong>对称</strong>：<span class="math inline">\(\langle Ax,y \rangle=\langle x,Ay \rangle\)</span>（内积可置换性）</p><p><span class="math inline">\(\mathbf{v}_1\)</span> 对应最大值，任取与 <span class="math inline">\(\mathbf{v}_1\)</span> 正交的单位向量 <span class="math inline">\(\mathbf{u}\in K\)</span>，则考虑 <span class="math inline">\(g(\theta)=f(\cos \theta\mathbf{v}_1+\sin \theta\mathbf{u})\)</span> <span class="math display">\[\begin{aligned}g(\theta) &amp;=\left\langle A\left(\cos \theta \mathbf{v}_{1}+\sin \theta \mathbf{u}\right), \cos \theta \mathbf{v}_{1}+\sin \theta \mathbf{u}\right\rangle \\&amp;=\cos ^{2} \theta f\left(\mathbf{v}_{1}\right)+\sin ^{2} \theta f(\mathbf{u})+2 \sin \theta \cos \theta\left\langle A \mathbf{v}_{1}, \mathbf{u}\right\rangle \\&amp;=g(0)+2 \theta\left\langle A \mathbf{v}_{1}, \mathbf{u}\right\rangle+o(\theta), \quad \theta \rightarrow 0\end{aligned}\]</span> <span class="math inline">\(g&#39;(0)=2\langle A \mathbf{v}_{1}, \mathbf{u}\rangle=0\)</span></p><p>由于行列式函数连续，从而对任意可逆实数方阵 <span class="math inline">\(A\)</span>，总存在 <span class="math inline">\(\delta(A)&gt;0\)</span>，当 <span class="math inline">\(\|A-B\|&lt;\delta\)</span> 时，<span class="math inline">\(B\)</span> 也可逆</p><p>对行列式函数是连续的，非零量“微扰”后也为非零量，进而可逆</p><p>压缩映射原理（地图纸和现实世界存在唯一的点恰好不动）：设 <span class="math inline">\(E \subseteq \mathbb{R}^{m}\)</span> 是一个闭子集, 映射 <span class="math inline">\(f: E \rightarrow \mathbb{R}^{m}\)</span> 满足 <span class="math inline">\(f(E) \subseteq E\)</span>, 且存在常数 <span class="math inline">\(0&lt;\lambda&lt;1\)</span> 使得 <span class="math display">\[\|f(\mathbf{x})-f(\mathbf{y})\| \leq \lambda\|\mathbf{x}-\mathbf{y}\|, \quad \forall\  \mathbf{x}, \mathbf{y} \in E .\]</span> 则存在唯一的 <span class="math inline">\(\mathbf{x}^{*} \in E\)</span> 使得: <span class="math inline">\(f\left(\mathbf{x}^{*}\right)=\mathbf{x}^{*}\)</span>, 且对任意 <span class="math inline">\(\mathbf{x} \in E\)</span>, 迭代点列 <span class="math inline">\(\mathbf{x}_{n}=f^{n}(\mathbf{x})\)</span> 收敛到 <span class="math inline">\(\mathbf{x}^{*}\)</span> <span class="math display">\[\begin{aligned}\left\|\mathbf{x}_{n+p}-\mathbf{x}_{n}\right\| &amp; \leq \sum_{k=1}^{p}\left\|\mathbf{x}_{n+k}-\mathbf{x}_{n+k-1}\right\| \leq \sum_{k=1}^{p} \lambda^{n+k-1}\|f(\mathbf{x})-\mathbf{x}\|\leq \frac{\lambda^{n}}{1-\lambda}\|f(\mathbf{x})-\mathbf{x}\|\end{aligned}\]</span> 所以 <span class="math inline">\(\left\{\mathbf{x}_{n}\right\}\)</span> 是 Cauchy 列, 从而存在 <span class="math inline">\(\mathbf{x}^{*} \in \mathbb{R}^{m}\)</span> 使得 <span class="math inline">\(\lim\limits_{n \rightarrow+\infty} \mathbf{x}_{n}=\mathbf{x}^{*}\)</span> 。 因为 <span class="math inline">\(E\)</span> 是闭集, 所以 <span class="math inline">\(\mathbf{x}^{*} \in E\)</span> 。 <span class="math display">\[\begin{aligned}\left\|f\left(\mathbf{x}^{*}\right)-\mathbf{x}^{*}\right\| &amp; \leq\left\|f\left(\mathbf{x}^{*}\right)-f\left(\mathbf{x}_{n}\right)\right\|+\left\|f\left(\mathbf{x}_{n}\right)-\mathbf{x}^{*}\right\| \\&amp; \leq \lambda\left\|\mathbf{x}^{*}-\mathbf{x}_{n}\right\|+\left\|\mathbf{x}_{n+1}-\mathbf{x}^{*}\right\| \rightarrow 0, \quad n \rightarrow+\infty\end{aligned}\]</span> 所以 <span class="math inline">\(f\left(\mathbf{x}^{*}\right)=\mathbf{x}^{*}\)</span> 。让最初的不等式中 <span class="math inline">\(p \rightarrow+\infty\)</span>, 得到 <span class="math display">\[\left\|\mathbf{x}^{*}-\mathbf{x}_{n}\right\| \leq \frac{\lambda^{n}}{1-\lambda}\|f(\mathbf{x})-\mathbf{x}\|_{\circ}\]</span> 证明<strong>矩阵求逆是连续映射</strong>：</p><blockquote><p>引理：只要 <span class="math inline">\(\|B\|&lt;1\)</span>，有 <span class="math inline">\(I-B\)</span> 可逆，且有 <span class="math inline">\(\|(I-B)^{-1}-I\|\leq \dfrac{\|B\|}{1-\|B\|}\)</span></p><p>对 <span class="math inline">\((I-B)(I+C)=I\Longrightarrow C=B+BC\)</span>，考虑映射 <span class="math inline">\(f(C)=B+BC\)</span>，其满足压缩映射（<span class="math inline">\(\|B\|=\lambda&lt;1\)</span>） <span class="math display">\[\|f(C_1)-f(C_2)\|=\|B(C_1-C_2)\|\leq \|B\|\|C_1-C_2\|\]</span> 从而 <span class="math inline">\(\exists\ ! \ C_0,s.t.C=B+BC\)</span>，<span class="math inline">\(I-B\)</span> 可逆，且有 <span class="math display">\[\begin{gathered}\|C\|=\|B+BC\|\leq \|B\|\|I+C\|\leq\|B\|(1+\|C\|)\quad\\ \|(I-B)^{-1}-I\|\leq \dfrac{\|B\|}{1-\|B\|}\therefore\ A\ 可逆\ \mbox{and}\  \|\small \Delta \normalsize A\|&lt;\dfrac{1}{\|A^{-1}\|}\Longrightarrow A+\small \Delta \normalsize A\ 可逆\end{gathered}\]</span></p></blockquote><p>对于小扰动，总能被 <span class="math inline">\(\|\small \Delta \normalsize A\|\)</span> 控制，从而求逆是连续映射 <span class="math display">\[\begin{gathered}\left\|(A+\Delta A)^{-1}-A^{-1}\right\|=\left\|\left(I+A^{-1} \Delta A\right)^{-1} A^{-1}-A^{-1}\right\| \\ \leq\left\|A^{-1}\right\|\left\|\left(I+A^{-1} \Delta A\right)^{-1}-I\right\|\leq \frac{\left\|A^{-1}\right\|^{2}\|\Delta A\|}{1-\left\|A^{-1}\right\|\|\Delta A\|}\end{gathered}\]</span> <strong>道路连通集</strong>：对任意 <span class="math inline">\(\mathbf{x}, \mathbf{y} \in E\)</span>, 存在连续映射 <span class="math inline">\(f:[0,1] \rightarrow \mathbb{R}^{m}\)</span> 使得 <span class="math inline">\(f(0)=\mathbf{x}, f(1)=\mathbf{y}\)</span>, 且对任意 $0 t , f(t) E $，下图均为道路连通集</p><p>​ <img src="https://pic.imgdb.cn/item/6215cc2f2ab3f51d9124d06a.jpg" style="zoom:50%;" /> <img src="https://pic.imgdb.cn/item/6215cb562ab3f51d9122e1d1.png" style="zoom:50%;" /></p><p>例：<span class="math inline">\(m\)</span> 阶可逆矩阵的全体不是道路连通的。由于 <span class="math inline">\(\det\)</span> 是连续函数，有 <span class="math inline">\(\det I=1,\det (-\mathbf{e}_1,\mathbf{e}_2,\cdots,\mathbf{e}_m)=-1\)</span></p><p>两者一定经过 <span class="math inline">\(0\)</span>（不可逆），从而不是连续函数</p><p>对平面上的点，使用字典序 <span class="math inline">\(\begin{cases}x_1&gt;x_2\\y_1&gt;y_2,\mbox{when}\  x_1=x_2\end{cases}\)</span>，<span class="math inline">\(Abel&gt;Direclet\)</span></p><p>二维或者更高维数线性空间中不存在一个全序，使得它空间中由范数给出的拓扑相容。只有一维数轴是满足的。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elementary number theory homework one</title>
    <link href="/2022/02/22/Math/Elementary%20number%20theory/Elementary%20number%20theory%20homework%201/"/>
    <url>/2022/02/22/Math/Elementary%20number%20theory/Elementary%20number%20theory%20homework%201/</url>
    
    <content type="html"><![CDATA[<h1 id="largetextcolorblue初等数论第一次作业-_textcolorblue2022.2.22"><span class="math inline">\(\large\textcolor{blue}{初等数论第一次作业}\ \ \ \ \ \ _\textcolor{blue}{2022.2.22}\)</span></h1><h2 id="习题-1.1">习题 1.1</h2><h3 id="section">1</h3><p>证明：由 <span class="math inline">\(n\)</span> 是奇数，则令 <span class="math inline">\(n=2k+1\)</span>，有 <span class="math inline">\(n^2-1=(2k+1)^2-1=4k(k+1)\)</span>，由于 <span class="math inline">\(k\)</span> 和 <span class="math inline">\(k+1\)</span> 一奇一偶，从而 <span class="math inline">\(2\mid k(k+1)\)</span>，则 <span class="math inline">\(8\mid n^2-1\)</span></p><h3 id="section-1">2</h3><p>证明：由 <span class="math inline">\(n\in \mbox{odd}\)</span> 则可以依次首尾相加得到 <span class="math display">\[1+\dfrac{1}{2}+\cdots+\dfrac{1}{n-1}=(1+\dfrac{1}{n-1})+(\dfrac{1}{2}+\dfrac{1}{n-2})+\cdots+(\dfrac{1}{\dfrac{n-1}{2}}+\dfrac{1}{\dfrac{n+1}{2}})\\=n\cdot(\dfrac{1}{1\cdot(n-1)}+\dfrac{1}{2\cdot(n-2)}+\cdots+\dfrac{1}{\dfrac{n-1}{2}\cdot\dfrac{n+1}{2}})\]</span> 而 <span class="math inline">\((n-1)!\)</span> 均有 <span class="math inline">\(1,2,\cdots,n-1\)</span> 的因子，从而 <span class="math inline">\(n\mid (1+\dfrac{1}{2}+\cdots+\dfrac{1}{n-1})(n-1)!\)</span></p><h3 id="section-2">3</h3><blockquote><p>引理 <span class="math inline">\(1.1.1\)</span> <span class="math inline">\(q\in Z,x-1\mid x^{q}-1\)</span>，这是由于 <span class="math inline">\(1+x+\cdots+x^{q-1}=\dfrac{x^{q}-1}{x-1}\in Z\)</span></p></blockquote><p>证明：显然当 <span class="math inline">\(m&gt;n\)</span> 时结论不成立，假设结论不成立 <span class="math inline">\(2^{m}-1\mid 2^{n}+1\)</span>，由带余除法定理有 <span class="math inline">\(n=mq+r,r&lt;m\)</span> <span class="math display">\[\because 2^{n}+1=2^{mq+r}+1=2^{r}\cdot (2^{mq}-1)+2^{r}+1,2^{m}-1\mid 2^{mq}-1\\\therefore 2^{m}-1\mid 2^{r}+1\ 而\ r&lt;m,2^{m}-1&gt;2^{r}+1\Longleftrightarrow 2^{m}&gt;2^{r}+2\Longleftrightarrow 2^{m}-2^{r}&gt;2^{m-1}\geq4&gt;2 \]</span> 从而假设不成立，<span class="math inline">\(2^{m}-1\nmid 2^{n}+1\)</span></p><h3 id="section-3">4</h3><p>证明：<span class="math inline">\((i)\)</span> 带余除法定理令 <span class="math inline">\(n=b_0+m_1q,0\leq b_0\leq q-1\)</span>，对 <span class="math inline">\(m_i\)</span> 重复上述步骤有 <span class="math display">\[m_1=b_1+m_2q,0\leq b_1\leq q-1\cdots ,m_k=b_k,0\leq b_k\leq q-1\]</span> 则回代得到 <span class="math inline">\(n=b_0+q(b_1+q(b_2+\cdots+(b_k)))\)</span>，展开得到 <span class="math inline">\(n=a_0+a_1q+\cdots+a_kq^k\)</span></p><p>唯一性的证明：若有两种表示方法 <span class="math inline">\(n=a_0+a_1q+\cdots+a_kq^k=c_0+c_1q+\cdots+c_kq^k\)</span>，有 <span class="math inline">\(q\mid a_0-c_0\)</span>，则由于 <span class="math inline">\(0\leq a_0,c_0\leq q-1\)</span> 得 <span class="math inline">\(a_0=c_0\)</span>，代入消去有 <span class="math inline">\(a_1+a_2q+\cdots+a_kq^k=c_1+c_2q+\cdots+c_kq^k\)</span>，同理有 <span class="math inline">\(a_i=c_i\)</span>，则表示方法唯一</p><p><span class="math inline">\((ii)\)</span> 由 <span class="math inline">\((i)\)</span> 中表示有 <span class="math inline">\(n=a_0+a_1q+\cdots+a_kq^k\)</span>，两边除以 <span class="math inline">\(q^{i}\)</span> 有 <span class="math display">\[\dfrac{n}{q^{i}}=\dfrac{a_0}{q^{i}}+\dfrac{a_1}{q^{i-1}}+\cdots a_i+a_{i+1}q+a_{i+2}q^2+\cdots+a_{k}q^{k-i}\]</span> 由 <span class="math inline">\(0\leq a_i\leq q-1\)</span> 且有取整函数的定义可知 <span class="math inline">\([\dfrac{n}{q^{i}}]=a_i+a_{i+1}q+a_{i+2}q^2+\cdots+a_{k}q^{k-i}\)</span></p><p>除以 <span class="math inline">\(q^{i+1}\)</span> 重复上述步骤得 <span class="math inline">\([\dfrac{n}{q^{i+1}}]=a_{i+1}+a_{i+2}q+\cdots+a_{k}q^{k-i-1}\)</span>，比对上述两式得 <span class="math inline">\(a_i=[\dfrac{n}{q^{i}}]-q[\dfrac{n}{q^{i+1}}]\)</span></p><h3 id="section-4">5</h3><p>证明：记 <span class="math inline">\(\alpha_i=[\alpha_i]+\{\alpha_i\},\forall \ x\in R,\{x\}\in[0,1)\)</span>，从而有 <span class="math inline">\(\displaystyle [\sum_{i=1}^n\alpha_i]=\sum_{i=1}^n[\alpha_i]+[\sum_{i=1}^{n}\{\alpha_i\}]\geq\sum_{i=1}^n[\alpha_i]\)</span></p><p>而 <span class="math inline">\(\displaystyle [\sum_{i=1}^{n}\{\alpha_i\}]&lt;[\sum_{i=1}^{n}1]=n\)</span>，由取整特性 <span class="math inline">\(\displaystyle [\sum_{i=1}^{n}\{\alpha_i\}]\leq n-1\)</span>，则 <span class="math inline">\(\displaystyle\sum_{i=1}^n[\alpha_i]\leq [\sum_{i=1}^n\alpha_i]\leq \displaystyle\sum_{i=1}^n[\alpha_i]+n-1\)</span></p><h3 id="section-5">11</h3><p>证明：反证法，若 <span class="math inline">\(n\)</span> 为合数，则 <span class="math inline">\(n\)</span> 有素因子 <span class="math inline">\(q\)</span>，则 <span class="math inline">\(n=mq,m,q\in Z\)</span>，由于 <span class="math inline">\(n\)</span> 没有 <span class="math inline">\(\leq\sqrt{n}\)</span> 的素数因子 <span class="math display">\[\therefore m,q&gt;\sqrt{n},mq&gt;n\]</span> 与假设矛盾，从而 <span class="math inline">\(n\)</span> 为素数</p><h3 id="section-6">12</h3><p>证明：反证法，假设 <span class="math inline">\(n\)</span> 和 <span class="math inline">\(n!\)</span> 之间全为合数，则 <span class="math inline">\(n!-1\)</span> 为合数，其一定有素数因子，由假设知 <span class="math inline">\(n+1，n+2,\cdots,n!\)</span> 全为合数，不可能是 <span class="math inline">\(n!-1\)</span> 的素数因子，另一方面，<span class="math inline">\(\forall \ n\geq a\geq 2,a\mid n!\)</span>，从而 <span class="math display">\[P=\{p\mid p\in[2,n]\ \cap\ \mbox{p is prime} \},\forall \ x\in P,x\nmid n!-1\]</span> 则 <span class="math inline">\(n!-1\)</span> 没有小于其自身的素数因子，从而 <span class="math inline">\(n!-1\)</span> 为素数，与假设矛盾，从而 <span class="math inline">\(n\)</span> 和 <span class="math inline">\(n!\)</span> 之间一定有素数</p><p>从 <span class="math inline">\(3\)</span> 开始， <span class="math inline">\((3,3!)\)</span> 之间有素数，<span class="math inline">\((3!,(3!)!)\)</span> 之间有素数，进而构造数列 <span class="math display">\[a_1=3,a_{n+1}=a_n!\]</span> 有 <span class="math inline">\((a_n,a_{n+1})\)</span> 之间必有素数，且区间之间无交集，将自然数集分成无穷多个区间，从而有无穷多个素数</p><h2 id="习题1.2">习题1.2</h2><h3 id="section-7">1</h3><p>证明：反证法，假设 <span class="math inline">\(\dfrac{21n+4}{14n+3}\)</span> 不是既约分数，则 <span class="math inline">\(21n+4\)</span> 和 <span class="math inline">\(14n+3\)</span> 有共同素因子 <span class="math inline">\(d\)</span> ，即 <span class="math display">\[\because (21n+4,14n+3)=d,21n+4=dm,14n+3=dn\\\therefore 3\cdot dn-2\cdot dm=42n+9-(42n+8)=1=d(3n-2m)\]</span> 而 <span class="math inline">\(d\)</span> 为大于 <span class="math inline">\(1\)</span> 的素因子，<span class="math inline">\(1\nmid d\)</span>，从而与假设矛盾，则 <span class="math inline">\(\dfrac{21n+4}{14n+3}\)</span> 是既约分数</p><h3 id="section-8">2</h3><p>证明：令 <span class="math inline">\((2^{m}-1,2^{n}+1)=d\)</span>，且有 <span class="math inline">\(2^{m}-1=dx,2^{n}+1=dy,x,y\in Z\)</span>，<span class="math inline">\(d\)</span> 为奇数 <span class="math display">\[\because 2^m=dx+1,2^n=dy-1\ \therefore 2^{mn}=(dx+1)^{n}=(dy-1)^m\]</span> 将其二项式展开有 <span class="math inline">\(\displaystyle \sum_{i=0}^nC_n^i(dx)^i=\sum_{i=0}^mC_m^i(dy)^i(-1)^{m-i}\)</span>，两边同时除以 <span class="math inline">\(d\)</span> 得到 <span class="math display">\[\displaystyle \sum_{i=1}^nC_n^id^{i-1}x^{i}+\dfrac{1}{d}=\sum_{i=1}^mC_m^id^{i-1}y^i(-1)^{m-i}+(-1)^m\cdot d^{-1}\]</span> 由于 <span class="math inline">\(m\)</span> 是奇数，若 <span class="math inline">\(d\geq 3\)</span>，两边取整有 <span class="math inline">\(\dfrac{1}{d}=1-\dfrac{1}{d}\)</span>，矛盾，从而 <span class="math inline">\(d=1\)</span></p><h3 id="section-9">3</h3><p>证明：令 <span class="math inline">\((m,n)=d\)</span>，且有 <span class="math inline">\(m=dx,n=dy,(x,y)=1\)</span>，由引理 <span class="math inline">\(1.1.1\)</span> 知 <span class="math display">\[a^{d}-1\mid a^{dx}-1,\ a^{dx}-1=(a^d-1)\cdot(1+a^d+a^{2d}+\cdots+a^{(x-1)d})\\a^{d}-1\mid a^{dy}-1,\ a^{dy}-1=(a^d-1)\cdot(1+a^d+a^{2d}+\cdots+a^{(y-1)d}),\\\]</span> 考虑辗转相除法，不妨设 <span class="math inline">\(x&gt;y\)</span>， <span class="math display">\[1+a^d+a^{2d}+\cdots+a^{(x-1)d}=a^{(x-y)d}(1+a^d+a^{2d}+\cdots+a^{(y-1)d})+1+a^d+a^{2d}+\cdots+a^{(x-y-1)d}\]</span> 继续判断 <span class="math inline">\(x\)</span> 和 <span class="math inline">\(y\)</span> 的大小关系，辗转相除，而 <span class="math inline">\((x,y)=1\)</span>，则 <span class="math display">\[(1+a^d+a^{2d}+\cdots+a^{(x-1)d},1+a^d+a^{2d}+\cdots+a^{(y-1)d})=1\]</span> 从而 <span class="math inline">\(a^{d}-1=a^{(m,n)}-1\)</span> 即为 <span class="math inline">\(a^{m}-1\)</span> 和 <span class="math inline">\(a^{n}-1\)</span> 的最大公因数</p>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>初等数论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>初等数论作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ComputerSystem note for the first class</title>
    <link href="/2022/02/21/Computer%20system%20note%EF%BC%88first%20week%EF%BC%89/"/>
    <url>/2022/02/21/Computer%20system%20note%EF%BC%88first%20week%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="classification-of-cs">Classification of CS</h1><ul><li>Theory</li><li>Algorithms for specific area</li><li>Build systems: hackers trying to write interesting software</li></ul><h2 id="problems-occured">Problems occured</h2><p><strong>Emergent properties</strong>: when combined together, problem exists. <span class="math inline">\(112bytes\to250bytes\)</span></p><p><strong>Propagation of Effects</strong>: Small mistake effect the whole.</p><p><strong>Incommensurate Scaliing</strong>: Non-linear extension. Equaling enlarge the animal is wrong. Ipv4-&gt;Ipv6</p><p><strong>Trade-offs</strong>: Waterbed effect</p><h2 id="solutions">Solutions</h2><ol type="1"><li><strong>Modularity</strong>: <span class="math inline">\(\mbox{Bugcount}\sim N,\mbox{Dugtime}\sim N^2\)</span>，</li></ol><p>if have <span class="math inline">\(k\)</span> modules, then <span class="math inline">\(\mbox{Bugtime }\sim(\dfrac{N}{k})^2\cdot k=\dfrac{N^2}{k}\)</span></p><ol start="2" type="1"><li><p><strong>Abstraction</strong>: <span class="math inline">\(\begin{cases}natural\  and\  effective\\fewer \ interactions\end{cases}\)</span> strong boundaries. E.g: OOP, Client and service, Virtualization</p></li><li><p><strong>Layering</strong>: only interact with the same layer and the layer under or on it. OSI seven layers <span class="math inline">\(\to\)</span> TCP/IP</p></li></ol><p>CPU,Chip <span class="math inline">\(\to\)</span> ISA <span class="math inline">\(\to\)</span> Software <span class="math inline">\(\large \mbox{decouple}\)</span></p><ol start="4" type="1"><li><strong>Hierachy</strong>: small systems make up the larger one.</li></ol><p>Design for iteration</p><p>Waterfall to Agile model</p><p><strong>麻省理工法（好事）</strong>：简化、正确、持续、完整，样样都好 <span class="math inline">\(LISP\)</span> 系统，大型系统、“宝石”系统</p><p><strong>新泽西方法（坏事亦好）</strong>：<span class="math inline">\(\large\begin{cases}简洁:\ 实现&gt;连接\\正确性: \ 简洁&gt;准确\\持续:\ 简洁&gt;持续,\ 减少引入不常见情形\\完整:\ 简洁&gt;完整,(\ \exists \ 简洁\ )\ 完整&gt;持续\end{cases}\)</span> <span class="math inline">\(\mbox{Unix}/C\)</span> 为典型，<strong>通用性</strong>强</p><p>对于 <span class="math inline">\(PC\)</span> 机故障，<span class="math inline">\(MIT\)</span> 工程师函数实现简单，连接困难；<span class="math inline">\(Unix\)</span> 工程师采用随机报错的方式解决问题</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>计算机系统研讨</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机系统研讨笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Calculus-A2-homework-for-Chapter-one（made in winter vacation in 2022）</title>
    <link href="/2022/02/20/Math/Calculus/Calculus%20A2%20homework%20for%20Chapter%20one%EF%BC%88made%20in%20winter%20vacation%EF%BC%89/"/>
    <url>/2022/02/20/Math/Calculus/Calculus%20A2%20homework%20for%20Chapter%20one%EF%BC%88made%20in%20winter%20vacation%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="微积分wxf第一章作业">微积分WXF第一章作业</h1><h2 id="习题1.7">习题1.7</h2><h4 id="section">1(1)</h4><p>解：抛物面方程 <span class="math inline">\(f(x,y,z)=x^2+y^2-z=0\)</span> 求其一阶偏导得到切平面方程 <span class="math display">\[z=5+\dfrac{\partial z}{\partial x}(x-1)+\dfrac{\partial z}{\partial y}(y-2)=5+2(x-1)+4(y-2)=2x+4y-5\]</span> 法线方程为 <span class="math display">\[\dfrac{x-1}{2}=\dfrac{y-2}{4}=\dfrac{z-5}{-1}\]</span> #### 1(2)</p><p>解：曲面方程 <span class="math inline">\(f(x,y,z)=(2a^2-z^2)x^2-a^2y^2=0\)</span>，代入一阶导得切平面方程 <span class="math display">\[\dfrac{\partial f}{\partial x}(x-a)+\dfrac{\partial f}{\partial y}(y-a)+\dfrac{\partial f}{\partial z}(z-a)=2a^3(x-a)-2a^3(y-a)-2a^3(z-a)=0\]</span> 整理得 <span class="math inline">\(x-y-z+a=0\)</span> 为切平面方程，法线方程为</p><p><span class="math display">\[\dfrac{x-a}{1}=\dfrac{y-a}{-1}=\dfrac{z-a}{-1}\]</span></p><h4 id="section-1">1(5)</h4><p>解：对于 <span class="math inline">\(u,v\)</span> 两个参数求偏导得对应参数切向量 <span class="math display">\[\vec{l}_u=(\dfrac{\partial x}{\partial u},\dfrac{\partial y}{\partial u},\dfrac{\partial z}{\partial u})=(1,2u,3u^2)=(1,2,3)\\\vec{l}_v=(\dfrac{\partial x}{\partial v},\dfrac{\partial y}{\partial v},\dfrac{\partial z}{\partial v})=(1,2v,3v^2)=(1,4,12)\\\]</span> 从而法向量为 <span class="math inline">\(\vec{n}=\vec{l}_u\times \vec{l}_v=(12,-9,2)\)</span>，故法平面方程 <span class="math display">\[12(x-2)-9(y-5)+2(z-9)=0\]</span> 法线方程 <span class="math display">\[\dfrac{x-2}{12}=\dfrac{y-5}{-9}=\dfrac{z-9}{2}\]</span></p><h4 id="section-2">5</h4><p>解：对两个曲面 <span class="math inline">\(f(x,y,z)=x^2+y^2+z^2-6=0\)</span> 和 <span class="math inline">\(g(x,y,z)=x+y+z=0\)</span> 分别求解法向量 <span class="math display">\[\vec{n}_1=(\dfrac{\partial f}{\partial x},\dfrac{\partial f}{\partial y},\dfrac{\partial f}{\partial z})=(2x,2y,2z)=(2,-4,2)\\\vec{n}_2=(\dfrac{\partial g}{\partial x},\dfrac{\partial g}{\partial y},\dfrac{\partial g}{\partial z})=(1,1,1)\]</span> 从而曲线的切线方向向量和切平面的法向量均为 <span class="math display">\[\vec{n}=\vec{l}=\vec{n}_1\times\vec{n}_2=(-6,0,6)\]</span> 则切线方程为 <span class="math inline">\(\dfrac{x-1}{1}=\dfrac{z-1}{-1},y=-2\)</span>，切平面为 <span class="math inline">\(-(x-1)+(z-1)=0\)</span>，即 <span class="math inline">\(x=z\)</span></p><h4 id="section-3">7</h4><p>证明：曲面 <span class="math inline">\(f(x,y,z)=0\)</span> 在 <span class="math inline">\((x_0,y_0,z_0)\)</span> 处单位法向量 <span class="math display">\[\vec{n_0}=\dfrac{(\dfrac{\partial f}{\partial x},\dfrac{\partial f}{\partial y},\dfrac{\partial f}{\partial z})}{\sqrt{(\dfrac{\partial f}{\partial x})^2+(\dfrac{\partial f}{\partial y})^2+(\dfrac{\partial f}{\partial z})^2}}\]</span> 从而切平面 <span class="math inline">\(\boldsymbol \alpha\)</span> 方程为 <span class="math display">\[\vec{n_0}\cdot (x-x_0,y-y_0,z-z_0))=0\]</span> 对给定的切平面内一条直线，设其单位方向向量为 <span class="math inline">\(\vec{l}\)</span>，可知 <span class="math inline">\(\vec{l}\in\boldsymbol \alpha\)</span>，从而 <span class="math inline">\(\vec{l}\perp\vec{n_0}\)</span>，构造平面 <span class="math inline">\(\boldsymbol \beta\)</span> 以及空间曲线 <span class="math inline">\(S\)</span> <span class="math display">\[\vec{n_1}=\vec{l}\times \vec{n_0},\vec{n_1}\cdot (x-x_0,y-y_0,z-z_0)=0\]</span></p><p><span class="math display">\[S:\begin{equation}\left\{        \begin{array}{}        f(x,y,z)=0\\        \vec{n_1}\cdot (x-x_0,y-y_0,z-z_0)=0\\        \end{array}\right.\end{equation}\]</span></p><p>该曲线在 <span class="math inline">\((x_0,y_0,z_0)\)</span> 处的切线垂直两个曲面在该处的法向量，即 <span class="math display">\[\vec{l_t}=\vec{n_0}\times \vec{n_1}=\vec{n_0}\times(\vec{l}\times\vec{n_0})=(\vec{n_0}\cdot \vec{n_0})\vec{l}-(\vec{n_0}\cdot \vec{l})\vec{n_0}=1\cdot \vec{l}-0=\vec{l}\]</span> 其切线方向向量与原直线相同，且两者经过同一点 <span class="math inline">\((x_0,y_0,z_0)\)</span> ，结论得证</p><h2 id="习题1.8">习题1.8</h2><h4 id="section-4">1(3)</h4><p><span class="math display">\[\dfrac{\partial u}{\partial x}=\dfrac{1}{1+x+y+z}=1,\dfrac{\partial u}{\partial y}=\dfrac{1}{1+x+y+z}=1,\dfrac{\partial u}{\partial z}=\dfrac{1}{1+x+y+z}=1\]</span> 且有 <span class="math inline">\(Hesse\)</span> 矩阵为 <span class="math display">\[\begin{bmatrix}    \dfrac{\partial ^2 u}{\partial x^2} &amp;\dfrac{\partial ^2 u}{\partial x\partial y}&amp;\dfrac{\partial ^2 u}{\partial x\partial z}\\    \dfrac{\partial ^2 u}{\partial y\partial x} &amp;\dfrac{\partial ^2 u}{\partial y^2}&amp;\dfrac{\partial ^2 u}{\partial y\partial z}\\    \dfrac{\partial ^2 u}{\partial z\partial x}&amp;\dfrac{\partial ^2 u}{\partial z\partial y}&amp;\dfrac{\partial ^2 u}{\partial z^2}\end{bmatrix}=\dfrac{-1}{(1+x+y+z)^2}\cdot \begin{bmatrix}     1 &amp;1 &amp;1\\1 &amp;1 &amp;1\\1 &amp;1 &amp;1\\\end{bmatrix}=\begin{bmatrix}     -1 &amp;-1 &amp;-1\\-1 &amp;-1 &amp;-1\\-1 &amp;-1 &amp;-1\\\end{bmatrix}\]</span> 则其展开为 <span class="math display">\[u=0+x+y+z-\dfrac{1}{2}x^2-\dfrac{1}{2}y^2-\dfrac{1}{2}z^2-2(\dfrac{1}{2}xy+\dfrac{1}{2}xz+\dfrac{1}{2}yz)+o(x^2+y^2+z^2)\]</span> 则带有二阶 <span class="math inline">\(Peano\)</span> 余项的 <span class="math inline">\(Taylor\)</span> 公式为 <span class="math display">\[u=(x+y+z)-\dfrac{1}{2}(x+y+z)^2+o(x^2+y^2+z^2)\]</span></p><p>带有 <span class="math inline">\(Larange\)</span> 余项的 <span class="math inline">\(Taylor\)</span> 公式为 <span class="math display">\[u=x+y+z-\dfrac{1}{2}(\psi+\eta+\alpha)^2\ \ where\ \psi,\eta,\alpha\in[0,1]\]</span></p><h4 id="section-5">2(1)</h4><p>解：<span class="math inline">\(z=x^y\)</span>，有一阶导： <span class="math display">\[\dfrac{\partial z}{\partial x}=y\cdot x^{y-1}=1,\dfrac{\partial z}{\partial y}=\ln (x)\cdot x^y=0\]</span> 二阶导： <span class="math display">\[\dfrac{\partial^2 z}{\partial x^2}=y(y-1)\cdot x^{y-2}=0,\dfrac{\partial ^2 z}{\partial y^2}=\ln ^2(x)\cdot x^y=0,\dfrac{\partial ^2 z}{\partial x\partial y}=x^{y-1}+y\ln x\cdot x^{y-1}=1\]</span> 三阶导： <span class="math display">\[\dfrac{\partial ^3 z}{\partial x^3}=0,\dfrac{\partial ^3 z}{\partial x^2\partial y}=(y-1)x^{y-1}+y\cdot x^{y-2}+y(y-1)\ln x\cdot x^{y-2}=1\]</span></p><p><span class="math display">\[\dfrac{\partial ^3 z}{\partial x\partial y^2}=2\dfrac{\ln x}{x}\cdot x^y+y\ln ^2(x)\cdot x^{y-1}=0,\dfrac{\partial ^3 z}{\partial y^3}=\ln^3 (x)\cdot x^{y}=0\]</span></p><p>从而展开有 <span class="math display">\[z=1+(\dfrac{\partial }{\partial x}+\dfrac{\partial }{\partial y})z+\dfrac{1}{2!}(\dfrac{\partial }{\partial x}+\dfrac{\partial }{\partial y})^2z+\dfrac{1}{3!}(\dfrac{\partial }{\partial x}+\dfrac{\partial }{\partial y})^3z\\ =1+(x-1)+(x-1)(y-1)+\dfrac{1}{2}(x-1)^2(y-1)\]</span> 代入计算有 <span class="math display">\[1.1^{1.02}=1.1+0.1\cdot 0.02+\dfrac{1}{2}\cdot 0.01\cdot0.02=1.1021\]</span> 这与实际值 <span class="math inline">\(1.1^{1.02}\approx1.1020988237128237\)</span>，相对误差为 <span class="math inline">\(-1.07\cdot 10^{-6}\)</span></p><h4 id="section-6">2(2)</h4><p>解：<span class="math inline">\(z=\dfrac{cosx}{cosy}\)</span>，有一阶导： <span class="math display">\[\dfrac{\partial z}{\partial x}=\dfrac{-sinx}{cosy}=0,\dfrac{\partial z}{\partial y}=\dfrac{cosx\cdot siny}{cos^2y}=0\]</span> 二阶导： <span class="math display">\[\dfrac{\partial^2 z}{\partial x^2}=\dfrac{-cosx}{cosy}=-1,\dfrac{\partial ^2 z}{\partial y^2}=cosx\cdot \dfrac{cos^2y+2sin^2y}{cos^3y}=1,\dfrac{\partial ^2 z}{\partial x\partial y}=\dfrac{-sinx\cdot siny}{cos^2y}=0\]</span> 从而展开有 <span class="math display">\[z=1+(\dfrac{\partial }{\partial x}+\dfrac{\partial }{\partial y})z+\dfrac{1}{2!}(\dfrac{\partial }{\partial x}+\dfrac{\partial }{\partial y})^2z=1+\dfrac{1}{2}(-1)\cdot x^2+\dfrac{1}{2}y^2=1+\dfrac{1}{2}(y^2-x^2)\]</span></p><h4 id="section-7">2(3)</h4><p>解：<span class="math inline">\(z=e^{-x}\ln(1+y)\)</span>，有一阶导： <span class="math display">\[\dfrac{\partial z}{\partial x}=-e^{-x}\ln(1+y)=0,\dfrac{\partial z}{\partial y}=e^{-x}\cdot \dfrac{1}{1+y}=1\]</span> 二阶导： <span class="math display">\[\dfrac{\partial^2 z}{\partial x^2}=e^{-x}\ln(1+y)=0,\dfrac{\partial ^2 z}{\partial y^2}=-e^{-x}\cdot \dfrac{1}{(1+y)^2}=-1,\dfrac{\partial ^2 z}{\partial x\partial y}=-e^{-x}\cdot \dfrac{1}{1+y}=-1\]</span> 从而展开有 <span class="math display">\[z=1+(\dfrac{\partial }{\partial x}+\dfrac{\partial }{\partial y})z+\dfrac{1}{2!}(\dfrac{\partial }{\partial x}+\dfrac{\partial }{\partial y})^2z=y+\dfrac{1}{2}(-y^2-2\cdot xy)=\dfrac{1}{2}y(2-y-2x)\]</span></p><h2 id="习题1.9">习题1.9</h2><h4 id="section-8">1(2)</h4><p>对二元函数变形有 <span class="math display">\[u=e^{2x}(x+y^2+2y)=e^{2x}(y+1)^2+e^{2x}(x-1)\geq0+g(x)\]</span> 其中一元函数 <span class="math inline">\(g(x)\)</span> 有 <span class="math display">\[\dfrac{dg(x)}{dx}=e^{2x}(2x-2+1)=e^{2x}(2x-1)\]</span> 当<span class="math inline">\(x\in(-\infty,\dfrac{1}{2})\)</span>时，<span class="math inline">\(g(x)\)</span>单调递增，<span class="math inline">\(x\in(\dfrac{1}{2}，+\infty)\)</span>时，<span class="math inline">\(g(x)\)</span>单调递减</p><p>从而 <span class="math inline">\((\dfrac{1}{2},-1)\)</span> 为原函数的最小值，则对 <span class="math inline">\((\dfrac{1}{2},-1)\)</span> 领域的点集均有 <span class="math inline">\(u(x,y)\geq u(\dfrac{1}{2},-1)=-\dfrac{1}{2}e\)</span></p><p>则 <span class="math inline">\((\dfrac{1}{2},-1)\)</span> 为极小值点，极小值为 <span class="math inline">\(-\dfrac{1}{2}e\)</span></p><h4 id="section-9">1(3)</h4><p>由对该三元函数求一阶导得 <span class="math display">\[\dfrac{\partial u}{\partial x}=cosx-cos(x+y+z),\dfrac{\partial u}{\partial y}=cosy-cos(x+y+z),\dfrac{\partial u}{\partial z}=cosz-cos(x+y+z)\]</span> 当三者均为 <span class="math inline">\(0\)</span> 时有 <span class="math display">\[cosx=cosy=cosz=cos(x+y+z),x,y,z\in[0,{\pi}]\]</span> 由于 <span class="math inline">\(cosx\)</span> 函数在 <span class="math inline">\([0,\pi]\)</span> 区间上是单调的，从而 <span class="math inline">\(x=y=z\)</span>，代入三倍角公式有 <span class="math display">\[cosx=cos(3x)=-3cosx+4cos^3x\]</span> 求二阶导 <span class="math display">\[\dfrac{\partial ^2 u}{\partial x^2}=-sinx+sin(x+y+z),\dfrac{\partial ^2 u}{\partial x \partial y}=sin(x+y+z),\dfrac{\partial ^2 u}{\partial x\partial z}=sin(x+y+z)\\\dfrac{\partial ^2 u}{\partial ^2y}=-siny+sin(x+y+z),\dfrac{\partial ^2 u}{\partial y\partial z}=sin(x+y+z),\dfrac{\partial ^2 u}{\partial z^2}=-sinz+sin(x+y+z)\\\]</span> 解得 <span class="math inline">\(x=0\ 或\ \dfrac{\pi}{2}\)</span>，而当 <span class="math inline">\(x=0\)</span> 为边界点，不可能为极值点，代入 <span class="math inline">\(x=\dfrac{\pi}{2}\)</span> 计算 <span class="math inline">\(Hesse\)</span> 矩阵有 <span class="math display">\[x=\dfrac{\pi}{2},\begin{bmatrix}    \dfrac{\partial ^2 u}{\partial x^2} &amp;\dfrac{\partial ^2 u}{\partial x\partial y}&amp;\dfrac{\partial ^2 u}{\partial x\partial z}\\    \dfrac{\partial ^2 u}{\partial y\partial x} &amp;\dfrac{\partial ^2 u}{\partial y^2}&amp;\dfrac{\partial ^2 u}{\partial y\partial z}\\    \dfrac{\partial ^2 u}{\partial z\partial x}&amp;\dfrac{\partial ^2 u}{\partial z\partial y}&amp;\dfrac{\partial ^2 u}{\partial z^2}\end{bmatrix}=\begin{bmatrix}-2&amp;-1&amp;-1\\-1&amp;-2&amp;-1\\-1&amp;-1&amp;-2\end{bmatrix}\]</span> 计算该矩阵的特征值 <span class="math display">\[\det(\boldsymbol H-\lambda \boldsymbol I)=\begin{vmatrix}-2-\lambda&amp;-1&amp;-1\\-1&amp;-2-\lambda&amp;-1\\-1&amp;-1&amp;-2-\lambda\end{vmatrix}=-(\lambda+1)^2(\lambda+4)，\lambda_1=\lambda_2=-1,\lambda_3=-4\]</span> 从而 <span class="math inline">\(\boldsymbol H\)</span> 矩阵负定，从而 <span class="math inline">\(u(x,y,z)=sinx+siny+sinz-sin(x+y+z)\)</span> 在 <span class="math inline">\((\dfrac{\pi}{2},\dfrac{\pi}{2},\dfrac{\pi}{2})\)</span> 有极大值 <span class="math inline">\(4\)</span></p><blockquote><p>其实该函数 <span class="math inline">\(u(x,y,z)=sinx+siny+sinz-sin(x+y+z)\leq1+1+1+1=4\)</span> 且可以取到</p><p>对应的点为 <span class="math inline">\((\dfrac{\pi}{2},\dfrac{\pi}{2},\dfrac{\pi}{2})\)</span> 在区间内，从而有极大值（最大值）4</p></blockquote><h4 id="section-10">2</h4><p>解：由 <span class="math inline">\(f(x,y,z)=2x^2+2y^2+z^2+8xz-z+8=0\)</span>，全微分有</p><p><span class="math display">\[df=4xdx+4ydy+2zdz+8(xdz+zdx)-dz=0\]</span> 计算一阶偏导数得 <span class="math display">\[\dfrac{\partial z}{\partial x}=-\dfrac{4x+8z}{2z+8x-1},\dfrac{\partial z}{\partial y}=-\dfrac{4y}{2z+8x-1},\]</span> 两者等于 <span class="math inline">\(0\)</span> 时得 <span class="math display">\[\begin{equation}\left\{        \begin{array}{}        x+2z=0&amp;\\        4y=0&amp;\\        f(x,y,z)=0&amp;\\        \end{array}\right.\end{equation}\]</span> 解得 <span class="math inline">\((x,y,z)=(-2,0,1)\ 或\ (\dfrac{16}{7},0,-\dfrac{8}{7})\)</span></p><p>代入一阶导等于 <span class="math inline">\(0\)</span> ，简化计算 <span class="math inline">\(Hesse\)</span> 矩阵得 <span class="math display">\[\dfrac{\partial ^2z}{\partial x^2}=\dfrac{56z+4}{(2z+8x-1)^2}+\dfrac{-56x+8}{(2z+8x-1)^2}\dfrac{\partial z}{\partial x}=\dfrac{56z+4}{(2z+8x-1)^2}\\\dfrac{\partial ^2z}{\partial y^2}=\dfrac{-4}{(2z+8x-1)}+\dfrac{32y}{(2z+8x-1)^2}\dfrac{\partial x}{\partial y}=\dfrac{-4}{(2z+8x-1)}\\\dfrac{\partial ^2z}{\partial y\partial x}=\dfrac{\partial }{\partial y}(-\dfrac{4x+8z}{2z+8x-1})=\dfrac{56z+4}{(2z+8x-1)^2}\dfrac{\partial x}{\partial y}=0\]</span> 代入 <span class="math inline">\((-2,0,1)\)</span> 点计算 <span class="math inline">\(Hesse\)</span> 矩阵，该矩阵为正定矩阵 <span class="math display">\[\begin{bmatrix}\dfrac{\partial ^2z}{\partial x^2}&amp;\dfrac{\partial ^2z}{\partial x\partial y}\\\dfrac{\partial ^2z}{\partial y\partial x}&amp;\dfrac{\partial ^2z}{\partial y^2}\end{bmatrix}=\begin{bmatrix}\dfrac{4}{15}&amp;0\\0&amp;\dfrac{4}{15}\end{bmatrix}\]</span></p><p>代入 <span class="math inline">\((\dfrac{16}{7},0,-\dfrac{8}{7})\)</span> 点计算 <span class="math inline">\(Hesse\)</span> 矩阵，该矩阵为负定矩阵 <span class="math display">\[\begin{bmatrix}\dfrac{\partial ^2z}{\partial x^2}&amp;\dfrac{\partial ^2z}{\partial x\partial y}\\\dfrac{\partial ^2z}{\partial y\partial x}&amp;\dfrac{\partial ^2z}{\partial y^2}\end{bmatrix}=\begin{bmatrix}-\dfrac{4}{15}&amp;0\\0&amp;-\dfrac{4}{15}\end{bmatrix}\]</span> 从而 <span class="math inline">\(z=z(x,y)\)</span> 有极大值 <span class="math inline">\(-\dfrac{8}{7}\)</span>，有极小值 <span class="math inline">\(1\)</span></p><blockquote><p>该曲面为双叶双曲面，图像如下，可以看出极大值在下方，极小值在上方</p></blockquote><p><img src="https://pic.imgdb.cn/item/620d29d22ab3f51d91ed448e.jpg" style="zoom:67%;" /></p><h4 id="section-11">4(1)</h4><p>解：由 <span class="math inline">\(z(x,y)=(x^2+2y^2)e^{-x^2-y^2}\)</span> 求一阶导 <span class="math display">\[\dfrac{\partial z}{\partial x}=(2x+(x^2+2y^2)\cdot (-2x))e^{-x^2-y^2}=2x(1-x^2-2y^2)e^{-x^2-y^2}\\\dfrac{\partial z}{\partial y}=(4y+(x^2+2y^2)\cdot (-2y))e^{-x^2-y^2}=2y(2-x^2-2y^2)e^{-x^2-y^2}\]</span> 当 <span class="math inline">\(\dfrac{\partial z}{\partial x}=\dfrac{\partial z}{\partial y}=0\)</span> 解得 <span class="math inline">\((x,y)=(0,0),(0,1),(0,-1),(1,0),(-1,0)\)</span> ，计算 <span class="math inline">\(Hesse\)</span> 矩阵得 <span class="math display">\[\begin{bmatrix}\dfrac{\partial ^2z}{\partial x^2}&amp;\dfrac{\partial ^2z}{\partial x\partial y}\\\dfrac{\partial ^2z}{\partial y\partial x}&amp;\dfrac{\partial ^2z}{\partial y^2}\end{bmatrix}=e^{-x^2-y^2}\begin{bmatrix}2(1-5x^2-2y^2-2x^2(x^2+2y^2))&amp;-4xy(3-x^2-2y^2)\\-4xy(3-x^2-2y^2)&amp;2(2-x^2-10y^2+2y^2(x^2+2y^2))\end{bmatrix}\]</span> 代入分别计算得 <span class="math display">\[\boldsymbol H_1=\begin{bmatrix}2&amp;0\\0&amp;4 \end{bmatrix},\boldsymbol H_2=\begin{bmatrix}-2&amp;0\\0&amp;-8 \end{bmatrix},\boldsymbol H_3=\begin{bmatrix}-2&amp;0\\0&amp;-8 \end{bmatrix},\boldsymbol H_4=\begin{bmatrix}-8&amp;0\\0&amp;2 \end{bmatrix},\boldsymbol H_5=\begin{bmatrix}-8&amp;0\\0&amp;2 \end{bmatrix},\]</span> 由对角矩阵的特征值即为对角元得只有 <span class="math inline">\(\boldsymbol H_1,\boldsymbol H_2\)</span> 满足条件，两者分别为正定矩阵和负定矩阵，则</p><p>当 <span class="math inline">\(x=y=0\)</span> 时，函数取极小值 <span class="math inline">\(0\)</span>，且 <span class="math inline">\(0\)</span> 为最小值；当 <span class="math inline">\(x=0,y=\pm 1\)</span> 时，函数取极大值，最大值为 <span class="math inline">\(\dfrac{2}{e}\)</span></p><blockquote><p>由于多元函数连续可导，可以代入五组解后求最大值最小值</p><p>也可以直接放缩，<span class="math inline">\(u(x,y)\geq0\)</span>，<span class="math inline">\(u(x,y)=2(x^2+y^2)e^{-x^2-y^2}-y^2e^{-x^2-y^2}\leq2\rho^2e^{-\rho^2}\leq\dfrac{2}{e}\)</span>，得解</p></blockquote><h4 id="section-12">4(2)</h4><p>解：对 <span class="math inline">\(z(x,y)=xy(4-x-y)\)</span> 求一阶导 <span class="math display">\[\dfrac{\partial z}{\partial x}=y(4-x-y)-xy=y(4-2x-y)\\\dfrac{\partial z}{\partial y}=x(4-x-y)-xy=x(4-x-2y)\\\]</span> 当 <span class="math inline">\(\dfrac{\partial z}{\partial x}=\dfrac{\partial z}{\partial y}=0\)</span> 时解得 <span class="math inline">\(x=y=\dfrac{4}{3}\)</span>，计算 <span class="math inline">\(Hesse\)</span> 矩阵得 <span class="math display">\[\boldsymbol H=\begin{bmatrix}\dfrac{\partial ^2z}{\partial x^2}&amp;\dfrac{\partial ^2z}{\partial x\partial y}\\\dfrac{\partial ^2z}{\partial y\partial x}&amp;\dfrac{\partial ^2z}{\partial y^2}\end{bmatrix}=\begin{bmatrix}-2y&amp;4-2x-2y\\4-2x-2y&amp;-2x\end{bmatrix}=\begin{bmatrix}-\dfrac{8}{3}&amp;-\dfrac{4}{3}\\-\dfrac{4}{3}&amp;-\dfrac{8}{3}\\\end{bmatrix}\]</span> 计算其特征值有 <span class="math display">\[\det(\boldsymbol H-\lambda\boldsymbol I)=\begin{bmatrix}-\dfrac{8}{3}-\lambda&amp;-\dfrac{4}{3}\\-\dfrac{4}{3}&amp;-\dfrac{8}{3}-\lambda\\\end{bmatrix}=(\lambda+\dfrac{8}{3})^2-\dfrac{16}{9}=0\]</span> 解得 <span class="math inline">\(\lambda_1=-\dfrac{4}{3},\lambda_2=-4\)</span>，从而 <span class="math inline">\(\boldsymbol H\)</span> 为负定矩阵，对应极大值点，有 <span class="math inline">\(z(\dfrac{4}{3},\dfrac{4}{3})=\dfrac{64}{27}\)</span>，代入边界点计算 <span class="math display">\[y=0\to z(x,0)=0\\x=1\to z(1,y)=y(3-y),y\in[0,5],y(3-y)\in[-10,\dfrac{9}{4}]\\x+y=6\to z(x,6-x)=-2x(6-x),x\in[1,6],-2x(6-x)\in[-18,0]\]</span> 从而 <span class="math inline">\(z(x,y)=xy(4-x-y)\)</span> 的最大值为 <span class="math inline">\(\dfrac{64}{27}\)</span>，最小值为 <span class="math inline">\(-18\)</span></p><h4 id="section-13">14</h4><p>解：设二次多项式曲线为 <span class="math inline">\(\hat{y}=ax^2+bx+c\)</span> ，有距离平方和为 <span class="math display">\[f(a,b,c)=\sum_i|d|^2=\sum_i(ax_i^2+bx_i+c-y_i)^2\]</span> 调整 <span class="math inline">\(a,b,c\)</span> 三个参数使得函数值最小，则对三参数求偏导等于 <span class="math inline">\(0\)</span> <span class="math display">\[\dfrac{\partial f}{\partial a}=2\sum_ix_i^2(ax_i^2+bx_i+c-y_i)=0\\\dfrac{\partial f}{\partial b}=2\sum_ix_i(ax_i^2+bx_i+c-y_i)=0\\\dfrac{\partial f}{\partial c}=2\sum_i(ax_i^2+bx_i+c-y_i)=0\\\]</span> 写成矩阵的形式有 <span class="math display">\[\begin{bmatrix}\sum_i x_i^4&amp;\sum_i x_i^3&amp;\sum_i x_i^2\\\sum_i x_i^3&amp;\sum_i x_i^2&amp;\sum_i x_i\\\sum_i x_i^2&amp;\sum_i x_i&amp;\sum_i 1\end{bmatrix}\begin{bmatrix}a\\b\\c\end{bmatrix}=\begin{bmatrix}\sum_i x_i^2y_i\\\sum_i x_iy_i\\\sum_i y_i\\\end{bmatrix}\]</span> 代入数据得 <span class="math display">\[\begin{bmatrix}979&amp;225&amp;55\\225&amp;55&amp;15\\55&amp;15&amp;5\end{bmatrix}\begin{bmatrix}a\\b\\c\end{bmatrix}=\begin{bmatrix}370.8\\94\\28\end{bmatrix}\]</span> 高斯消元解得 <span class="math inline">\((a,b,c)=(\dfrac{1}{5},-\dfrac{1}{5},4)\)</span>，即 <span class="math inline">\(\hat{y}=\dfrac{1}{5}x^2-\dfrac{1}{5}x+4\)</span>，作图如下</p><p>代入 <span class="math inline">\(x=12\)</span> 得 <span class="math inline">\(\hat{y}=30.4\)</span> ，由此估计12月份的营业额为 <span class="math inline">\(30.4\)</span> 百万元</p><p><img src="https://pic.imgdb.cn/item/620d29d22ab3f51d91ed4493.png" style="zoom:80%;" /></p><h2 id="第一章总复习题">第一章总复习题</h2><h4 id="section-14">16</h4><p>证明：在约束条件 <span class="math inline">\(g(x,y)=xy-1=0\)</span> 下求 <span class="math inline">\(f(x,y)=\dfrac{1}{p}x^p+\dfrac{1}{q}y^q\)</span> 的最小值，作 <span class="math inline">\(Lagrange\)</span> 函数 <span class="math display">\[L=\dfrac{1}{p}x^p+\dfrac{1}{q}y^q+\lambda(xy-1)\]</span> 则计算偏导数等于 <span class="math inline">\(0\)</span> 得 <span class="math display">\[\dfrac{\partial L}{\partial x}=x^{p-1}+\lambda y=0,\dfrac{\partial L}{\partial y}=y^{q-1}+\lambda x=0\]</span> 有 <span class="math inline">\(\lambda=-\dfrac{x^{p-1}}{y}=-\dfrac{y^{q-1}}{x}\)</span>，得 <span class="math inline">\(x^{p}=y^{q}=y^{-p}\)</span>，由于 <span class="math inline">\(p,q&gt;0\)</span> 则此时 <span class="math inline">\(x=y=1\)</span> 最小值为 <span class="math inline">\(\dfrac{1}{p}+\dfrac{1}{q}\)</span></p><p>令 <span class="math inline">\(X=\dfrac{x}{(xy)^{\frac{1}{p}}},Y=\dfrac{y}{(xy)^{\frac{1}{q}}}\)</span> 有 <span class="math inline">\(XY=1\)</span> 则由上述结论有 <span class="math inline">\(\dfrac{1}{p}X^p+\dfrac{1}{q}Y^q\geq\dfrac{1}{p}+\dfrac{1}{q}=1\)</span></p><p>回代得到 <span class="math inline">\(Young\)</span> 不等式 <span class="math inline">\(\dfrac{1}{p}x^p+\dfrac{1}{q}y^q\geq xy\)</span></p><h4 id="section-15">17</h4><p>由二维欧式空间距离定义，先固定 <span class="math inline">\(f(x,y)\)</span> 上的点 <span class="math inline">\((a,b)\)</span> ，变化 <span class="math inline">\(g(x,y)\)</span> 曲线上的点，作 <span class="math inline">\(Lagrange\)</span> 函数 <span class="math display">\[d=\sqrt{(x-a)^2+(y-b)^2}，L=\sqrt{(x-a)^2+(y-b)^2}+\lambda g(x,y)\]</span> 对 <span class="math inline">\(x,y\)</span> 求偏导数有 <span class="math display">\[\dfrac{\partial L}{\partial x}=\dfrac{x-a}{\sqrt{(x-a)^2+(y-b)^2}}+\lambda\dfrac{\partial g}{\partial x}=0\\\dfrac{\partial L}{\partial y}=\dfrac{y-b}{\sqrt{(x-a)^2+(y-b)^2}}+\lambda\dfrac{\partial g}{\partial y}=0\]</span> 消去 <span class="math inline">\(\lambda\)</span> 得 <span class="math inline">\(\dfrac{x-a}{y-b}=\dfrac{\dfrac{\partial g}{\partial x}}{\dfrac{\partial g}{\partial y} }=\dfrac{a-c}{b-d}\)</span>，由对称性得对 <span class="math inline">\(f(x,y)=0\)</span> 也成立，即 <span class="math inline">\(\dfrac{a-c}{b-d}=\dfrac{\dfrac{\partial g}{\partial x}}{\dfrac{\partial g}{\partial y}}=\dfrac{\dfrac{\partial f}{\partial x}}{\dfrac{\partial f}{\partial y}}\)</span></p><p>对椭圆 <span class="math inline">\(x^2+2xy+5y^2-16y=0\)</span> 和 <span class="math inline">\(x-y-8=0\)</span> 代入有方程组 <span class="math display">\[\begin{equation}\left\{        \begin{array}{}        \dfrac{a-c}{b-d}=\dfrac{2a+2b}{2a+10b-16}=-1\\        a^2+2ab+5b^2-16b=0\\        c-d-8=0        \end{array}\right.\end{equation}\]</span> 解得 <span class="math inline">\((a,b,c,d)=(-2+3\sqrt{2},2-\sqrt{2},4+\sqrt{2},-4+\sqrt{2}),(-2-3\sqrt{2},2+\sqrt{2},4-\sqrt{2},-4-\sqrt{2})\)</span></p><p>计算最小值有 <span class="math inline">\(d_{min}=6\sqrt{2}-4\)</span></p>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
      <category>多元微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多元微积分作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
